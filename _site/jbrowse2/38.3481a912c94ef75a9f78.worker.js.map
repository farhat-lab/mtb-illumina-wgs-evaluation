{"version":3,"sources":["../../../plugins/alignments/src/LinearPileupDisplay/components/SortByTag.tsx"],"names":["useStyles","makeStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","observer","props","classes","model","handleClose","useState","tag","setTag","validTag","match","open","onClose","aria-label","className","onClick","value","onChange","event","target","placeholder","inputProps","maxLength","error","length","helperText","autoComplete","data-testid","variant","setSortedBy"],"mappings":"4LAeMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,OAAQ,EACRC,QAASH,EAAMI,QAAQ,IAEzBC,YAAa,CACXC,SAAU,WACVC,MAAOP,EAAMI,QAAQ,GACrBI,IAAKR,EAAMI,QAAQ,GACnBK,MAAOT,EAAMU,QAAQC,KAAK,UA4DfC,8BAxDf,SAAsBC,GAIpB,IAAMC,EAAUhB,IACRiB,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,YAFd,EAGqBC,mBAAS,IAH9B,mBAGMC,EAHN,KAGWC,EAHX,KAIKC,EAAWF,EAAIG,MAAM,yBAC3B,OACE,kBAAC,IAAD,CAAQC,MAAI,EAACC,QAASP,GACpB,kBAAC,IAAD,mBAEE,kBAAC,IAAD,CACEQ,aAAW,QACXC,UAAWX,EAAQT,YACnBqB,QAASV,GAET,kBAAC,IAAD,QAGJ,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,+BACA,kBAAC,IAAD,CAAYP,MAAM,iBAAlB,uDAGA,kBAAC,IAAD,CACEkB,MAAOT,EACPU,SAAU,SAAAC,GACRV,EAAOU,EAAMC,OAAOH,QAEtBI,YAAY,iBACZC,WAAY,CACVC,UAAW,EACX,cAAe,uBAEjBC,MAAsB,IAAfhB,EAAIiB,SAAiBf,EAC5BgB,WAA2B,IAAflB,EAAIiB,QAAiBf,EAA+B,GAApB,kBAC5CiB,aAAa,MACbC,cAAY,kBAEd,kBAAC,IAAD,CACEC,QAAQ,YACR9B,MAAM,UACNiB,QAAS,WACPX,EAAMyB,YAAY,MAAOtB,GACzBF,MALJ","file":"38.3481a912c94ef75a9f78.worker.js","sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  TextField,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nfunction SortByTagDlg(props: {\n  model: { setSortedBy: Function }\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  const { model, handleClose } = props\n  const [tag, setTag] = useState('')\n  const validTag = tag.match(/^[A-Za-z][A-Za-z0-9]$/)\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        Sort by tag\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <div>\n          <Typography>Set the tag to sort by</Typography>\n          <Typography color=\"textSecondary\">\n            Examples: HP for haplotype, RG for read group, etc.\n          </Typography>\n          <TextField\n            value={tag}\n            onChange={event => {\n              setTag(event.target.value)\n            }}\n            placeholder=\"Enter tag name\"\n            inputProps={{\n              maxLength: 2,\n              'data-testid': 'sort-tag-name-input',\n            }}\n            error={tag.length === 2 && !validTag}\n            helperText={tag.length === 2 && !validTag ? 'Not a valid tag' : ''}\n            autoComplete=\"off\"\n            data-testid=\"sort-tag-name\"\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              model.setSortedBy('tag', tag)\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\nexport default observer(SortByTagDlg)\n"],"sourceRoot":""}