{"version":3,"sources":["../../../node_modules/@material-ui/icons/KeyboardArrowUp.js","../../../node_modules/@material-ui/icons/FilterList.js","../../../node_modules/@material-ui/icons/PermDataSetting.js","../../../node_modules/@material-ui/icons/Check.js","../../../node_modules/@material-ui/icons/CropFree.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/ImportWizard.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/ColumnMenu.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/RowMenu.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/Spreadsheet.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/GlobalFilterControls.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/ColumnFilterControls.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/SpreadsheetView.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","theme","root","position","padding","background","errorCard","width","margin","border","buttonContainer","marginTop","NumberEditor","observer","model","disabled","modelPropName","modelSetterName","useState","val","setVal","useEffect","num","parseInt","Number","type","onChange","evt","style","verticalAlign","ImportForm","classes","showColumnNameRowControls","selectedAssemblyIdx","setSelectedAssemblyIdx","fileType","fileTypes","setFileType","hasColumnNameLine","toggleHasColumnNameLine","assemblyChoices","container","spacing","direction","alignItems","item","component","location","setLocation","localFileAllowed","className","formControl","aria-label","name","fileTypeName","key","checked","onClick","control","label","labelPlacement","fullWidth","readConfObject","assembly","idx","variant","color","canCancel","data-testid","import","ErrorDisplay","errorMessage","String","errorContainer","viewModel","spreadsheetModel","currentColumnMenu","setColumnMenu","columnMenuClose","columnNumber","sortMenuClick","descending","dataTypeChoices","dataTypeTopLevelMenu","dataTypeRecord","displayName","categoryName","isCategory","subMenuItems","dataType","dataTypeName","dataTypeDisplayName","isSortingAscending","Boolean","col","isSortingDescending","menuItems","icon","subMenu","record","typeName","menuEntry","i","subTypeName","filterMenuClick","anchorEl","open","onMenuItemClick","callback","onClose","anchorOrigin","vertical","horizontal","RowMenu","currentRowMenu","rowMenuPosition","setRowMenuPosition","rowMenuClose","rowNumber","undefined","row","rowSet","rows","rowMenuItems","map","_event","marginBottom","grey","overflow","dataTable","borderCollapse","borderSpacing","boxSizing","maxWidth","textOverflow","dataTableBody","rowNumCell","textAlign","whiteSpace","userSelect","fontWeight","display","flex","paddingRight","rowMenuButton","right","rowMenuButtonIcon","rowSelector","top","columnHead","zIndex","sortIndicator","fontSize","columnButtonContainer","height","borderLeft","columnButton","topLeftCorner","minWidth","dataRowSelected","indigo","emptyMessage","captionSide","CellData","cell","spreadsheet","DataRow","rowModel","hideRowSelection","columnDisplayOrder","rowClass","labelClick","id","event","colNumber","SortIndicator","sortSpec","c","DataTableBody","page","rowsPerPage","DataTable","columns","hasColumnNames","currentTarget","currentHoveredColumn","setHoveredColumn","totalRows","getParent","title","placement","columnButtonIcon","onMouseOver","columnHeaderMouseOver","onMouseOut","columnHeaderMouseOut","n","letterFor","Math","RangeError","numToColName","columnButtonClick","textFilterControlEndAdornment","marginRight","TextFilter","textFilter","textFilterValue","setTextFilterValue","debouncedTextFilter","useDebounce","filterControls","InputProps","startAdornment","endAdornment","columnName","columnFilter","filterIcon","filterIconBg","FilterOperations","filterModel","columnDefinition","Error","header","paddingLeft","contentArea","viewControls","rowCount","marginLeft","statusBar","left","bottom","borderTop","verticallyCenter","justifyContent","flexDirection","spacer","flexGrow","textFilterControlAdornment","ViewControls","RowCountMessage","passingFiltersCount","count","selectedCount","selectedAndPassingFiltersCount","rowMessage","selectedAndNotPassingFiltersCount","SpreadsheetView","colFilterCount","React","setPage","setRowsPerPage","filter","importWizard","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","onDrag"],"mappings":"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","file":"17.3481a912c94ef75a9f78.worker.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18.99 11.5c.34 0 .67.03 1 .07L20 0 0 20h11.56c-.04-.33-.07-.66-.07-1 0-4.14 3.36-7.5 7.5-7.5zm3.71 7.99c.02-.16.04-.32.04-.49 0-.17-.01-.33-.04-.49l1.06-.83c.09-.08.12-.21.06-.32l-1-1.73c-.06-.11-.19-.15-.31-.11l-1.24.5c-.26-.2-.54-.37-.85-.49l-.19-1.32c-.01-.12-.12-.21-.24-.21h-2c-.12 0-.23.09-.25.21l-.19 1.32c-.3.13-.59.29-.85.49l-1.24-.5c-.11-.04-.24 0-.31.11l-1 1.73c-.06.11-.04.24.06.32l1.06.83c-.02.16-.03.32-.03.49 0 .17.01.33.03.49l-1.06.83c-.09.08-.12.21-.06.32l1 1.73c.06.11.19.15.31.11l1.24-.5c.26.2.54.37.85.49l.19 1.32c.02.12.12.21.25.21h2c.12 0 .23-.09.25-.21l.19-1.32c.3-.13.59-.29.84-.49l1.25.5c.11.04.24 0 .31-.11l1-1.73c.06-.11.03-.24-.06-.32l-1.07-.83zm-3.71 1.01c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"\n}), 'PermDataSetting');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 5v4h2V5h4V3H5c-1.1 0-2 .9-2 2zm2 10H3v4c0 1.1.9 2 2 2h4v-2H5v-4zm14 4h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zm0-16h-4v2h4v4h2V5c0-1.1-.9-2-2-2z\"\n}), 'CropFree');\n\nexports.default = _default;","import React, { useState, useEffect } from 'react'\n\nimport {\n  Card,\n  CardContent,\n  FormControl,\n  FormGroup,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n  RadioGroup,\n  Radio,\n  Container,\n  Button,\n  Grid,\n  Typography,\n  TextField,\n  MenuItem,\n  Select,\n  makeStyles,\n} from '@material-ui/core'\n\nimport { observer } from 'mobx-react'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport { readConfObject } from '@jbrowse/core/configuration'\n\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      position: 'relative',\n      padding: theme.spacing(1),\n      background: 'white',\n    },\n    errorCard: {\n      width: '50%',\n      margin: [[theme.spacing(2), 'auto']],\n      border: [['2px', 'solid', theme.palette.error.main]],\n    },\n    buttonContainer: { marginTop: theme.spacing(1) },\n  }\n})\n\nconst NumberEditor = observer(\n  ({ model, disabled, modelPropName, modelSetterName }) => {\n    const [val, setVal] = useState(model[modelPropName])\n    useEffect(() => {\n      const num = parseInt(val, 10)\n      if (!Number.isNaN(num)) {\n        if (num > 0) model[modelSetterName](num)\n        else setVal(1)\n      }\n    }, [model, modelSetterName, val])\n    return (\n      <TextField\n        value={val}\n        disabled={disabled}\n        type=\"number\"\n        onChange={evt => setVal(evt.target.value)}\n        style={{ width: '2rem', verticalAlign: 'baseline' }}\n      />\n    )\n  },\n)\nconst ImportForm = observer(({ model }) => {\n  const classes = useStyles()\n  const showColumnNameRowControls =\n    model.fileType === 'CSV' || model.fileType === 'TSV'\n\n  const {\n    selectedAssemblyIdx,\n    setSelectedAssemblyIdx,\n    fileType,\n    fileTypes,\n    setFileType,\n    hasColumnNameLine,\n    toggleHasColumnNameLine,\n    assemblyChoices,\n  } = model\n\n  return (\n    <Container>\n      <Grid\n        style={{ width: '25rem', margin: '0 auto' }}\n        container\n        spacing={1}\n        direction=\"column\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Tabular file</FormLabel>\n            <FormGroup>\n              <FileSelector\n                location={model.fileSource}\n                setLocation={model.setFileSource}\n                localFileAllowed\n              />\n            </FormGroup>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\">File Type</FormLabel>\n            <RadioGroup aria-label=\"file type\" name=\"type\" value={fileType}>\n              <Grid container spacing={1} direction=\"row\">\n                {fileTypes.map(fileTypeName => {\n                  return (\n                    <Grid item key={fileTypeName}>\n                      <FormControlLabel\n                        checked={fileType === fileTypeName}\n                        value={fileTypeName}\n                        onClick={() => setFileType(fileTypeName)}\n                        control={<Radio />}\n                        label={fileTypeName}\n                      />\n                    </Grid>\n                  )\n                })}\n              </Grid>\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        {showColumnNameRowControls ? (\n          <Grid item>\n            <FormControl component=\"fieldset\" className={classes.formControl}>\n              <FormLabel component=\"legend\">Column Names</FormLabel>\n              <div>\n                <FormControlLabel\n                  disabled={!showColumnNameRowControls}\n                  label=\"has column names on line\"\n                  labelPlacement=\"end\"\n                  control={\n                    <Checkbox\n                      checked={hasColumnNameLine}\n                      onClick={toggleHasColumnNameLine}\n                    />\n                  }\n                />\n                <NumberEditor\n                  model={model}\n                  disabled={!showColumnNameRowControls || !hasColumnNameLine}\n                  modelPropName=\"columnNameLineNumber\"\n                  modelSetterName=\"setColumnNameLineNumber\"\n                />\n              </div>\n            </FormControl>\n          </Grid>\n        ) : null}\n        <Grid item>\n          <FormControl fullWidth>\n            <FormLabel component=\"legend\">Associated with assembly</FormLabel>\n            <Select\n              value={selectedAssemblyIdx}\n              onChange={evt => setSelectedAssemblyIdx(evt.target.value)}\n            >\n              {assemblyChoices.map((assembly, idx) => {\n                const name = readConfObject(assembly, 'name')\n                return (\n                  <MenuItem key={name} value={idx}>\n                    {name}\n                  </MenuItem>\n                )\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item className={classes.buttonContainer}>\n          {model.canCancel ? (\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              onClick={model.cancelButton}\n              disabled={!model.canCancel}\n            >\n              Cancel\n            </Button>\n          ) : null}{' '}\n          <Button\n            disabled={!model.isReadyToOpen}\n            variant=\"contained\"\n            data-testid=\"open_spreadsheet\"\n            color=\"primary\"\n            onClick={model.import}\n          >\n            Open\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nconst ErrorDisplay = observer(({ errorMessage }) => {\n  const classes = useStyles()\n  return (\n    <Card className={classes.errorCard}>\n      <CardContent>\n        <Typography variant=\"h6\" color=\"error\">\n          {String(errorMessage)}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n})\n\nconst ImportWizard = observer(({ model }) => {\n  const classes = useStyles()\n  return (\n    <>\n      {model.error ? (\n        <Container className={classes.errorContainer}>\n          <ErrorDisplay errorMessage={`${model.error}`} />\n        </Container>\n      ) : null}\n      <ImportForm model={model} />\n    </>\n  )\n})\n\nexport default ImportWizard\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { iterMap } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport CheckIcon from '@material-ui/icons/Check'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport PermDataSettingIcon from '@material-ui/icons/PermDataSetting'\nimport SortIcon from '@material-ui/icons/Sort'\n\nconst ColumnMenu = observer(\n  ({ viewModel, spreadsheetModel, currentColumnMenu, setColumnMenu }) => {\n    const columnMenuClose = () => {\n      setColumnMenu(null)\n    }\n\n    function handleMenuItemClick(event, callback) {\n      callback()\n      columnMenuClose(null)\n    }\n\n    const columnNumber = currentColumnMenu && currentColumnMenu.colNumber\n\n    const sortMenuClick = descending => {\n      spreadsheetModel.setSortColumns([\n        {\n          columnNumber,\n          descending,\n        },\n      ])\n    }\n\n    const filterMenuClick = () => {\n      viewModel.filterControls.addBlankColumnFilter(columnNumber)\n    }\n\n    const { dataTypeChoices } = spreadsheetModel\n\n    // make a Map of categoryName => [entry...]\n    const dataTypeTopLevelMenu = new Map()\n    dataTypeChoices.forEach(dataTypeRecord => {\n      const { displayName, categoryName } = dataTypeRecord\n      if (categoryName) {\n        if (!dataTypeTopLevelMenu.has(categoryName)) {\n          dataTypeTopLevelMenu.set(categoryName, {\n            isCategory: true,\n            subMenuItems: [],\n          })\n        }\n        dataTypeTopLevelMenu.get(categoryName).subMenuItems.push(dataTypeRecord)\n      } else {\n        dataTypeTopLevelMenu.set(displayName, dataTypeRecord)\n      }\n    })\n\n    const dataType =\n      currentColumnMenu && spreadsheetModel.columns[columnNumber].dataType\n    const dataTypeName = (dataType && dataType.type) || ''\n    const dataTypeDisplayName =\n      (currentColumnMenu &&\n        spreadsheetModel.columns[columnNumber].dataType.displayName) ||\n      ''\n\n    const isSortingAscending = Boolean(\n      spreadsheetModel.sortColumns.length &&\n        currentColumnMenu &&\n        spreadsheetModel.sortColumns.find(\n          col =>\n            col.columnNumber === currentColumnMenu.colNumber && !col.descending,\n        ),\n    )\n    const isSortingDescending = Boolean(\n      spreadsheetModel.sortColumns.length &&\n        currentColumnMenu &&\n        spreadsheetModel.sortColumns.find(\n          col =>\n            col.columnNumber === currentColumnMenu.colNumber && col.descending,\n        ),\n    )\n    function stopSortingClick() {\n      columnMenuClose()\n      spreadsheetModel.setSortColumns([])\n    }\n\n    const menuItems = [\n      // top-level column menu\n      {\n        label: 'Sort ascending',\n        icon: SortIcon,\n        type: 'radio',\n        checked: isSortingAscending,\n        onClick: isSortingAscending\n          ? stopSortingClick\n          : sortMenuClick.bind(null, false),\n      },\n      {\n        label: 'Sort descending',\n        icon: SortIcon,\n        type: 'radio',\n        checked: isSortingDescending,\n        onClick: isSortingDescending\n          ? stopSortingClick\n          : sortMenuClick.bind(null, true),\n      },\n      // data type menu\n      {\n        label: `Type: ${dataTypeDisplayName}`,\n        icon: PermDataSettingIcon,\n        subMenu: iterMap(\n          dataTypeTopLevelMenu.entries(),\n          ([displayName, record]) => {\n            const { subMenuItems, typeName } = record\n            if (typeName) {\n              const menuEntry = {\n                label: displayName || typeName,\n                onClick: () => {\n                  spreadsheetModel.setColumnType(columnNumber, typeName)\n                },\n              }\n              if (dataTypeName === typeName) {\n                menuEntry.icon = CheckIcon\n              }\n              return menuEntry\n            }\n            if (subMenuItems) {\n              return {\n                label: displayName,\n                icon: subMenuItems.find(i => i.typeName === dataTypeName)\n                  ? CheckIcon\n                  : undefined,\n                subMenu: subMenuItems.map(\n                  ({ typeName: subTypeName, displayName: subDisplayName }) => ({\n                    label: subDisplayName,\n                    icon: subTypeName === dataTypeName ? CheckIcon : undefined,\n                    onClick: () => {\n                      spreadsheetModel.setColumnType(columnNumber, subTypeName)\n                    },\n                  }),\n                ),\n              }\n            }\n            return null\n          },\n        ).filter(Boolean),\n      },\n    ]\n\n    // don't display the filter item if this data type doesn't have filtering\n    // implemented\n    if (dataType && dataType.hasFilter) {\n      menuItems.push({\n        label: 'Create filter',\n        icon: FilterListIcon,\n        onClick: filterMenuClick.bind(null, true),\n      })\n    }\n\n    return (\n      <Menu\n        anchorEl={currentColumnMenu && currentColumnMenu.anchorEl}\n        open={Boolean(currentColumnMenu)}\n        onMenuItemClick={handleMenuItemClick}\n        onClose={columnMenuClose}\n        menuItems={menuItems}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n      />\n    )\n  },\n)\n\nexport default ColumnMenu\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Menu, MenuItem } from '@jbrowse/core/ui'\nimport { InstanceOfModelReturnedBy } from '@jbrowse/core/util'\n\nimport SpreadsheetModelF from '../models/Spreadsheet'\nimport ViewModelF from '../models/SpreadsheetView'\n\nexport interface Props {\n  viewModel: InstanceOfModelReturnedBy<typeof ViewModelF>\n  spreadsheetModel: InstanceOfModelReturnedBy<typeof SpreadsheetModelF>\n}\n\nconst RowMenu = observer(({ viewModel, spreadsheetModel }: Props) => {\n  const currentRowMenu = spreadsheetModel.rowMenuPosition\n  const { setRowMenuPosition } = spreadsheetModel\n\n  const rowMenuClose = () => {\n    setRowMenuPosition(null)\n  }\n\n  const rowNumber = spreadsheetModel.rowMenuPosition?.rowNumber\n  if (rowNumber === undefined) return null\n\n  const row = spreadsheetModel.rowSet.rows[rowNumber - 1]\n\n  function handleMenuItemClick(_event: unknown, callback: Function) {\n    callback(viewModel, spreadsheetModel, rowNumber, row)\n    rowMenuClose()\n  }\n\n  // got through and evaluate all the `disabled` callbacks of the menu items\n  const menuItems: MenuItem[] = viewModel.rowMenuItems.map(item => {\n    if (typeof item.disabled === 'function') {\n      const disabled = item.disabled(\n        viewModel,\n        spreadsheetModel,\n        rowNumber,\n        row,\n      )\n      return { ...item, disabled }\n    }\n    return item\n  })\n\n  return (\n    <Menu\n      anchorEl={currentRowMenu && currentRowMenu.anchorEl}\n      open={Boolean(currentRowMenu)}\n      onMenuItemClick={handleMenuItemClick}\n      onClose={rowMenuClose}\n      menuItems={menuItems}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n    />\n  )\n})\n\nexport default RowMenu\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getParent } from 'mobx-state-tree'\nimport { grey, indigo } from '@material-ui/core/colors'\nimport {\n  Checkbox,\n  IconButton,\n  Tooltip,\n  FormControlLabel,\n  makeStyles,\n} from '@material-ui/core'\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\nimport CropFreeIcon from '@material-ui/icons/CropFree'\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown'\nimport ColumnMenu from './ColumnMenu'\nimport RowMenu from './RowMenu'\n\n/* eslint-disable react/prop-types */\nexport function numToColName(num) {\n  function letterFor(n) {\n    return String.fromCharCode(n + 65)\n  }\n  if (num >= 0) {\n    if (num < 26) {\n      return letterFor(num)\n    }\n    if (num < 27 * 26) {\n      return letterFor(Math.floor(num / 26 - 1)) + letterFor(num % 26)\n    }\n  }\n\n  throw new RangeError('column number out of range')\n}\n\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      position: 'relative',\n      marginBottom: theme.spacing(1),\n      background: grey[500],\n      overflow: 'auto',\n    },\n    dataTable: {\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      boxSizing: 'border-box',\n      '& td': {\n        border: `1px solid ${grey[300]}`,\n        padding: '0.2rem',\n        maxWidth: '50em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n      },\n    },\n    dataTableBody: {\n      background: 'white',\n    },\n    rowNumCell: {\n      background: grey[200],\n      textAlign: 'left',\n      border: `1px solid ${grey[300]}`,\n      position: 'relative',\n      padding: '0 2px 0 0',\n      whiteSpace: 'nowrap',\n      userSelect: 'none',\n    },\n    rowNumber: {\n      fontWeight: 'normal',\n      display: 'inline-block',\n      flex: 'none',\n      paddingRight: '20px',\n      margin: 0,\n      whiteSpace: 'nowrap',\n    },\n    rowMenuButton: {\n      padding: 0,\n      margin: 0,\n      position: 'absolute',\n      right: 0,\n      display: 'inline-block',\n      whiteSpace: 'nowrap',\n      flex: 'none',\n    },\n    rowMenuButtonIcon: {},\n    rowSelector: {\n      position: 'relative',\n      top: '-2px',\n      margin: 0,\n      padding: '0 0.2rem',\n    },\n    columnHead: {\n      fontWeight: 'normal',\n      background: grey[200],\n      border: `1px solid ${grey[300]}`,\n      position: 'sticky',\n      top: '-1px',\n      zIndex: 2,\n      whiteSpace: 'nowrap',\n      padding: [[0, theme.spacing(1)]],\n    },\n    sortIndicator: {\n      position: 'relative',\n      top: '0.2rem',\n      fontSize: '1rem',\n    },\n    columnButtonContainer: {\n      display: 'none',\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      background: grey[100],\n      height: '100%',\n      boxSizing: 'border-box',\n      borderLeft: `1px solid ${grey[300]}`,\n    },\n    columnButton: {\n      padding: 0,\n    },\n    topLeftCorner: {\n      background: grey[300],\n      position: 'sticky',\n      top: '-1px',\n      zIndex: 2,\n      minWidth: theme.spacing(2),\n      textAlign: 'left',\n    },\n    dataRowSelected: {\n      background: indigo[100],\n      '& th': {\n        background: indigo[100],\n      },\n    },\n    emptyMessage: { captionSide: 'bottom' },\n  }\n})\n\nconst CellData = observer(({ cell, spreadsheetModel, columnNumber }) => {\n  const { dataType } = spreadsheetModel.columns.get(columnNumber)\n  if (dataType.DataCellReactComponent) {\n    return (\n      <dataType.DataCellReactComponent\n        cell={cell}\n        dataType={dataType}\n        columnNumber={columnNumber}\n        spreadsheet={spreadsheetModel}\n      />\n    )\n  }\n\n  return cell.text\n})\n\nconst DataRow = observer(({ rowModel, rowNumber, spreadsheetModel }) => {\n  const classes = useStyles()\n  const { hideRowSelection, columnDisplayOrder } = spreadsheetModel\n  let rowClass = classes.dataRow\n  if (rowModel.isSelected) rowClass += ` ${classes.dataRowSelected}`\n\n  function labelClick(evt) {\n    rowModel.toggleSelect()\n    evt.stopPropagation()\n    evt.preventDefault()\n  }\n\n  function rowButtonClick(event) {\n    spreadsheetModel.setRowMenuPosition({\n      anchorEl: event.currentTarget,\n      rowNumber,\n    })\n    event.preventDefault()\n    event.stopPropagation()\n  }\n\n  return (\n    <tr className={rowClass}>\n      <th className={classes.rowNumCell} onClick={labelClick}>\n        <FormControlLabel\n          className={classes.rowNumber}\n          control={\n            hideRowSelection ? null : (\n              <Checkbox\n                className={classes.rowSelector}\n                checked={rowModel.isSelected}\n                onClick={labelClick}\n              />\n            )\n          }\n          label={rowModel.id}\n        />\n        <IconButton\n          className={classes.rowMenuButton}\n          onClick={rowButtonClick}\n          color=\"secondary\"\n        >\n          <ArrowDropDown className={classes.rowMenuButtonIcon} />\n        </IconButton>\n      </th>\n      {columnDisplayOrder.map(colNumber => (\n        <td key={colNumber}>\n          <CellData\n            cell={rowModel.cellsWithDerived[colNumber]}\n            spreadsheetModel={spreadsheetModel}\n            columnNumber={colNumber}\n          />\n        </td>\n      ))}\n    </tr>\n  )\n})\n\nfunction SortIndicator({ model, columnNumber }) {\n  const classes = useStyles()\n  const sortSpec = model.sortColumns.find(c => c.columnNumber === columnNumber)\n\n  if (sortSpec) {\n    const { descending } = sortSpec\n    return descending ? (\n      <KeyboardArrowUpIcon className={classes.sortIndicator} />\n    ) : (\n      <KeyboardArrowDownIcon className={classes.sortIndicator} />\n    )\n  }\n  return null\n}\n\nconst DataTableBody = observer(\n  ({ rows, spreadsheetModel, page, rowsPerPage }) => {\n    const classes = useStyles()\n    return (\n      <tbody className={classes.dataTableBody}>\n        {rows.slice(rowsPerPage * page, rowsPerPage * (page + 1)).map(row => (\n          <DataRow\n            key={row.id}\n            rowNumber={row.id}\n            spreadsheetModel={spreadsheetModel}\n            rowModel={row}\n          />\n        ))}\n      </tbody>\n    )\n  },\n)\n\nconst DataTable = observer(({ model, page, rowsPerPage }) => {\n  const { columnDisplayOrder, columns, hasColumnNames, rowSet } = model\n  const classes = useStyles()\n\n  // column menu active state\n  const [currentColumnMenu, setColumnMenu] = useState(null)\n  function columnButtonClick(colNumber, evt) {\n    setColumnMenu({\n      colNumber,\n      anchorEl: evt.currentTarget,\n    })\n  }\n\n  // column header hover state\n  const [currentHoveredColumn, setHoveredColumn] = useState(null)\n  function columnHeaderMouseOver(colNumber /* , evt */) {\n    setHoveredColumn(colNumber)\n  }\n  function columnHeaderMouseOut(/* colNumber, evt */) {\n    setHoveredColumn(null)\n  }\n\n  const totalRows = rowSet.count\n  const rows = rowSet.sortedFilteredRows\n\n  return (\n    <>\n      <ColumnMenu\n        viewModel={getParent(model)}\n        spreadsheetModel={model}\n        currentColumnMenu={currentColumnMenu}\n        setColumnMenu={setColumnMenu}\n      />\n      <RowMenu viewModel={getParent(model)} spreadsheetModel={model} />\n      <table className={classes.dataTable}>\n        <thead>\n          <tr>\n            <th className={classes.topLeftCorner}>\n              <Tooltip title=\"Unselect all\" placement=\"right\">\n                <span>\n                  <IconButton\n                    className={classes.unselectAllButton}\n                    onClick={model.unselectAll}\n                    disabled={!model.rowSet.selectedCount}\n                    color=\"secondary\"\n                  >\n                    <CropFreeIcon className={classes.columnButtonIcon} />\n                  </IconButton>\n                </span>\n              </Tooltip>\n            </th>\n            {columnDisplayOrder.map(colNumber => (\n              <th\n                className={classes.columnHead}\n                key={colNumber}\n                onMouseOver={columnHeaderMouseOver.bind(null, colNumber)}\n                onMouseOut={columnHeaderMouseOut.bind(null, colNumber)}\n              >\n                <SortIndicator model={model} columnNumber={colNumber} />\n                {(hasColumnNames && columns.get(colNumber).name) ||\n                  numToColName(colNumber)}\n                <div\n                  className={classes.columnButtonContainer}\n                  style={{\n                    display:\n                      currentHoveredColumn === colNumber ||\n                      (currentColumnMenu &&\n                        currentColumnMenu.colNumber === colNumber)\n                        ? 'block'\n                        : 'none',\n                  }}\n                >\n                  <IconButton\n                    className={classes.columnButton}\n                    onClick={columnButtonClick.bind(null, colNumber)}\n                    color=\"secondary\"\n                  >\n                    <ArrowDropDown className={classes.columnButtonIcon} />\n                  </IconButton>\n                </div>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <DataTableBody\n          rows={rows}\n          spreadsheetModel={model}\n          page={page}\n          rowsPerPage={rowsPerPage}\n        />\n        {!rows.length ? (\n          <caption className={classes.emptyMessage}>\n            {totalRows ? 'no rows match criteria' : 'no rows present'}\n          </caption>\n        ) : null}\n      </table>\n    </>\n  )\n})\n\nconst Spreadsheet = observer(({ model, height, page, rowsPerPage }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root} style={{ height }}>\n      {model && model.rowSet && model.rowSet.isLoaded && model.initialized ? (\n        <DataTable model={model} page={page} rowsPerPage={rowsPerPage} />\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  )\n})\n\nexport default Spreadsheet\n","import React, { useState, useEffect } from 'react'\n\nimport { IconButton, InputAdornment, TextField } from '@material-ui/core'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport FilterIcon from '@material-ui/icons/FilterList'\n\nimport { observer } from 'mobx-react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useDebounce } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles((/* theme */) => {\n  return {\n    textFilterControlEndAdornment: { marginRight: '-18px' },\n  }\n})\n\nconst TextFilter = observer(({ textFilter }) => {\n  const classes = useStyles()\n  // this paragraph is silliness to debounce the text filter input\n  const [textFilterValue, setTextFilterValue] = useState(\n    textFilter.stringToFind,\n  )\n  const debouncedTextFilter = useDebounce(textFilterValue, 500)\n  useEffect(() => {\n    textFilter.setString(debouncedTextFilter)\n  }, [debouncedTextFilter, textFilter])\n\n  return (\n    <div className={classes.filterControls}>\n      <TextField\n        label=\"text filter\"\n        value={textFilterValue}\n        onChange={evt => setTextFilterValue(evt.target.value)}\n        className={classes.textFilterControl}\n        variant=\"outlined\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment\n              className={classes.textFilterControlStartAdornment}\n              position=\"start\"\n            >\n              <FilterIcon />\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <InputAdornment\n              className={classes.textFilterControlEndAdornment}\n              position=\"end\"\n            >\n              <IconButton\n                aria-label=\"clear filter\"\n                onClick={() => setTextFilterValue('')}\n                color=\"secondary\"\n              >\n                <ClearIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  )\n})\n\nconst GlobalFilterControls = observer(({ model }) => {\n  // const classes = useStyles()\n  const textFilter = model.filterControls.rowFullText\n  return <TextFilter textFilter={textFilter} />\n})\n\nexport default GlobalFilterControls\n","import FilterIcon from '@material-ui/icons/FilterList'\nimport CloseIcon from '@material-ui/icons/Close'\n/* eslint-disable react/prop-types */\nimport { observer } from 'mobx-react'\nimport { getParent } from 'mobx-state-tree'\nimport React from 'react'\nimport { Grid, IconButton, Typography, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => {\n  return {\n    columnName: { verticalAlign: 'middle', paddingRight: '0.3em' },\n    columnFilter: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      width: '100%',\n      position: 'relative',\n    },\n    filterIcon: { position: 'relative', top: '12px' },\n    filterIconBg: {\n      background: theme.palette.tertiary.main,\n      color: 'white',\n      padding: [[0, theme.spacing(1.5)]],\n    },\n  }\n})\n\nfunction FilterOperations({ filterModel }) {\n  if (filterModel) {\n    return <filterModel.ReactComponent filterModel={filterModel} />\n  }\n  return null\n}\n\nconst ColumnFilterControls = observer(\n  ({ viewModel, filterModel, columnNumber, height }) => {\n    const classes = useStyles()\n\n    const removeFilter = () => {\n      const filterControls = getParent(filterModel, 2)\n      filterControls.removeColumnFilter(filterModel)\n    }\n\n    const columnDefinition = viewModel.spreadsheet.columns[columnNumber]\n    if (!columnDefinition) {\n      throw new Error('no column definition! filters are probably out of date')\n    }\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        className={classes.columnFilter}\n        style={{ height }}\n      >\n        <Grid item className={classes.filterIconBg}>\n          <FilterIcon className={classes.filterIcon} />\n        </Grid>\n        <Grid item>\n          <IconButton\n            onClick={removeFilter}\n            title=\"remove filter\"\n            color=\"secondary\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography className={classes.columnName} component=\"span\">\n            {columnDefinition.name}\n          </Typography>{' '}\n          <FilterOperations filterModel={filterModel} />\n        </Grid>\n      </Grid>\n    )\n  },\n)\n\nexport default ColumnFilterControls\n","import React from 'react'\nimport {\n  FormGroup,\n  Grid,\n  IconButton,\n  TablePagination,\n  makeStyles,\n} from '@material-ui/core'\nimport { observer } from 'mobx-react'\nimport { ResizeHandle } from '@jbrowse/core/ui'\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen'\n\nimport ImportWizard from './ImportWizard'\nimport Spreadsheet from './Spreadsheet'\nimport GlobalFilterControls from './GlobalFilterControls'\nimport ColumnFilterControls from './ColumnFilterControls'\n\nconst headerHeight = 52\nconst colFilterHeight = 46\nconst statusBarHeight = 40\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    background: 'white',\n    overflow: 'hidden',\n  },\n  header: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    height: headerHeight,\n    paddingLeft: theme.spacing(1),\n  },\n  contentArea: { overflow: 'auto' },\n  columnFilter: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    height: headerHeight,\n    paddingLeft: theme.spacing(1),\n  },\n  viewControls: {\n    margin: 0,\n  },\n  rowCount: {\n    marginLeft: theme.spacing(1),\n  },\n  statusBar: {\n    position: 'absolute',\n    background: theme.palette.background.light,\n    left: 0,\n    bottom: 0,\n    height: statusBarHeight,\n    width: '100%',\n    boxSizing: 'border-box',\n    borderTop: '1px outset #b1b1b1',\n    paddingLeft: theme.spacing(1),\n  },\n  verticallyCenter: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  textFilterControlAdornment: { marginRight: '-18px' },\n}))\n\nconst ViewControls = observer(({ model }) => {\n  const classes = useStyles()\n  return (\n    <Grid\n      className={classes.viewControls}\n      container\n      spacing={1}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Grid item>\n        <IconButton\n          onClick={() => model.setImportMode()}\n          className={classes.iconButton}\n          title=\"open a tabular file\"\n          data-testid=\"spreadsheet_view_open\"\n          color=\"secondary\"\n        >\n          <FolderOpenIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  )\n})\n\nconst RowCountMessage = observer(({ spreadsheet }) => {\n  if (spreadsheet && spreadsheet.rowSet.isLoaded) {\n    const {\n      passingFiltersCount,\n      count,\n      selectedCount,\n      selectedAndPassingFiltersCount,\n    } = spreadsheet.rowSet\n\n    let rowMessage\n    if (passingFiltersCount !== count) {\n      rowMessage = `${spreadsheet.rowSet.passingFiltersCount} rows of ${spreadsheet.rowSet.count} total`\n      if (selectedCount) {\n        rowMessage += `, ${selectedAndPassingFiltersCount} selected`\n        const selectedAndNotPassingFiltersCount =\n          selectedCount - selectedAndPassingFiltersCount\n        if (selectedAndNotPassingFiltersCount) {\n          rowMessage += ` (${selectedAndNotPassingFiltersCount} selected rows do not pass filters)`\n        }\n      }\n    } else {\n      rowMessage = `${spreadsheet.rowSet.count} rows`\n      if (selectedCount) {\n        rowMessage += `, ${selectedCount} selected`\n      }\n    }\n    return rowMessage\n  }\n  return null\n})\n\nconst SpreadsheetView = observer(({ model }) => {\n  const classes = useStyles()\n\n  const { spreadsheet, filterControls } = model\n\n  const colFilterCount = filterControls.columnFilters.length\n  const [page, setPage] = React.useState(0)\n  const [rowsPerPage, setRowsPerPage] = React.useState(100)\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value)\n    setPage(0)\n  }\n\n  return (\n    <div\n      className={classes.root}\n      style={{ height: model.height, width: model.width }}\n      data-testid={model.id}\n    >\n      <Grid container direction=\"row\" className={classes.header}>\n        {model.hideViewControls ? null : (\n          <Grid item>\n            <ViewControls model={model} />\n          </Grid>\n        )}\n        {model.mode !== 'display' || model.hideFilterControls ? null : (\n          <Grid item>\n            <GlobalFilterControls model={model} />\n          </Grid>\n        )}\n      </Grid>\n\n      {model.mode !== 'display' || model.hideFilterControls\n        ? null\n        : model.filterControls.columnFilters.map((filter, filterNumber) => {\n            return (\n              <ColumnFilterControls\n                key={`${filter.columnNumber}-${filterNumber}`}\n                viewModel={model}\n                filterModel={filter}\n                columnNumber={filter.columnNumber}\n                height={colFilterHeight}\n              />\n            )\n          })}\n\n      <div\n        className={classes.contentArea}\n        style={{ height: model.height - headerHeight }}\n      >\n        {model.mode !== 'import' ? null : (\n          <ImportWizard model={model.importWizard} />\n        )}\n        <div\n          style={{\n            position: 'relative',\n            display: model.mode === 'display' ? undefined : 'none',\n          }}\n        >\n          <Spreadsheet\n            page={page}\n            rowsPerPage={rowsPerPage}\n            model={spreadsheet}\n            height={\n              model.height -\n              headerHeight -\n              colFilterCount * colFilterHeight -\n              statusBarHeight\n            }\n          />\n        </div>\n      </div>\n\n      <div\n        className={classes.statusBar}\n        style={{ display: model.mode === 'display' ? undefined : 'none' }}\n      >\n        {spreadsheet ? (\n          <FormGroup row>\n            <div className={classes.verticallyCenter}>\n              <RowCountMessage spreadsheet={spreadsheet} />\n            </div>\n            <div className={classes.spacer} />\n            <TablePagination\n              rowsPerPageOptions={[10, 25, 100, 1000]}\n              count={spreadsheet.rowSet.count}\n              component=\"div\"\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n            <div className={classes.spacer} />\n          </FormGroup>\n        ) : null}\n      </div>\n      {model.hideVerticalResizeHandle ? null : (\n        <ResizeHandle\n          onDrag={model.resizeHeight}\n          style={{\n            height: model.dragHandleHeight,\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            background: '#ccc',\n            boxSizing: 'border-box',\n            borderTop: '1px solid #fafafa',\n          }}\n        />\n      )}\n    </div>\n  )\n})\n\nexport default SpreadsheetView\n"],"sourceRoot":""}