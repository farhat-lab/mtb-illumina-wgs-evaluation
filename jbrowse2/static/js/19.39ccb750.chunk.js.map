{"version":3,"sources":["../../../node_modules/@gmod/twobit/dist/index.js","../../../node_modules/@gmod/twobit/dist/twoBitFile.js","../../../node_modules/@babel/runtime-corejs2/core-js/object/values.js","../../../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/object/values.js","../../../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/es7.object.values.js","../../../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_object-to-array.js","../../../node_modules/@babel/runtime-corejs2/core-js/number/max-safe-integer.js","../../../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/number/max-safe-integer.js","../../../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/es6.number.max-safe-integer.js","../../../node_modules/@babel/runtime-corejs2/helpers/toConsumableArray.js","../../../node_modules/@babel/runtime-corejs2/helpers/arrayWithoutHoles.js","../../../node_modules/@babel/runtime-corejs2/helpers/iterableToArray.js","../../../node_modules/@babel/runtime-corejs2/helpers/nonIterableSpread.js"],"names":["TwoBitFile","require","module","exports","_interopRequireDefault","_promise","_values","_keys","_maxSafeInteger","_regenerator","_asyncToGenerator2","_classCallCheck2","_createClass2","_toConsumableArray2","Long","Parser","fs","undefined","tinyMemoize","_class","methodName","method","prototype","memoAttrName","concat","this","call","twoBit","byteTo4Bases","default","Array","keys","map","x","i","maskedByteTo4Bases","bases","toLowerCase","LocalFile","path","fdPromise","open","key","value","_read","mark","_callee","buf","offset","length","position","fd","wrap","_context","prev","next","sent","abrupt","read","stop","_x","_x2","_x3","_x4","apply","arguments","_ref","filehandle","seqChunkSize","isBigEndian","_getParser2","_callee2","name","parser","_context2","_getParsers","t0","Error","_x5","_detectEndianness2","_callee3","_ref2","buffer","_context3","Buffer","allocUnsafe","readInt32LE","version","readInt32BE","_getParsers2","_callee4","endianess","lebe","indexEntryParser","header","_context4","_detectEndianness","uint8","string","uint32","int32","assert","m","v","index","array","type","record1","record2","record3","_getHeader","_callee5","_ref3","headerParser","_context5","_getParser","parse","result","_getIndex","_callee6","maxIndexLength","_ref4","indexParser","indexData","_this","_context6","getHeader","sequenceCount","forEach","_ref5","offsetBytes","long","fromBytes","greaterThan","toNumber","_ref6","_getSequenceNames","_callee7","_context7","getIndex","_getSequenceSizes","_callee8","seqNames","sizePromises","sizes","returnObject","_this2","_context8","_getSequenceSize","all","_getSequenceSize2","_callee9","seqName","_context9","_x6","_getSequenceSize3","_callee10","rec1","_context10","_parseItem","dnaSize","_x7","_getSequenceRecord2","_callee11","rec2DataLength","rec2","rec3DataLength","rec3","rec","_context11","nBlockCount","maskBlockCount","nBlocks","starts","nBlockStarts","nBlockSizes","maskBlocks","maskBlockStarts","maskBlockSizes","dnaPosition","_x8","_parseItem2","_callee12","parserName","_ref7","_context12","_x9","_x10","_x11","_getSequence","_callee13","regionStart","regionEnd","record","baseBytes","baseBytesOffset","_ref8","sequenceBases","genomicPosition","baseIsMasked","currentNBlock","bytePosition","subPosition","byte","_args13","_context13","_getSequenceRecord","TypeError","_getOverlappingBlocks","Math","ceil","floor","end","shift","start","_x12","blockStarts","blockSizes","startIndex","endIndex","blockStart","blocks","blockNum","size","Object","values","$export","$values","S","it","DESCRIPTORS","getKeys","toIObject","isEnum","f","isEntries","O","push","MAX_SAFE_INTEGER","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","_Array$isArray","arrayLikeToArray","_Array$from","_isIterable","_Symbol","iter"],"mappings":"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","file":"static/js/19.39ccb750.chunk.js","sourcesContent":["\"use strict\";\n\nvar TwoBitFile = require('./twoBitFile');\n\nmodule.exports = {\n  TwoBitFile: TwoBitFile\n};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/promise\"));\n\nvar _values = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/values\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/keys\"));\n\nvar _maxSafeInteger = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/number/max-safe-integer\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/toConsumableArray\"));\n\nvar Long = require('long');\n\nvar _require = require('@gmod/binary-parser'),\n    Parser = _require.Parser;\n\nvar fs = // eslint-disable-next-line camelcase\ntypeof __webpack_require__ !== 'function' ? require('fs-extra') : undefined;\nvar TWOBIT_MAGIC = 0x1a412743;\n\nfunction tinyMemoize(_class, methodName) {\n  var method = _class.prototype[methodName];\n  var memoAttrName = \"_memo_\".concat(methodName);\n\n  _class.prototype[methodName] = function _tinyMemoized() {\n    if (!(memoAttrName in this)) this[memoAttrName] = method.call(this);\n    return this[memoAttrName];\n  };\n}\n\nvar twoBit = ['T', 'C', 'A', 'G']; // byteTo4Bases is an array of byteValue -> 'ACTG'\n// the weird `...keys()` incantation generates an array of numbers 0 to 255\n\nvar byteTo4Bases = (0, _toConsumableArray2.default)(Array(256).keys()).map(function (x, i) {\n  return twoBit[i >> 6 & 3] + twoBit[i >> 4 & 3] + twoBit[i >> 2 & 3] + twoBit[i & 3];\n});\nvar maskedByteTo4Bases = byteTo4Bases.map(function (bases) {\n  return bases.toLowerCase();\n}); // LocalFile is pretty much just an implementation of the node 10+ fs.promises filehandle,\n// can switch to that when the API is stable\n\nvar LocalFile =\n/*#__PURE__*/\nfunction () {\n  function LocalFile(path) {\n    (0, _classCallCheck2.default)(this, LocalFile);\n    this.fdPromise = fs.open(path, 'r');\n  }\n\n  (0, _createClass2.default)(LocalFile, [{\n    key: \"read\",\n    value: function () {\n      var _read = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee(buf, offset, length, position) {\n        var fd;\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.fdPromise;\n\n              case 2:\n                fd = _context.sent;\n                return _context.abrupt(\"return\", fs.read(fd, buf, offset, length, position));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function read(_x, _x2, _x3, _x4) {\n        return _read.apply(this, arguments);\n      }\n\n      return read;\n    }()\n  }]);\n  return LocalFile;\n}();\n\nvar TwoBitFile =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {object} args\n   * @param {string} [args.path] filesystem path for the .2bit file to open\n   * @param {Filehandle} [args.filehandle] node fs.promises-like filehandle for the .2bit file.\n   *  Only needs to support `filehandle.read(buffer, offset, length, position)`\n   */\n  function TwoBitFile(_ref) {\n    var filehandle = _ref.filehandle,\n        path = _ref.path,\n        seqChunkSize = _ref.seqChunkSize;\n    (0, _classCallCheck2.default)(this, TwoBitFile);\n    if (filehandle) this.filehandle = filehandle;else if (path) this.filehandle = new LocalFile(path);\n    this.isBigEndian = undefined;\n    this.seqChunkSize = seqChunkSize || 32000;\n  }\n\n  (0, _createClass2.default)(TwoBitFile, [{\n    key: \"_getParser\",\n    value: function () {\n      var _getParser2 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee2(name) {\n        var parser;\n        return _regenerator.default.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this._getParsers();\n\n              case 2:\n                _context2.t0 = name;\n                parser = _context2.sent[_context2.t0];\n\n                if (parser) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                throw new Error(\"parser \".concat(name, \" not found\"));\n\n              case 6:\n                return _context2.abrupt(\"return\", parser);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _getParser(_x5) {\n        return _getParser2.apply(this, arguments);\n      }\n\n      return _getParser;\n    }()\n  }, {\n    key: \"_detectEndianness\",\n    value: function () {\n      var _detectEndianness2 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee3() {\n        var _ref2, buffer;\n\n        return _regenerator.default.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.filehandle.read(Buffer.allocUnsafe(8), 0, 8, 0);\n\n              case 2:\n                _ref2 = _context3.sent;\n                buffer = _ref2.buffer;\n\n                if (!(buffer.readInt32LE(0) === TWOBIT_MAGIC)) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                this.isBigEndian = false;\n                this.version = buffer.readInt32LE(4);\n                _context3.next = 15;\n                break;\n\n              case 9:\n                if (!(buffer.readInt32BE(0) === TWOBIT_MAGIC)) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                this.isBigEndian = true;\n                this.version = buffer.readInt32BE(4);\n                _context3.next = 15;\n                break;\n\n              case 14:\n                throw new Error('not a 2bit file');\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function _detectEndianness() {\n        return _detectEndianness2.apply(this, arguments);\n      }\n\n      return _detectEndianness;\n    }() // memoize\n\n    /**\n     * @private\n     * detects the file's endianness and instantiates our binary parsers accordingly\n     */\n\n  }, {\n    key: \"_getParsers\",\n    value: function () {\n      var _getParsers2 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee4() {\n        var endianess, lebe, indexEntryParser, header;\n        return _regenerator.default.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this._detectEndianness();\n\n              case 2:\n                endianess = this.isBigEndian ? 'big' : 'little';\n                lebe = this.isBigEndian ? 'be' : 'le';\n                indexEntryParser = new Parser().endianess(endianess).uint8('nameLength').string('name', {\n                  length: 'nameLength'\n                });\n\n                if (this.version === 1) {\n                  indexEntryParser = indexEntryParser.buffer('offsetBytes', {\n                    length: 8\n                  });\n                } else {\n                  indexEntryParser = indexEntryParser.uint32('offset');\n                }\n                /* istanbul ignore next */\n\n\n                header = new Parser().endianess(endianess).int32('magic', {\n                  assert: function assert(m) {\n                    return m === 0x1a412743;\n                  }\n                }).int32('version', {\n                  /* istanbul ignore next */\n                  assert: function assert(v) {\n                    return v === 0 || v === 1;\n                  }\n                }).uint32('sequenceCount', {\n                  /* istanbul ignore next */\n                  assert: function assert(v) {\n                    return v >= 0;\n                  }\n                }).uint32('reserved');\n                return _context4.abrupt(\"return\", {\n                  header: header,\n                  index: new Parser().endianess(endianess).uint32('sequenceCount').uint32('reserved').array('index', {\n                    length: 'sequenceCount',\n                    type: indexEntryParser\n                  }),\n                  record1: new Parser().endianess(endianess).uint32('dnaSize').uint32('nBlockCount'),\n                  record2: new Parser().endianess(endianess).uint32('nBlockCount').array('nBlockStarts', {\n                    length: 'nBlockCount',\n                    type: \"uint32\".concat(lebe)\n                  }).array('nBlockSizes', {\n                    length: 'nBlockCount',\n                    type: \"uint32\".concat(lebe)\n                  }).uint32('maskBlockCount'),\n                  record3: new Parser().endianess(endianess).uint32('maskBlockCount').array('maskBlockStarts', {\n                    length: 'maskBlockCount',\n                    type: \"uint32\".concat(lebe)\n                  }).array('maskBlockSizes', {\n                    length: 'maskBlockCount',\n                    type: \"uint32\".concat(lebe)\n                  }).int32('reserved') // .buffer('packedDna', { length: 'dnaSize' }),\n\n                });\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function _getParsers() {\n        return _getParsers2.apply(this, arguments);\n      }\n\n      return _getParsers;\n    }() // memoize\n\n    /**\n     * @returns {Promise} for object with the file's header information, like\n     *  `{ magic: 0x1a412743, version: 0, sequenceCount: 42, reserved: 0 }`\n     */\n\n  }, {\n    key: \"getHeader\",\n    value: function () {\n      var _getHeader = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee5() {\n        var _ref3, buffer, headerParser;\n\n        return _regenerator.default.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this._detectEndianness();\n\n              case 2:\n                _context5.next = 4;\n                return this.filehandle.read(Buffer.allocUnsafe(16), 0, 16, 0);\n\n              case 4:\n                _ref3 = _context5.sent;\n                buffer = _ref3.buffer;\n                _context5.next = 8;\n                return this._getParser('header');\n\n              case 8:\n                headerParser = _context5.sent;\n                return _context5.abrupt(\"return\", headerParser.parse(buffer).result);\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getHeader() {\n        return _getHeader.apply(this, arguments);\n      }\n\n      return getHeader;\n    }() // memoize\n\n    /**\n     * @returns {Promise} for object with the file's index of offsets, like `{ seqName: fileOffset, ...}`\n     */\n\n  }, {\n    key: \"getIndex\",\n    value: function () {\n      var _getIndex = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee6() {\n        var _this = this;\n\n        var header, maxIndexLength, _ref4, buffer, indexParser, indexData, index;\n\n        return _regenerator.default.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.getHeader();\n\n              case 2:\n                header = _context6.sent;\n                maxIndexLength = 8 + header.sequenceCount * (1 + 256 + (this.version === 1 ? 8 : 4));\n                _context6.next = 6;\n                return this.filehandle.read(Buffer.allocUnsafe(maxIndexLength), 0, maxIndexLength, 8);\n\n              case 6:\n                _ref4 = _context6.sent;\n                buffer = _ref4.buffer;\n                _context6.next = 10;\n                return this._getParser('index');\n\n              case 10:\n                indexParser = _context6.sent;\n                indexData = indexParser.parse(buffer).result.index;\n                index = {};\n\n                if (this.version === 1) {\n                  indexData.forEach(function (_ref5) {\n                    var name = _ref5.name,\n                        offsetBytes = _ref5.offsetBytes;\n                    var long = Long.fromBytes(offsetBytes, true, !_this.isBigEndian);\n                    if (long.greaterThan(_maxSafeInteger.default)) throw new Error('integer overflow. File offset greater than 2^53-1 encountered. This library can only handle offsets up to 2^53-1.');\n                    index[name] = long.toNumber();\n                  });\n                } else {\n                  indexData.forEach(function (_ref6) {\n                    var name = _ref6.name,\n                        offset = _ref6.offset;\n                    index[name] = offset;\n                  });\n                }\n\n                return _context6.abrupt(\"return\", index);\n\n              case 15:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getIndex() {\n        return _getIndex.apply(this, arguments);\n      }\n\n      return getIndex;\n    }()\n    /**\n     * @returns {Promise} for an array of string sequence names that are found in the file\n     */\n\n  }, {\n    key: \"getSequenceNames\",\n    value: function () {\n      var _getSequenceNames = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee7() {\n        var index;\n        return _regenerator.default.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.getIndex();\n\n              case 2:\n                index = _context7.sent;\n                return _context7.abrupt(\"return\", (0, _keys.default)(index));\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getSequenceNames() {\n        return _getSequenceNames.apply(this, arguments);\n      }\n\n      return getSequenceNames;\n    }()\n    /**\n     * @returns {Promise} for an object listing the lengths of all sequences like `{seqName: length, ...}`\n     */\n\n  }, {\n    key: \"getSequenceSizes\",\n    value: function () {\n      var _getSequenceSizes = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee8() {\n        var _this2 = this;\n\n        var index, seqNames, sizePromises, sizes, returnObject, i;\n        return _regenerator.default.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.getIndex();\n\n              case 2:\n                index = _context8.sent;\n                seqNames = (0, _keys.default)(index);\n                sizePromises = (0, _values.default)(index).map(function (offset) {\n                  return _this2._getSequenceSize(offset);\n                });\n                _context8.next = 7;\n                return _promise.default.all(sizePromises);\n\n              case 7:\n                sizes = _context8.sent;\n                returnObject = {};\n\n                for (i = 0; i < seqNames.length; i += 1) {\n                  returnObject[seqNames[i]] = sizes[i];\n                }\n\n                return _context8.abrupt(\"return\", returnObject);\n\n              case 11:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getSequenceSizes() {\n        return _getSequenceSizes.apply(this, arguments);\n      }\n\n      return getSequenceSizes;\n    }()\n    /**\n     * @param {string} seqName name of the sequence\n     * @returns {Promise} for the sequence's length, or undefined if it is not in the file\n     */\n\n  }, {\n    key: \"getSequenceSize\",\n    value: function () {\n      var _getSequenceSize2 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee9(seqName) {\n        var index, offset;\n        return _regenerator.default.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.getIndex();\n\n              case 2:\n                index = _context9.sent;\n                offset = index[seqName];\n\n                if (offset) {\n                  _context9.next = 6;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", undefined);\n\n              case 6:\n                return _context9.abrupt(\"return\", this._getSequenceSize(offset));\n\n              case 7:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function getSequenceSize(_x6) {\n        return _getSequenceSize2.apply(this, arguments);\n      }\n\n      return getSequenceSize;\n    }()\n  }, {\n    key: \"_getSequenceSize\",\n    value: function () {\n      var _getSequenceSize3 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee10(offset) {\n        var rec1;\n        return _regenerator.default.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (!(offset === undefined || offset < 0)) {\n                  _context10.next = 2;\n                  break;\n                }\n\n                throw new Error('invalid offset');\n\n              case 2:\n                _context10.next = 4;\n                return this._parseItem(offset, 8, 'record1');\n\n              case 4:\n                rec1 = _context10.sent;\n                return _context10.abrupt(\"return\", rec1.dnaSize);\n\n              case 6:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function _getSequenceSize(_x7) {\n        return _getSequenceSize3.apply(this, arguments);\n      }\n\n      return _getSequenceSize;\n    }()\n  }, {\n    key: \"_getSequenceRecord\",\n    value: function () {\n      var _getSequenceRecord2 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee11(offset) {\n        var rec1, rec2DataLength, rec2, rec3DataLength, rec3, rec;\n        return _regenerator.default.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                if (!(offset === undefined || offset < 0)) {\n                  _context11.next = 2;\n                  break;\n                }\n\n                throw new Error('invalid offset');\n\n              case 2:\n                _context11.next = 4;\n                return this._parseItem(offset, 8, 'record1');\n\n              case 4:\n                rec1 = _context11.sent;\n                rec2DataLength = rec1.nBlockCount * 8 + 8;\n                _context11.next = 8;\n                return this._parseItem(offset + 4, rec2DataLength, 'record2');\n\n              case 8:\n                rec2 = _context11.sent;\n                rec3DataLength = rec2.maskBlockCount * 8 + 8;\n                _context11.next = 12;\n                return this._parseItem(offset + 4 + rec2DataLength - 4, rec3DataLength, 'record3');\n\n              case 12:\n                rec3 = _context11.sent;\n                rec = {\n                  dnaSize: rec1.dnaSize,\n                  nBlocks: {\n                    starts: rec2.nBlockStarts,\n                    sizes: rec2.nBlockSizes\n                  },\n                  maskBlocks: {\n                    starts: rec3.maskBlockStarts,\n                    sizes: rec3.maskBlockSizes\n                  },\n                  dnaPosition: offset + 4 + rec2DataLength - 4 + rec3DataLength\n                };\n                return _context11.abrupt(\"return\", rec);\n\n              case 15:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function _getSequenceRecord(_x8) {\n        return _getSequenceRecord2.apply(this, arguments);\n      }\n\n      return _getSequenceRecord;\n    }()\n  }, {\n    key: \"_parseItem\",\n    value: function () {\n      var _parseItem2 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee12(offset, length, parserName) {\n        var _ref7, buffer, parser;\n\n        return _regenerator.default.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.filehandle.read(Buffer.allocUnsafe(length), 0, length, offset);\n\n              case 2:\n                _ref7 = _context12.sent;\n                buffer = _ref7.buffer;\n                _context12.next = 6;\n                return this._getParser(parserName);\n\n              case 6:\n                parser = _context12.sent;\n                return _context12.abrupt(\"return\", parser.parse(buffer).result);\n\n              case 8:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function _parseItem(_x9, _x10, _x11) {\n        return _parseItem2.apply(this, arguments);\n      }\n\n      return _parseItem;\n    }()\n    /**\n     * @param {string} seqName name of the sequence you want\n     * @param {number} [regionStart] optional 0-based half-open start of the sequence region to fetch.\n     * @param {number} [regionEnd] optional 0-based half-open end of the sequence region to fetch. defaults to end of the sequence\n     * @returns {Promise} for a string of sequence bases\n     */\n\n  }, {\n    key: \"getSequence\",\n    value: function () {\n      var _getSequence = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee13(seqName) {\n        var regionStart,\n            regionEnd,\n            index,\n            offset,\n            record,\n            nBlocks,\n            maskBlocks,\n            baseBytes,\n            baseBytesOffset,\n            _ref8,\n            buffer,\n            sequenceBases,\n            genomicPosition,\n            baseIsMasked,\n            currentNBlock,\n            bytePosition,\n            subPosition,\n            byte,\n            _args13 = arguments;\n\n        return _regenerator.default.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                regionStart = _args13.length > 1 && _args13[1] !== undefined ? _args13[1] : 0;\n                regionEnd = _args13.length > 2 ? _args13[2] : undefined;\n                _context13.next = 4;\n                return this.getIndex();\n\n              case 4:\n                index = _context13.sent;\n                offset = index[seqName];\n\n                if (offset) {\n                  _context13.next = 8;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\", undefined);\n\n              case 8:\n                _context13.next = 10;\n                return this._getSequenceRecord(offset);\n\n              case 10:\n                record = _context13.sent;\n\n                if (!(regionStart < 0)) {\n                  _context13.next = 13;\n                  break;\n                }\n\n                throw new TypeError('regionStart cannot be less than 0');\n\n              case 13:\n                // end defaults to the end of the sequence\n                if (regionEnd === undefined || regionEnd > record.dnaSize) {\n                  regionEnd = record.dnaSize;\n                }\n\n                nBlocks = this._getOverlappingBlocks(regionStart, regionEnd, record.nBlocks.starts, record.nBlocks.sizes);\n                maskBlocks = this._getOverlappingBlocks(regionStart, regionEnd, record.maskBlocks.starts, record.maskBlocks.sizes);\n                baseBytes = Buffer.allocUnsafe(Math.ceil((regionEnd - regionStart) / 4) + 1);\n                baseBytesOffset = Math.floor(regionStart / 4);\n                _context13.next = 20;\n                return this.filehandle.read(baseBytes, 0, baseBytes.length, record.dnaPosition + baseBytesOffset);\n\n              case 20:\n                _ref8 = _context13.sent;\n                buffer = _ref8.buffer;\n                sequenceBases = '';\n\n                for (genomicPosition = regionStart; genomicPosition < regionEnd; genomicPosition += 1) {\n                  // check whether we are currently masked\n                  while (maskBlocks.length && maskBlocks[0].end <= genomicPosition) {\n                    maskBlocks.shift();\n                  }\n\n                  baseIsMasked = maskBlocks[0] && maskBlocks[0].start <= genomicPosition && maskBlocks[0].end > genomicPosition; // process the N block if we have one\n\n                  if (nBlocks[0] && genomicPosition >= nBlocks[0].start && genomicPosition < nBlocks[0].end) {\n                    currentNBlock = nBlocks.shift();\n\n                    for (; genomicPosition < currentNBlock.end && genomicPosition < regionEnd; genomicPosition += 1) {\n                      sequenceBases += baseIsMasked ? 'n' : 'N';\n                    }\n\n                    genomicPosition -= 1;\n                  } else {\n                    bytePosition = Math.floor(genomicPosition / 4) - baseBytesOffset;\n                    subPosition = genomicPosition % 4;\n                    byte = buffer[bytePosition];\n                    sequenceBases += baseIsMasked ? maskedByteTo4Bases[byte][subPosition] : byteTo4Bases[byte][subPosition];\n                  }\n                }\n\n                return _context13.abrupt(\"return\", sequenceBases);\n\n              case 25:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function getSequence(_x12) {\n        return _getSequence.apply(this, arguments);\n      }\n\n      return getSequence;\n    }()\n  }, {\n    key: \"_getOverlappingBlocks\",\n    value: function _getOverlappingBlocks(regionStart, regionEnd, blockStarts, blockSizes) {\n      // find the start and end indexes of the blocks that match\n      var startIndex;\n      var endIndex;\n\n      for (var i = 0; i < blockStarts.length; i += 1) {\n        var blockStart = blockStarts[i];\n        var blockSize = blockSizes[i];\n\n        if (regionStart >= blockStart + blockSize || regionEnd <= blockStart) {\n          // block does not overlap the region\n          if (startIndex !== undefined) {\n            endIndex = i;\n            break;\n          }\n        } else if (startIndex === undefined) startIndex = i; // block does overlap the region, record this if it is the first\n\n      }\n\n      if (startIndex === undefined) return []; // now format some block objects to return\n\n      if (endIndex === undefined) endIndex = blockStarts.length;\n      var blocks = new Array(endIndex - startIndex);\n\n      for (var blockNum = startIndex; blockNum < endIndex; blockNum += 1) {\n        blocks[blockNum - startIndex] = {\n          start: blockStarts[blockNum],\n          end: blockStarts[blockNum] + blockSizes[blockNum],\n          size: blockSizes[blockNum]\n        };\n      }\n\n      return blocks;\n    }\n  }]);\n  return TwoBitFile;\n}();\n\ntinyMemoize(TwoBitFile, '_getParsers');\ntinyMemoize(TwoBitFile, 'getIndex');\ntinyMemoize(TwoBitFile, 'getHeader');\nmodule.exports = TwoBitFile;","module.exports = require(\"core-js/library/fn/object/values\");","require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/_core').Object.values;\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","module.exports = require(\"core-js/library/fn/number/max-safe-integer\");","require('../../modules/es6.number.max-safe-integer');\nmodule.exports = 0x1fffffffffffff;\n","// 20.1.2.6 Number.MAX_SAFE_INTEGER\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var _Array$isArray = require(\"../core-js/array/is-array\");\n\nvar arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var _Array$from = require(\"../core-js/array/from\");\n\nvar _isIterable = require(\"../core-js/is-iterable\");\n\nvar _Symbol = require(\"../core-js/symbol\");\n\nfunction _iterableToArray(iter) {\n  if (typeof _Symbol !== \"undefined\" && _isIterable(Object(iter))) return _Array$from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;"],"sourceRoot":""}