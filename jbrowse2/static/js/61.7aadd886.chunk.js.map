{"version":3,"sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/ToggleConnectionsDialog.tsx"],"names":["useStyles","makeStyles","theme","closeButton","position","right","spacing","top","color","palette","grey","connectionContainer","width","margin","observer","session","handleClose","assemblyName","breakConnection","classes","connections","connectionInstances","assemblySpecificConnections","filter","c","readConfObject","includes","open","onClose","maxWidth","className","onClick","map","conf","name","control","checked","find","conn","onChange","makeConnection","label","length","variant"],"mappings":"sHAAA,+JAkBMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,YAAa,CACXC,SAAU,WACVC,MAAOH,EAAMI,QAAQ,GACrBC,IAAKL,EAAMI,QAAQ,GACnBE,MAAON,EAAMO,QAAQC,KAAK,MAG5BC,oBAAqB,CACnBC,MAAO,IACPC,OAAQX,EAAMI,QAAQ,QAiFXQ,8BA7Ef,YAUG,IATDC,EASC,EATDA,QACAC,EAQC,EARDA,YACAC,EAOC,EAPDA,aACAC,EAMC,EANDA,gBAOMC,EAAUnB,IACRoB,EAAqCL,EAArCK,YAAaC,EAAwBN,EAAxBM,oBACfC,EAA8BF,EAAYG,QAAO,SAAAC,GAAC,OACtDC,yBAAeD,EAAG,iBAAiBE,SAAST,MAE9C,OACE,kBAAC,IAAD,CAAQU,MAAI,EAACC,QAASZ,EAAaa,SAAS,MAC1C,kBAAC,IAAD,+BAEE,kBAAC,IAAD,CACEC,UAAWX,EAAQhB,YACnB4B,QAAS,kBAAMf,MAEf,kBAAC,IAAD,QAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,oDACA,yBAAKc,UAAWX,EAAQR,qBACrBW,EAA4BU,KAAI,SAAAC,GAC/B,IAAMC,EAAOT,yBAAeQ,EAAM,QAClC,OACE,6BACE,kBAAC,IAAD,CACEE,QACE,kBAAC,IAAD,CACEC,WACG,OAACf,QAAD,IAACA,OAAD,EAACA,EAAqBgB,MAAK,SAAAC,GAAI,OAAIJ,IAASI,EAAKJ,SAEpDK,SAAU,WAOD,OANP,OACElB,QADF,IACEA,OADF,EACEA,EAAqBgB,MACnB,SAAAC,GAAI,OAAIA,EAAKJ,OAAST,yBAAeQ,EAAM,YAG7Cf,EAAgBe,GAEhB,UAAAlB,EAAQyB,sBAAR,cAAAzB,EAAyBkB,IAG7BzB,MAAM,YAGViC,MAAOP,QAKbZ,EAA4BoB,OAE1B,KADF,kBAAC,IAAD,iCAAsCzB,KAI5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEc,QAAS,kBAAMf,KACf2B,QAAQ,YACRnC,MAAM,WAHR","file":"static/js/61.7aadd886.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  FormControlLabel,\n  Checkbox,\n  IconButton,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { observer } from 'mobx-react'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { AbstractSessionModel } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n\n  connectionContainer: {\n    width: 500,\n    margin: theme.spacing(4),\n  },\n}))\n\nfunction ToggleConnectionDialog({\n  session,\n  handleClose,\n  assemblyName,\n  breakConnection,\n}: {\n  handleClose: () => void\n  session: AbstractSessionModel\n  assemblyName: string\n  breakConnection: Function\n}) {\n  const classes = useStyles()\n  const { connections, connectionInstances } = session\n  const assemblySpecificConnections = connections.filter(c =>\n    readConfObject(c, 'assemblyNames').includes(assemblyName),\n  )\n  return (\n    <Dialog open onClose={handleClose} maxWidth=\"lg\">\n      <DialogTitle>\n        Turn on/off connections\n        <IconButton\n          className={classes.closeButton}\n          onClick={() => handleClose()}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Typography>Use the checkbox to turn on/off connections</Typography>\n        <div className={classes.connectionContainer}>\n          {assemblySpecificConnections.map(conf => {\n            const name = readConfObject(conf, 'name')\n            return (\n              <div>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={\n                        !!connectionInstances?.find(conn => name === conn.name)\n                      }\n                      onChange={() => {\n                        if (\n                          connectionInstances?.find(\n                            conn => conn.name === readConfObject(conf, 'name'),\n                          )\n                        ) {\n                          breakConnection(conf)\n                        } else {\n                          session.makeConnection?.(conf)\n                        }\n                      }}\n                      color=\"primary\"\n                    />\n                  }\n                  label={name}\n                />\n              </div>\n            )\n          })}\n          {!assemblySpecificConnections.length ? (\n            <Typography>No connections found for {assemblyName}</Typography>\n          ) : null}\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => handleClose()}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(ToggleConnectionDialog)\n"],"sourceRoot":""}