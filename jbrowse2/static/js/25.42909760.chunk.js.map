{"version":3,"sources":["../../../plugins/variants/node_modules/@material-ui/icons/Close.js","../../../plugins/variants/node_modules/@material-ui/icons/utils/createSvgIcon.js","../../../plugins/variants/src/VariantFeatureWidget/BreakendOptionDialog.tsx","../../../plugins/variants/src/VariantFeatureWidget/VariantFeatureWidget.tsx","../../../node_modules/@babel/runtime/helpers/interopRequireWildcard.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","value","exports","React","_default","d","enumerable","get","_utils","useStyles","makeStyles","theme","closeButton","position","right","spacing","top","color","palette","grey","block","display","observer","model","handleClose","feature","viewType","classes","useState","copyTracks","setCopyTracks","mirrorTracks","setMirrorTracks","Dialog","open","onClose","DialogTitle","IconButton","className","onClick","Divider","DialogContent","FormControlLabel","control","Checkbox","checked","onChange","val","label","DialogActions","Button","view","session","getSession","viewSnapshot","snapshotFromBreakendFeature","views","offsetPx","width","featureData","viewTracks","getSnapshot","tracks","slice","reverse","addView","variant","autoFocus","VariantSamples","props","filter","setFilter","showFilters","setShowFilters","samples","preFilteredRows","entries","length","error","infoFields","keys","map","field","rows","filters","row","fromEntries","entry","String","sample","id","every","key","currFilter","match","RegExp","e","title","Typography","f","TextField","placeholder","event","target","style","height","overflow","columns","rowHeight","headerHeight","disableSelectionOnClick","disableColumnMenu","BreakendPanel","locStrings","pluginManager","getEnv","breakpointDialog","setBreakpointDialog","getViewType","simpleFeature","SimpleFeature","locString","index","JSON","stringify","Link","href","navToLocString","notify","refName","start","descriptions","feat","parse","rest","Paper","data-testid","ALT","alt","char","MateDirection","Join","MatePosition","Replacement","toString","CHROM","POS","ID","REF","QUAL","FILTER","type","INFO","CHR2","END","_typeof","_getRequireWildcardCache","WeakMap","cache","module","obj","__esModule","has","newObj","hasPropertyDescriptor","defineProperty","getOwnPropertyDescriptor","prototype","hasOwnProperty","call","desc","set"],"mappings":"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","file":"static/js/25.42909760.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.createSvgIcon;\n  }\n});\n\nvar _utils = require(\"@material-ui/core/utils\");","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  IconButton,\n  FormControlLabel,\n  Checkbox,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { getSession } from '@jbrowse/core/util'\nimport { Feature } from '@jbrowse/core/util/simpleFeature'\n\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  block: {\n    display: 'block',\n  },\n}))\n\nfunction BreakendOptionDialog({\n  model,\n  handleClose,\n  feature,\n  viewType,\n}: {\n  model: any\n  handleClose: () => void\n  feature: Feature\n  viewType: any\n}) {\n  const classes = useStyles()\n  const [copyTracks, setCopyTracks] = useState(true)\n  const [mirrorTracks, setMirrorTracks] = useState(true)\n\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        Breakpoint split view options\n        {handleClose ? (\n          <IconButton\n            className={classes.closeButton}\n            onClick={() => {\n              handleClose()\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <Divider />\n\n      <DialogContent>\n        <FormControlLabel\n          className={classes.block}\n          control={\n            <Checkbox\n              checked={copyTracks}\n              onChange={() => setCopyTracks(val => !val)}\n            />\n          }\n          label=\"Copy tracks into the new view\"\n        />\n\n        <FormControlLabel\n          className={classes.block}\n          control={\n            <Checkbox\n              checked={mirrorTracks}\n              onChange={() => setMirrorTracks(val => !val)}\n            />\n          }\n          label=\"Mirror tracks vertically in vertically stacked view\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            const { view } = model\n            const session = getSession(model)\n\n            const viewSnapshot = viewType.snapshotFromBreakendFeature(\n              feature,\n              view,\n            )\n            viewSnapshot.views[0].offsetPx -= view.width / 2 + 100\n            viewSnapshot.views[1].offsetPx -= view.width / 2 + 100\n            viewSnapshot.featureData = feature\n            const viewTracks: any = getSnapshot(view.tracks)\n            viewSnapshot.views[0].tracks = viewTracks\n            viewSnapshot.views[1].tracks = mirrorTracks\n              ? viewTracks.slice().reverse()\n              : viewTracks\n\n            session.addView('BreakpointSplitView', viewSnapshot)\n\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          autoFocus\n        >\n          OK\n        </Button>\n        <Button\n          onClick={() => {\n            handleClose()\n          }}\n          color=\"secondary\"\n          variant=\"contained\"\n          autoFocus\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\nexport default observer(BreakendOptionDialog)\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport {\n  Divider,\n  Link,\n  Paper,\n  FormControlLabel,\n  Checkbox,\n  TextField,\n  Typography,\n} from '@material-ui/core'\nimport SimpleFeature, {\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util/simpleFeature'\nimport { DataGrid } from '@material-ui/data-grid'\nimport { observer } from 'mobx-react'\nimport { getSession } from '@jbrowse/core/util'\nimport { getEnv } from 'mobx-state-tree'\nimport {\n  FeatureDetails,\n  BaseCard,\n} from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport BreakendOptionDialog from './BreakendOptionDialog'\nimport { Breakend } from '../VcfTabixAdapter/VcfFeature'\n\n// from vcf-js\nfunction toString(feat: string | Breakend) {\n  if (typeof feat === 'string') {\n    return feat\n  }\n  const char = feat.MateDirection === 'left' ? ']' : '['\n  if (feat.Join === 'left') {\n    return `${char}${feat.MatePosition}${char}${feat.Replacement}`\n  }\n  return `${feat.Replacement}${char}${feat.MatePosition}${char}`\n}\n\nfunction VariantSamples(props: any) {\n  const [filter, setFilter] = useState<any>({})\n  const [showFilters, setShowFilters] = useState(false)\n  const { feature } = props\n\n  const { samples = {} } = feature\n  const preFilteredRows: any = Object.entries(samples)\n  if (!preFilteredRows.length) {\n    return null\n  }\n  const infoFields = ['sample', ...Object.keys(preFilteredRows[0][1])].map(\n    field => ({\n      field,\n    }),\n  )\n  let error\n  let rows = []\n  const filters = Object.keys(filter)\n\n  // catch some error thrown from regex\n  // note: maps all values into a string, if this is not done rows are not\n  // sortable by the data-grid\n  try {\n    rows = preFilteredRows\n      .map((row: any) => ({\n        ...Object.fromEntries(\n          Object.entries(row[1]).map(entry => [entry[0], String(entry[1])]),\n        ),\n        sample: row[0],\n        id: row[0],\n      }))\n      .filter((row: any) => {\n        return filters.length\n          ? filters.every(key => {\n              const val = row[key]\n              const currFilter = filter[key]\n              return currFilter ? val.match(new RegExp(currFilter, 'i')) : true\n            })\n          : true\n      })\n  } catch (e) {\n    error = e\n  }\n  // disableSelectionOnClick helps avoid\n  // https://github.com/mui-org/material-ui-x/issues/1197\n  return (\n    <BaseCard {...props} title=\"Samples\">\n      {error ? <Typography color=\"error\">{`${error}`}</Typography> : null}\n\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={showFilters}\n            onChange={() => setShowFilters(f => !f)}\n          />\n        }\n        label=\"Show sample filters\"\n      />\n      {showFilters ? (\n        <>\n          <Typography>\n            These filters can use a plain text search or regex style query, e.g.\n            in the genotype field, entering 1 will query for all genotypes that\n            include the first alternate allele e.g. 0|1 or 1|1, entering\n            [1-9]\\d* will find any non-zero allele e.g. 0|2 or 2/33\n          </Typography>\n          {infoFields.map(({ field }) => {\n            return (\n              <TextField\n                key={`filter-${field}`}\n                placeholder={`Filter ${field}`}\n                value={filter[field] || ''}\n                onChange={event =>\n                  setFilter({ ...filter, [field]: event.target.value })\n                }\n              />\n            )\n          })}\n        </>\n      ) : null}\n      <div style={{ height: 600, width: '100%', overflow: 'auto' }}>\n        <DataGrid\n          rows={rows}\n          columns={infoFields}\n          rowHeight={20}\n          headerHeight={25}\n          disableSelectionOnClick\n          disableColumnMenu\n        />\n      </div>\n    </BaseCard>\n  )\n}\n\nfunction BreakendPanel(props: {\n  locStrings: string[]\n  model: any\n  feature: SimpleFeatureSerialized\n}) {\n  const { model, locStrings, feature } = props\n  const session = getSession(model)\n  const { pluginManager } = getEnv(session)\n  const [breakpointDialog, setBreakpointDialog] = useState(false)\n  let viewType: any\n  try {\n    viewType = pluginManager.getViewType('BreakpointSplitView')\n  } catch (e) {\n    // plugin not added\n  }\n\n  const simpleFeature = new SimpleFeature(feature)\n  return (\n    <BaseCard {...props} title=\"Breakends\">\n      <Typography>Link to linear view of breakend endpoints</Typography>\n      <ul>\n        {locStrings.map((locString, index) => {\n          return (\n            <li key={`${JSON.stringify(locString)}-${index}`}>\n              <Link\n                href=\"#\"\n                onClick={() => {\n                  const { view } = model\n                  if (view) {\n                    view.navToLocString?.(locString)\n                  } else {\n                    session.notify(\n                      'No view associated with this feature detail panel anymore',\n                      'warning',\n                    )\n                  }\n                }}\n              >\n                {`LGV - ${locString}`}\n              </Link>\n            </li>\n          )\n        })}\n      </ul>\n      {viewType ? (\n        <>\n          <Typography>\n            Launch split views with breakend source and target\n          </Typography>\n          <ul>\n            {locStrings.map((locString, index) => {\n              return (\n                <li key={`${JSON.stringify(locString)}-${index}`}>\n                  <Link\n                    href=\"#\"\n                    onClick={() => {\n                      setBreakpointDialog(true)\n                    }}\n                  >\n                    {`${feature.refName}:${feature.start} // ${locString} (split view)`}\n                  </Link>\n                </li>\n              )\n            })}\n          </ul>\n          {breakpointDialog ? (\n            <BreakendOptionDialog\n              model={model}\n              feature={simpleFeature}\n              viewType={viewType}\n              handleClose={() => {\n                setBreakpointDialog(false)\n              }}\n            />\n          ) : null}\n        </>\n      ) : null}\n    </BaseCard>\n  )\n}\n\nfunction VariantFeatureDetails(props: any) {\n  const { model } = props\n  const { featureData, descriptions } = model\n  const feat = JSON.parse(JSON.stringify(featureData))\n  const { samples, ...rest } = feat\n  const basicDescriptions = {\n    CHROM: 'chromosome: An identifier from the reference genome',\n    POS:\n      'position: The reference position, with the 1st base having position 1',\n    ID:\n      'identifier: Semi-colon separated list of unique identifiers where available',\n    REF:\n      'reference base(s): Each base must be one of A,C,G,T,N (case insensitive).',\n    ALT:\n      ' alternate base(s): Comma-separated list of alternate non-reference alleles',\n    QUAL: 'quality: Phred-scaled quality score for the assertion made in ALT',\n    FILTER:\n      'filter status: PASS if this position has passed all filters, otherwise a semicolon-separated list of codes for filters that fail',\n  }\n\n  return (\n    <Paper data-testid=\"variant-side-drawer\">\n      <FeatureDetails\n        feature={{\n          ...rest,\n          ALT: rest.ALT?.map((alt: string | Breakend) => toString(alt)),\n        }}\n        descriptions={{ ...basicDescriptions, ...descriptions }}\n        {...props}\n      />\n      <Divider />\n      {feat.type === 'breakend' ? (\n        <BreakendPanel\n          feature={feat}\n          locStrings={feat.ALT.map((alt: any) => alt.MatePosition)}\n          model={model}\n        />\n      ) : null}\n      {feat.type === 'translocation' ? (\n        <BreakendPanel\n          feature={feat}\n          model={model}\n          locStrings={[`${feat.INFO.CHR2[0]}:${feat.INFO.END}`]}\n        />\n      ) : null}\n      <VariantSamples feature={feat} {...props} />\n    </Paper>\n  )\n}\n\nexport default observer(VariantFeatureDetails)\n","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;"],"sourceRoot":""}