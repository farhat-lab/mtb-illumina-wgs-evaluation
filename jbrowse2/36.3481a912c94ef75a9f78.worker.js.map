{"version":3,"sources":["../../../plugins/alignments/src/LinearPileupDisplay/components/SetFeatureHeight.tsx"],"names":["useStyles","makeStyles","theme","root","margin","spacing","closeButton","position","right","top","color","palette","grey","observer","props","classes","model","handleClose","featureHeightSetting","noSpacingSetting","noSpacing","useState","height","setHeight","setNoSpacing","ok","Number","isNaN","open","onClose","className","onClick","value","onChange","event","target","control","checked","val","label","variant","type","style","marginLeft","disabled","setFeatureHeight","undefined"],"mappings":"8MAgBMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,OAAQF,EAAMG,QAAQ,IAExBC,YAAa,CACXC,SAAU,WACVC,MAAON,EAAMG,QAAQ,GACrBI,IAAKP,EAAMG,QAAQ,GACnBK,MAAOR,EAAMS,QAAQC,KAAK,UAiFfC,8BA7Ef,SAA6BC,GAa3B,IAAMC,EAAUf,IACRgB,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,YACPC,EAAsDF,EAAtDE,qBAAiCC,EAAqBH,EAAhCI,UAH7B,EAK2BC,mBAAS,GAAD,OAAIH,IALvC,mBAKMI,EALN,KAKcC,EALd,OAMiCF,mBAASF,GAN1C,mBAMMC,EANN,KAMiBI,EANjB,KAQKC,EAAgB,KAAXH,IAAkBI,OAAOC,OAAOL,GAE3C,OACE,kBAAC,IAAD,CAAQM,MAAI,EAACC,QAASZ,GACpB,kBAAC,IAAD,0BAEE,kBAAC,IAAD,CAAYa,UAAWf,EAAQT,YAAayB,QAASd,GACnD,kBAAC,IAAD,QAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,qKAKA,yBAAKa,UAAWf,EAAQZ,MACtB,kBAAC,IAAD,+BACA,kBAAC,IAAD,CACE6B,MAAOV,EACPW,SAAU,SAAAC,GACRX,EAAUW,EAAMC,OAAOH,UAG3B,kBAAC,IAAD,CACEI,QACE,kBAAC,IAAD,CACEC,UAAWjB,EACXa,SAAU,kBAAMT,GAAa,SAAAc,GAAG,OAAKA,QAGzCC,MAAM,oDAGR,kBAAC,IAAD,CACEC,QAAQ,YACR9B,MAAM,UACN+B,KAAK,SACLC,MAAO,CAAEC,WAAY,IACrBC,UAAWnB,EACXM,QAAS,WACPf,EAAM6B,iBACO,KAAXvB,GAAkBI,OAAOC,OAAOL,QAAoBwB,GAATxB,GAE7CN,EAAMQ,aAAaJ,GAEnBH,MAZJ","file":"36.3481a912c94ef75a9f78.worker.js","sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  TextField,\n  Typography,\n  IconButton,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(4),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nfunction SetFeatureHeightDlg(props: {\n  model: {\n    minScore: number\n    maxScore: number\n    setMinScore: Function\n    setMaxScore: Function\n    setFeatureHeight: Function\n    setNoSpacing: Function\n    featureHeightSetting: number\n    noSpacing: boolean\n  }\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  const { model, handleClose } = props\n  const { featureHeightSetting, noSpacing: noSpacingSetting } = model\n\n  const [height, setHeight] = useState(`${featureHeightSetting}`)\n  const [noSpacing, setNoSpacing] = useState(noSpacingSetting)\n\n  const ok = height !== '' && !Number.isNaN(+height)\n\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        Set feature height\n        <IconButton className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Typography>\n          Adjust the feature height and whether there is any spacing between\n          features. Setting feature height to 1 and removing spacing makes the\n          display very compact\n        </Typography>\n        <div className={classes.root}>\n          <Typography>Enter feature height: </Typography>\n          <TextField\n            value={height}\n            onChange={event => {\n              setHeight(event.target.value)\n            }}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={!!noSpacing}\n                onChange={() => setNoSpacing(val => !val)}\n              />\n            }\n            label=\"Remove spacing between features in y-direction?\"\n          />\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            style={{ marginLeft: 20 }}\n            disabled={!ok}\n            onClick={() => {\n              model.setFeatureHeight(\n                height !== '' && !Number.isNaN(+height) ? +height : undefined,\n              )\n              model.setNoSpacing(noSpacing)\n\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(SetFeatureHeightDlg)\n"],"sourceRoot":""}