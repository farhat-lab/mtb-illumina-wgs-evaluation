{"version":3,"sources":["../../../node_modules/@material-ui/icons/RotateLeft.js","../../../node_modules/@material-ui/icons/RotateRight.js","../../../node_modules/@material-ui/icons/LockOutlined.js","../../../node_modules/@material-ui/icons/LockOpen.js","../../../plugins/circular-view/src/CircularView/components/Ruler.js","../../../plugins/circular-view/src/CircularView/components/CircularView.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","rulerLabel","fontSize","fontWeight","lineHeight","letterSpacing","sliceArcPath","slice","radiusPx","startBase","endBase","startXY","endXY","largeArc","Math","ElisionRulerArc","observer","model","theme","useTheme","endRadians","startRadians","region","polarToCartesian","widthPx","centerRadians","regionCountString","Number","text","view","maxWidthPx","radians","title","color","primary","stroke","strokeWidth","strokeDasharray","fill","RulerLabel","classes","textXY","x","y","className","textAnchor","dominantBaseline","transform","radToDeg","style","RegionRulerArc","assembly","getSession","session","makeContrasting","error","key","assembleLocString","root","position","marginBottom","overflow","background","scroller","sliceRoot","boxSizing","display","iconButton","padding","margin","controls","whiteSpace","grey","borderRight","borderBottom","left","top","importFormContainer","Slices","track","Controls","showingFigure","onClick","disabled","data-testid","ImportForm","useState","selectedAssemblyIdx","setSelectedAssemblyIdx","assemblyNames","assemblyManager","assemblyError","regions","getSnapshot","container","spacing","justify","alignItems","item","select","onChange","event","helperText","idx","variant","CircularView","initialized","showImportForm","showFigure","width","height","id","transition","transformOrigin","version","onDrag","bottom","borderTop"],"mappings":"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","file":"static/js/24.f2bf7120.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M7.11 8.53L5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47zM6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47zm1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03L7.1 18.32zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93z\"\n}), 'RotateLeft');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M15.55 5.55L11 1v3.07C7.06 4.56 4 7.92 4 12s3.05 7.44 7 7.93v-2.02c-2.84-.48-5-2.94-5-5.91s2.16-5.43 5-5.91V10l4.55-4.45zM19.93 11c-.17-1.39-.72-2.73-1.62-3.89l-1.42 1.42c.54.75.88 1.6 1.02 2.47h2.02zM13 17.9v2.02c1.39-.17 2.74-.71 3.9-1.61l-1.44-1.44c-.75.54-1.59.89-2.46 1.03zm3.89-2.42l1.42 1.41c.9-1.16 1.45-2.5 1.62-3.89h-2.02c-.14.87-.48 1.72-1.02 2.48z\"\n}), 'RotateRight');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z\"\n}), 'LockOpen');\n\nexports.default = _default;","import React from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  getSession,\n  polarToCartesian,\n  radToDeg,\n  assembleLocString,\n} from '@jbrowse/core/util'\nimport { makeContrasting } from '@jbrowse/core/util/color'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  rulerLabel: {\n    fontSize: '0.8rem',\n    fontWeight: 500,\n    lineHeight: 1.6,\n    letterSpacing: '0.0075em',\n  },\n})\n\nfunction sliceArcPath(slice, radiusPx, startBase, endBase) {\n  // A rx ry x-axis-rotation large-arc-flag sweep-flag x y\n  if (slice.flipped) [startBase, endBase] = [endBase, startBase]\n  const startXY = slice.bpToXY(startBase, radiusPx)\n  const endXY = slice.bpToXY(endBase, radiusPx)\n  const largeArc =\n    Math.abs(endBase - startBase) / slice.bpPerRadian > Math.PI ? '1' : '0'\n  const sweepFlag = '1'\n  return [\n    'M',\n    ...startXY,\n    'A',\n    radiusPx,\n    radiusPx,\n    '0',\n    largeArc,\n    sweepFlag,\n    ...endXY,\n  ].join(' ')\n}\n\nconst ElisionRulerArc = observer(({ model, slice }) => {\n  const theme = useTheme()\n  const { radiusPx: modelRadiusPx } = model\n  const radiusPx = modelRadiusPx + 1\n  const { endRadians, startRadians, region } = slice\n  const startXY = polarToCartesian(radiusPx, startRadians)\n  const endXY = polarToCartesian(radiusPx, endRadians)\n  const widthPx = (endRadians - startRadians) * radiusPx\n  const largeArc = endRadians - startRadians > Math.PI ? '1' : '0'\n  // TODO: draw the elision\n  const centerRadians = (endRadians + startRadians) / 2\n  const regionCountString = `[${Number(\n    region.regions.length,\n  ).toLocaleString()}]`\n  return (\n    <>\n      <RulerLabel\n        text={regionCountString}\n        view={model}\n        maxWidthPx={widthPx}\n        radians={centerRadians}\n        radiusPx={radiusPx}\n        title={`${Number(region.regions.length).toLocaleString()} more regions`}\n        color={theme.palette.text.primary}\n      />\n      <path\n        d={[\n          'M',\n          ...startXY,\n          'A',\n          radiusPx,\n          radiusPx,\n          '0',\n          largeArc,\n          '1',\n          ...endXY,\n        ].join(' ')}\n        stroke={theme.palette.text.secondary}\n        strokeWidth={2}\n        strokeDasharray=\"2,2\"\n        fill=\"none\"\n      />\n    </>\n  )\n})\n\nconst RulerLabel = observer(\n  ({ view, text, maxWidthPx, radians, radiusPx, title, color }) => {\n    const classes = useStyles()\n    const textXY = polarToCartesian(radiusPx + 5, radians)\n    if (!text) return null\n\n    if (text.length * 6.5 < maxWidthPx) {\n      // text is rotated parallel to the ruler arc\n      return (\n        <text\n          x={0}\n          y={0}\n          className={classes.rulerLabel}\n          textAnchor=\"middle\"\n          dominantBaseline=\"baseline\"\n          transform={`translate(${textXY}) rotate(${radToDeg(radians) + 90})`}\n          style={{ fill: color }}\n        >\n          {text}\n          <title>{title || text}</title>\n        </text>\n      )\n    }\n    if (maxWidthPx > 4) {\n      // text is rotated perpendicular to the ruler arc\n      const overallRotation = radToDeg(\n        radians + view.offsetRadians - Math.PI / 2,\n      )\n      if (overallRotation >= 180) {\n        return (\n          <text\n            x={0}\n            y={0}\n            className={classes.rulerLabel}\n            textAnchor=\"start\"\n            dominantBaseline=\"middle\"\n            transform={`translate(${textXY}) rotate(${radToDeg(radians)})`}\n            style={{ fill: color }}\n          >\n            {text}\n            <title>{title || text}</title>\n          </text>\n        )\n      }\n      return (\n        <text\n          x={0}\n          y={0}\n          className={classes.rulerLabel}\n          textAnchor=\"end\"\n          dominantBaseline=\"middle\"\n          transform={`translate(${textXY}) rotate(${radToDeg(radians) + 180})`}\n          style={{ fill: color }}\n        >\n          {text}\n          <title>{title || text}</title>\n        </text>\n      )\n    }\n\n    // if you get here there is no room for the text at all\n    return null\n  },\n)\n\nconst RegionRulerArc = observer(({ model, slice }) => {\n  const theme = useTheme()\n  const { radiusPx } = model\n  const { region, endRadians, startRadians } = slice\n  const centerRadians = (endRadians + startRadians) / 2\n  const widthPx = (endRadians - startRadians) * radiusPx\n  const session = getSession(model)\n  let color\n  const assembly = session.assemblyManager.get(slice.region.assemblyName)\n  if (assembly) {\n    color = assembly.getRefNameColor(region.refName)\n  }\n  if (color) {\n    try {\n      color = makeContrasting(color, theme.palette.background.paper)\n    } catch (error) {\n      color = theme.palette.text.primary\n    }\n  } else {\n    color = theme.palette.text.primary\n  }\n\n  // TODO: slice flipping\n  return (\n    <>\n      <RulerLabel\n        text={region.refName}\n        view={model}\n        maxWidthPx={widthPx}\n        radians={centerRadians}\n        radiusPx={radiusPx}\n        color={color}\n      />\n      <path\n        d={sliceArcPath(slice, radiusPx + 1, region.start, region.end)}\n        stroke={color}\n        strokeWidth={2}\n        fill=\"none\"\n      >\n        <title>{region.refName}</title>\n      </path>\n    </>\n  )\n})\n\nconst CircularRuler = observer(function Ruler({ model, slice }) {\n  if (slice.region.elided) {\n    return (\n      <ElisionRulerArc\n        key={assembleLocString(slice.region.regions[0])}\n        model={model}\n        slice={slice}\n      />\n    )\n  }\n  return (\n    <RegionRulerArc\n      key={assembleLocString(slice.region)}\n      model={model}\n      slice={slice}\n    />\n  )\n})\n\nexport default CircularRuler\n","import ZoomOut from '@material-ui/icons/ZoomOut'\nimport ZoomIn from '@material-ui/icons/ZoomIn'\nimport RotateLeft from '@material-ui/icons/RotateLeft'\nimport RotateRight from '@material-ui/icons/RotateRight'\nimport LockOutline from '@material-ui/icons/LockOutlined'\nimport LockOpen from '@material-ui/icons/LockOpen'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\n\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport React, { useState } from 'react'\n\n// material-ui stuff\nimport {\n  Button,\n  Container,\n  Grid,\n  IconButton,\n  MenuItem,\n  TextField,\n  makeStyles,\n} from '@material-ui/core'\n\nimport { grey } from '@material-ui/core/colors'\n\nimport { ResizeHandle } from '@jbrowse/core/ui'\nimport { assembleLocString, getSession } from '@jbrowse/core/util'\nimport Ruler from './Ruler'\n\nconst dragHandleHeight = 3\n\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      position: 'relative',\n      marginBottom: theme.spacing(1),\n      overflow: 'hidden',\n      background: 'white',\n    },\n    scroller: {\n      overflow: 'auto',\n    },\n    sliceRoot: {\n      background: 'none',\n      // background: theme.palette.background.paper,\n      boxSizing: 'content-box',\n      display: 'block',\n    },\n    iconButton: {\n      padding: '4px',\n      margin: '0 2px 0 2px',\n    },\n    controls: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      position: 'absolute',\n      background: grey[200],\n      boxSizing: 'border-box',\n      borderRight: '1px solid #a2a2a2',\n      borderBottom: '1px solid #a2a2a2',\n      left: 0,\n      top: 0,\n    },\n    importFormContainer: {\n      marginBottom: theme.spacing(4),\n    },\n  }\n})\n\nconst Slices = observer(({ model }) => {\n  return (\n    <>\n      <>\n        {model.staticSlices.map(slice => {\n          return (\n            <Ruler\n              key={assembleLocString(\n                slice.region.elided ? slice.region.regions[0] : slice.region,\n              )}\n              model={model}\n              slice={slice}\n            />\n          )\n        })}\n      </>\n      <>\n        {model.tracks.map(track => {\n          const display = track.displays[0]\n          return (\n            <display.RenderingComponent\n              key={display.id}\n              display={display}\n              view={model}\n            />\n          )\n        })}\n      </>\n    </>\n  )\n})\n\nconst Controls = observer(({ model, showingFigure }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.controls}>\n      <IconButton\n        onClick={model.zoomOutButton}\n        className={classes.iconButton}\n        title={model.lockedFitToWindow ? 'unlock to zoom out' : 'zoom out'}\n        disabled={\n          !showingFigure || model.atMaxBpPerPx || model.lockedFitToWindow\n        }\n        color=\"secondary\"\n      >\n        <ZoomOut />\n      </IconButton>\n\n      <IconButton\n        onClick={model.zoomInButton}\n        className={classes.iconButton}\n        title=\"zoom in\"\n        disabled={!showingFigure || model.atMinBpPerPx}\n        color=\"secondary\"\n      >\n        <ZoomIn />\n      </IconButton>\n\n      <IconButton\n        onClick={model.rotateCounterClockwiseButton}\n        className={classes.iconButton}\n        title=\"rotate counter-clockwise\"\n        disabled={!showingFigure}\n        color=\"secondary\"\n      >\n        <RotateLeft />\n      </IconButton>\n\n      <IconButton\n        onClick={model.rotateClockwiseButton}\n        className={classes.iconButton}\n        title=\"rotate clockwise\"\n        disabled={!showingFigure}\n        color=\"secondary\"\n      >\n        <RotateRight />\n      </IconButton>\n\n      <IconButton\n        onClick={model.toggleFitToWindowLock}\n        className={classes.iconButton}\n        title={\n          model.lockedFitToWindow\n            ? 'locked model to window size'\n            : 'unlocked model to zoom further'\n        }\n        disabled={model.tooSmallToLock}\n        color=\"secondary\"\n      >\n        {model.lockedFitToWindow ? <LockOutline /> : <LockOpen />}\n      </IconButton>\n\n      {model.hideTrackSelectorButton ? null : (\n        <IconButton\n          onClick={model.activateTrackSelector}\n          title=\"Open track selector\"\n          data-testid=\"circular_track_select\"\n          color=\"secondary\"\n        >\n          <TrackSelectorIcon />\n        </IconButton>\n      )}\n    </div>\n  )\n})\n\nconst ImportForm = observer(({ model }) => {\n  const classes = useStyles()\n  const [selectedAssemblyIdx, setSelectedAssemblyIdx] = useState(0)\n  const { assemblyNames, assemblyManager } = getSession(model)\n  const assemblyError = assemblyNames.length ? '' : 'No configured assemblies'\n  const assembly = assemblyManager.get(assemblyNames[selectedAssemblyIdx])\n  const regions =\n    assembly && assembly.regions ? getSnapshot(assembly.regions) : []\n\n  function onAssemblyChange(event) {\n    setSelectedAssemblyIdx(Number(event.target.value))\n  }\n\n  function onOpenClick() {\n    model.setDisplayedRegions(regions)\n  }\n\n  return (\n    <>\n      <Container className={classes.importFormContainer}>\n        <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n          <Grid item>\n            <TextField\n              select\n              value={\n                assemblyNames[selectedAssemblyIdx] && !assemblyError\n                  ? selectedAssemblyIdx\n                  : ''\n              }\n              onChange={onAssemblyChange}\n              helperText={assemblyError || 'Select assembly to view'}\n              error={!!assemblyError}\n              disabled={!!assemblyError}\n              margin=\"normal\"\n            >\n              {assemblyNames.map((name, idx) => (\n                <MenuItem key={name} value={idx}>\n                  {name}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n          <Grid item>\n            <Button\n              disabled={!(regions && regions.length)}\n              onClick={onOpenClick}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              {regions.length ? 'Open' : 'Loading…'}\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  )\n})\n\nconst CircularView = observer(({ model }) => {\n  const classes = useStyles()\n  const initialized =\n    !!model.displayedRegions.length && model.figureWidth && model.figureHeight\n\n  const showImportForm = !initialized && !model.disableImportForm\n  const showFigure = initialized && !showImportForm\n\n  return (\n    <div\n      className={classes.root}\n      style={{\n        width: model.width,\n        height: model.height,\n      }}\n      data-testid={model.id}\n    >\n      {model.error ? (\n        <p style={{ color: 'red' }}>{model.error.message}</p>\n      ) : (\n        <>\n          {showImportForm ? <ImportForm model={model} /> : null}\n          <>\n            {!showFigure ? null : (\n              <div\n                className={classes.scroller}\n                style={{\n                  width: model.width,\n                  height: model.height,\n                }}\n              >\n                <div\n                  className={classes.rotator}\n                  style={{\n                    transform: [`rotate(${model.offsetRadians}rad)`].join(' '),\n                    transition: 'transform 0.5s',\n                    transformOrigin: model.centerXY\n                      .map(x => `${x}px`)\n                      .join(' '),\n                  }}\n                >\n                  <svg\n                    style={{\n                      position: 'absolute',\n                      left: 0,\n                      top: 0,\n                    }}\n                    className={classes.sliceRoot}\n                    width={`${model.figureWidth}px`}\n                    height={`${model.figureHeight}px`}\n                    version=\"1.1\"\n                  >\n                    <g transform={`translate(${model.centerXY})`}>\n                      <Slices model={model} />\n                    </g>\n                  </svg>\n                </div>\n              </div>\n            )}\n            <Controls model={model} showingFigure={showFigure} />\n            {model.hideVerticalResizeHandle ? null : (\n              <ResizeHandle\n                onDrag={model.resizeHeight}\n                style={{\n                  height: dragHandleHeight,\n                  position: 'absolute',\n                  bottom: 0,\n                  left: 0,\n                  background: '#ccc',\n                  boxSizing: 'border-box',\n                  borderTop: '1px solid #fafafa',\n                }}\n              />\n            )}\n          </>\n        </>\n      )}\n    </div>\n  )\n})\n\nexport default CircularView\n"],"sourceRoot":""}