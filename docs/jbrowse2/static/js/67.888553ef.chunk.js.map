{"version":3,"sources":["../../../plugins/menus/src/AboutWidget/components/AboutWidget.tsx"],"names":["useStyles","makeStyles","theme","root","margin","spacing","paddingTop","subtitle","pluginList","marginTop","observer","model","classes","slotDefinition","version","pluginManager","plugins","pluginMetaData","getEnv","corePlugins","filter","p","Boolean","name","isCore","map","corePluginsRender","plugin","includes","key","externalPluginsRender","text","url","target","rel","href","className","variant","align","color","getSession","length"],"mappings":"sHAAA,+EAOMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,OAAQF,EAAMG,QAAQ,GACtBC,WAAYJ,EAAMG,QAAQ,IAE5BE,SAAU,CACRH,OAAQF,EAAMG,WAEhBG,WAAY,CACVJ,OAAQF,EAAMG,QAAQ,GACtBI,UAAWP,EAAMG,QAAQ,QA+FdK,8BArFf,YAAwD,IAAvCC,EAAuC,EAAvCA,MACTC,EAAUZ,IACVa,EAAiB,CACrBC,QAAS,GACTC,cAAe,CACbC,QAAS,GACTC,eAAgB,KAGZF,GAAkBJ,EAAQO,iBAAOP,GAASE,GAA1CE,cACAC,EAAYD,EAAZC,QACFG,EAAcH,EACjBI,QAAO,SAACC,GAAD,aACNC,QAAO,UAACP,EAAcE,eAAeI,EAAEE,aAAhC,aAAC,EAAsCC,WAE/CC,KAAI,SAACJ,GAAD,OAAmBA,EAAEE,QAEtBG,EAAoBV,EACvBI,QAAO,SAACO,GACP,OAAOR,EAAYS,SAASD,EAAOJ,SAEpCE,KAAI,SAACE,GACJ,OACE,wBAAIE,IAAKF,EAAOJ,MACbI,EAAOJ,KADV,IACiBI,EAAOb,SAAW,OAKnCgB,EAAwBd,EAC3BI,QAAO,SAACO,GACP,OAAQR,EAAYS,SAASD,EAAOJ,SAErCE,KAAI,SAACE,GACJ,IAAMI,EAAO,GAAH,OAAMJ,EAAOJ,KAAb,YAAqBI,EAAOb,SAAW,IACjD,OACE,wBAAIe,IAAKF,EAAOJ,MACbI,EAAOK,IACN,kBAAC,IAAD,CAAMC,OAAO,SAASC,IAAI,sBAAsBC,KAAMR,EAAOK,KAC1DD,GAGHA,MAMV,OACE,yBAAKK,UAAWxB,EAAQT,MACtB,kBAAC,IAAD,CAAYkC,QAAQ,KAAKC,MAAM,SAASC,MAAM,WAA9C,aAGA,kBAAC,IAAD,CAAYF,QAAQ,KAAKC,MAAM,SAASF,UAAWxB,EAAQL,UACxDI,EAAQ6B,qBAAW7B,GAAOG,QAAUD,EAAeC,SAEtD,kBAAC,IAAD,CAAYwB,MAAM,SAASD,QAAQ,SAAnC,eACe,IACb,kBAAC,IAAD,CAAMF,KAAK,mBAAmBF,OAAO,SAASC,IAAI,uBAAlD,QAEQ,IAJV,WAOA,6BACA,kBAAC,IAAD,CAAYI,MAAM,UAAlB,uDAGA,yBAAKF,UAAWxB,EAAQJ,YACpBsB,EAAsBW,OACtB,oCACE,kBAAC,IAAD,CAAYJ,QAAQ,MAApB,2BACA,4BAAKP,IAHwB,KAM/BJ,EAAkBe,OAClB,oCACE,kBAAC,IAAD,CAAYJ,QAAQ,MAApB,uBACA,4BAAKX,IAHoB","file":"static/js/67.888553ef.chunk.js","sourcesContent":["import React from 'react'\nimport { observer } from 'mobx-react'\nimport { IAnyStateTreeNode, getEnv } from 'mobx-state-tree'\nimport { getSession } from '@jbrowse/core/util'\nimport { makeStyles, Typography, Link } from '@material-ui/core'\nimport { PluginMetaData } from '@jbrowse/core/PluginManager'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n  },\n  subtitle: {\n    margin: theme.spacing(),\n  },\n  pluginList: {\n    margin: theme.spacing(1),\n    marginTop: theme.spacing(5),\n  },\n}))\n\ninterface BasePlugin {\n  version?: string\n  name: string\n  url?: string\n}\n\nfunction About({ model }: { model: IAnyStateTreeNode }) {\n  const classes = useStyles()\n  const slotDefinition = {\n    version: '',\n    pluginManager: {\n      plugins: [],\n      pluginMetaData: {} as Record<string, PluginMetaData>,\n    },\n  }\n  const { pluginManager } = model ? getEnv(model) : slotDefinition\n  const { plugins } = pluginManager\n  const corePlugins = plugins\n    .filter((p: BasePlugin) =>\n      Boolean(pluginManager.pluginMetaData[p.name]?.isCore),\n    )\n    .map((p: BasePlugin) => p.name)\n\n  const corePluginsRender = plugins\n    .filter((plugin: BasePlugin) => {\n      return corePlugins.includes(plugin.name)\n    })\n    .map((plugin: BasePlugin) => {\n      return (\n        <li key={plugin.name}>\n          {plugin.name} {plugin.version || ''}\n        </li>\n      )\n    })\n\n  const externalPluginsRender = plugins\n    .filter((plugin: BasePlugin) => {\n      return !corePlugins.includes(plugin.name)\n    })\n    .map((plugin: BasePlugin) => {\n      const text = `${plugin.name} ${plugin.version || ''}`\n      return (\n        <li key={plugin.name}>\n          {plugin.url ? (\n            <Link target=\"_blank\" rel=\"noopener noreferrer\" href={plugin.url}>\n              {text}\n            </Link>\n          ) : (\n            text\n          )}\n        </li>\n      )\n    })\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\" align=\"center\" color=\"primary\">\n        JBrowse 2\n      </Typography>\n      <Typography variant=\"h6\" align=\"center\" className={classes.subtitle}>\n        {model ? getSession(model).version : slotDefinition.version}\n      </Typography>\n      <Typography align=\"center\" variant=\"body2\">\n        JBrowse is a{' '}\n        <Link href=\"http://gmod.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          GMOD\n        </Link>{' '}\n        project\n      </Typography>\n      <br />\n      <Typography align=\"center\">\n        Â© 2019-2021 The Evolutionary Software Foundation\n      </Typography>\n      <div className={classes.pluginList}>\n        {!externalPluginsRender.length ? null : (\n          <>\n            <Typography variant=\"h6\">External plugins loaded</Typography>\n            <ul>{externalPluginsRender}</ul>\n          </>\n        )}\n        {!corePluginsRender.length ? null : (\n          <>\n            <Typography variant=\"h6\">Core plugins loaded</Typography>\n            <ul>{corePluginsRender}</ul>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default observer(About)\n"],"sourceRoot":""}