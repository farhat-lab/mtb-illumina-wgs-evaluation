{"version":3,"sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/CloseConnectionDialog.tsx"],"names":["observer","modalInfo","setModalInfo","name","dereferenceTypeCount","safelyBreakConnection","open","Object","entries","map","key","value","onClick","color","variant"],"mappings":"iPAsEeA,8BAzDf,YAOG,QANDC,iBAMC,MANW,GAMX,EALDC,EAKC,EALDA,aAMQC,EAAsDF,EAAtDE,KAAMC,EAAgDH,EAAhDG,qBAAsBC,EAA0BJ,EAA1BI,sBACpC,OACE,kBAAC,IAAD,CAAQC,MAAI,GACV,kBAAC,IAAD,0BAAqCH,EAArC,KACA,kBAAC,IAAD,KACGC,EACC,oCACE,kBAAC,IAAD,4CAGA,kBAAC,IAAD,KACGG,OAAOC,QAAQJ,GAAsBK,KAAI,mCAAEC,EAAF,KAAOC,EAAP,YACxC,kBAAC,IAAD,CAAUD,IAAKA,GAAf,UAAwBC,EAAxB,YAAiCD,SAIrC,KACJ,kBAAC,IAAD,yDAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,QAAS,WACPV,KAEFW,MAAM,WAJR,UAQA,kBAAC,IAAD,CACEC,QAAQ,YACRF,QACEX,EACI,WACMI,GAAuBA,IAC3BH,KAEF,aAENW,MAAM,WAVR","file":"static/js/58.b14539df.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  Button,\n  List,\n  ListItem,\n  DialogActions,\n} from '@material-ui/core'\nimport { observer } from 'mobx-react'\n\nfunction CloseConnectionDialog({\n  modalInfo = {},\n  setModalInfo,\n}: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  modalInfo: any\n  setModalInfo: Function\n}) {\n  const { name, dereferenceTypeCount, safelyBreakConnection } = modalInfo\n  return (\n    <Dialog open>\n      <DialogTitle>Close connection &quot;{name}&quot;</DialogTitle>\n      <DialogContent>\n        {dereferenceTypeCount ? (\n          <>\n            <DialogContentText>\n              Closing this connection will close:\n            </DialogContentText>\n            <List>\n              {Object.entries(dereferenceTypeCount).map(([key, value]) => (\n                <ListItem key={key}>{`${value} ${key}`}</ListItem>\n              ))}\n            </List>\n          </>\n        ) : null}\n        <DialogContentText>\n          Are you sure you want to close this connection?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            setModalInfo()\n          }}\n          color=\"primary\"\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={\n            modalInfo\n              ? () => {\n                  if (safelyBreakConnection) safelyBreakConnection()\n                  setModalInfo()\n                }\n              : () => {}\n          }\n          color=\"primary\"\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(CloseConnectionDialog)\n"],"sourceRoot":""}