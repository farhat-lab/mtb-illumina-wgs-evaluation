{"version":3,"sources":["../../../node_modules/@babel/runtime-corejs2/helpers/AwaitValue.js","../../../node_modules/@babel/runtime-corejs2/helpers/asyncGeneratorDelegate.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../../../node_modules/@gmod/nclist/dist/index.js","../../../node_modules/@gmod/nclist/dist/feature_store.js","../../../node_modules/@babel/runtime-corejs2/helpers/objectSpread.js","../../../node_modules/@babel/runtime-corejs2/helpers/AsyncGenerator.js","../../../node_modules/@gmod/nclist/dist/nclist.js","../../../node_modules/@gmod/nclist/dist/array_representation.js","../../../node_modules/@gmod/nclist/dist/lazy_array.js","../../../node_modules/@babel/runtime-corejs2/helpers/defineProperty.js","../../../node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js","../../../node_modules/@babel/runtime-corejs2/helpers/slicedToArray.js","../../../node_modules/@babel/runtime-corejs2/core-js/get-iterator.js","../../../node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","../../../node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","../../../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/symbol/iterator.js","../../../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/object/get-own-property-descriptor.js","../../../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js","../../../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/get-iterator.js","../../../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/core.get-iterator.js","../../../node_modules/@babel/runtime-corejs2/helpers/arrayWithHoles.js","../../../node_modules/@babel/runtime-corejs2/helpers/iterableToArrayLimit.js","../../../node_modules/@babel/runtime-corejs2/helpers/nonIterableRest.js","../../../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/object/get-own-property-symbols.js","../../../node_modules/@babel/runtime-corejs2/helpers/awaitAsyncGenerator.js","../../../node_modules/@babel/runtime-corejs2/helpers/wrapAsyncGenerator.js","../../../node_modules/@babel/runtime-corejs2/helpers/asyncIterator.js","../../../node_modules/@gmod/nclist/node_modules/quick-lru/index.js","../../../node_modules/@babel/runtime-corejs2/helpers/toConsumableArray.js","../../../node_modules/@babel/runtime-corejs2/helpers/arrayWithoutHoles.js","../../../node_modules/@babel/runtime-corejs2/helpers/iterableToArray.js","../../../node_modules/@babel/runtime-corejs2/helpers/nonIterableSpread.js","../../../node_modules/@gmod/nclist/dist/util.js"],"names":["module","exports","value","this","wrapped","_Symbol$iterator","_Symbol","_Promise","inner","awaitWrap","iter","waiting","pump","key","resolve","done","next","_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError","_interopRequireDefault","require","_Object$defineProperty","default","_default","_slicedToArray2","_regenerator","_asyncToGenerator2","_keys","_objectSpread2","_classCallCheck2","_createClass2","_awaitAsyncGenerator2","_wrapAsyncGenerator2","_asyncIterator2","_url","_quickLru","_abortablePromiseCache","_nclist","_array_representation","_lazy_array","_util","idfunc","_uniqueID","parentfunc","_parent","childrenfunc","get","NCListStore","_ref","baseUrl","urlTemplate","readFile","_ref$cacheSize","cacheSize","urlTemplates","root","Error","dataRootCache","cache","maxSize","fill","fetchDataRoot","bind","refData","trackInfo","listUrl","nclist","importExisting","intervals","attrs","lazyClass","refName","_this2","url","replace","readJSON","then","parseTrackInfo","makeNCList","stats","featureCount","classes","loadNCList","histograms","meta","i","length","lazyArray","arrayParams","_histograms","forEach","entry","key2","String","Number","_getRegionStats","mark","_callee","query","data","wrap","_context","prev","getDataRoot","ref","sent","abrupt","stop","_x","apply","arguments","_getRegionFeatureDensities","_callee2","_ref2","start","end","numBins","basesPerBin","statEntry","histogramMeta","binRatio","firstServerBin","histogram","bin","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_value","_value3","_value4","_i","val","hist","_context2","Math","ceil","find","abs","round","floor","range","t0","return","finish","bins","_x2","_ref3","_this","_callee3","accessors","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_value2","_value5","_value6","feature","path","uniqueID","_context3","iterate","decorated","join","decorateFeature","concat","id","parent","_this3","tags","children","f","_Object$getOwnPropertyDescriptor","_Object$getOwnPropertySymbols","_Object$keys","defineProperty","target","source","Object","ownKeys","filter","sym","enumerable","AwaitValue","AsyncGenerator","gen","front","back","resume","arg","result","wrappedAwait","settle","err","type","reject","_invoke","request","undefined","prototype","_toConsumableArray2","_asyncGeneratorDelegate2","NCList","topList","chunkCache","readChunkItems","baseURL","lazyUrlTemplate","makeFastGetter","arr","item","getter","mid","low","high","chunkNum","defaultContent","from","to","inc","searchGet","testGet","getChunk","getSublist","pendingPromises","sublist","makeGetter","binarySearch","chunkItemsP","push","delegateYield","iterateSublist","_histogram","binWidth","feat","firstBin","lastBin","Array","max","min","_x3","ArrayRepr","fields","cl","attributes","proto","isArrayAttr","attr","map","x","indexOf","toLowerCase","obj","lcattr","adhocIndex","self","set","indices","attrIndices","_accessors","_makeAccessors","_tags","field","field_accessors","cdef","classnum","attrname","offset","c","LazyArray","chunkSize","callback","param","firstChunk","lastChunk","chunkreadFiles","chunk","chunkNumber","chunkData","filterChunkData","_getChunk","queryStart","queryEnd","firstIndex","chunkStart","chunkEnd","configurable","writable","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","$Object","it","getOwnPropertyDescriptor","toIObject","$getOwnPropertyDescriptor","anObject","getIterator","iterFn","_Array$isArray","_getIterator","_isIterable","_arr","_n","_d","_e","_s","getOwnPropertySymbols","fn","QuickLRU","options","Map","oldCache","_size","has","delete","_set","deleted","clear","oldCacheSize","keys","arrayWithoutHoles","iterableToArray","nonIterableSpread","arrayLikeToArray","_Array$from","_readJSON","foo","_options$defaultConte","str","_args","encoding","JSON","parse","code","status"],"mappings":"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","file":"static/js/18.5877f0ff.chunk.js","sourcesContent":["function _AwaitValue(value) {\n  this.wrapped = value;\n}\n\nmodule.exports = _AwaitValue;","var _Symbol$iterator = require(\"../core-js/symbol/iterator\");\n\nvar _Symbol = require(\"../core-js/symbol\");\n\nvar _Promise = require(\"../core-js/promise\");\n\nfunction _asyncGeneratorDelegate(inner, awaitWrap) {\n  var iter = {},\n      waiting = false;\n\n  function pump(key, value) {\n    waiting = true;\n    value = new _Promise(function (resolve) {\n      resolve(inner[key](value));\n    });\n    return {\n      done: false,\n      value: awaitWrap(value)\n    };\n  }\n\n  ;\n\n  if (typeof _Symbol === \"function\" && _Symbol$iterator) {\n    iter[_Symbol$iterator] = function () {\n      return this;\n    };\n  }\n\n  iter.next = function (value) {\n    if (waiting) {\n      waiting = false;\n      return value;\n    }\n\n    return pump(\"next\", value);\n  };\n\n  if (typeof inner[\"throw\"] === \"function\") {\n    iter[\"throw\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        throw value;\n      }\n\n      return pump(\"throw\", value);\n    };\n  }\n\n  if (typeof inner[\"return\"] === \"function\") {\n    iter[\"return\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n\n      return pump(\"return\", value);\n    };\n  }\n\n  return iter;\n}\n\nmodule.exports = _asyncGeneratorDelegate;","export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");_Object$defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _feature_store = _interopRequireDefault(require(\"./feature_store\"));var _default =\n\n_feature_store.default;exports.default = _default;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");_Object$defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/slicedToArray\"));var _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));var _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\"));var _keys = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/keys\"));var _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectSpread\"));var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));var _awaitAsyncGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/awaitAsyncGenerator\"));var _wrapAsyncGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/wrapAsyncGenerator\"));var _asyncIterator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncIterator\"));var _url = _interopRequireDefault(require(\"url\"));\nvar _quickLru = _interopRequireDefault(require(\"quick-lru\"));\nvar _abortablePromiseCache = _interopRequireDefault(require(\"abortable-promise-cache\"));\n\nvar _nclist = _interopRequireDefault(require(\"./nclist\"));\nvar _array_representation = _interopRequireDefault(require(\"./array_representation\"));\nvar _lazy_array = _interopRequireDefault(require(\"./lazy_array\"));\nvar _util = require(\"./util\");\n\nfunction idfunc() {\n  return this._uniqueID;\n}\nfunction parentfunc() {\n  return this._parent;\n}\nfunction childrenfunc() {\n  return this.get('subfeatures');\n}\n\n/**\n   * Sequence feature store using nested containment\n   * lists held in JSON files that are lazily read.\n   *\n   * @param {object} args constructor args\n   * @param {string} args.baseUrl base URL for resolving relative URLs\n   * @param {string} args.urlTemplate Template string for\n   *  the root file of each reference sequence. The reference sequence\n   *  name will be interpolated into this string where `{refseq}` appears.\n   * @param {function} args.readFile function to use for reading remote from URLs.\n   */var\nNCListStore = /*#__PURE__*/function () {\n  function NCListStore(_ref) {var baseUrl = _ref.baseUrl,urlTemplate = _ref.urlTemplate,readFile = _ref.readFile,_ref$cacheSize = _ref.cacheSize,cacheSize = _ref$cacheSize === void 0 ? 10 : _ref$cacheSize;(0, _classCallCheck2.default)(this, NCListStore);\n    this.baseUrl = baseUrl;\n    this.urlTemplates = { root: urlTemplate };\n\n    this.readFile = readFile;\n    if (!this.readFile)\n    throw new Error(\"must provide a \\\"readFile\\\" function argument\");\n\n    this.dataRootCache = new _abortablePromiseCache.default({\n      cache: new _quickLru.default({ maxSize: cacheSize }),\n      fill: this.fetchDataRoot.bind(this) });\n\n  }(0, _createClass2.default)(NCListStore, [{ key: \"makeNCList\", value: function makeNCList()\n\n    {\n      return new _nclist.default({ readFile: this.readFile });\n    } }, { key: \"loadNCList\", value: function loadNCList(\n\n    refData, trackInfo, listUrl) {\n      refData.nclist.importExisting(\n      trackInfo.intervals.nclist,\n      refData.attrs,\n      listUrl,\n      trackInfo.intervals.urlTemplate,\n      trackInfo.intervals.lazyClass);\n\n    } }, { key: \"getDataRoot\", value: function getDataRoot(\n\n    refName) {\n      return this.dataRootCache.get(refName, refName);\n    } }, { key: \"fetchDataRoot\", value: function fetchDataRoot(\n\n    refName) {var _this2 = this;\n      var url = _url.default.resolve(\n      this.baseUrl,\n      this.urlTemplates.root.replace(/{\\s*refseq\\s*}/g, refName));\n\n\n      // fetch the trackdata\n      return (0, _util.readJSON)(url, this.readFile).then(function (trackInfo) {return (\n          // trackInfo = JSON.parse( trackInfo );\n          _this2.parseTrackInfo(trackInfo, url));});\n\n    } }, { key: \"parseTrackInfo\", value: function parseTrackInfo(\n\n    trackInfo, url) {\n      var refData = {\n        nclist: this.makeNCList(),\n        stats: {\n          featureCount: trackInfo.featureCount || 0 } };\n\n\n\n      if (trackInfo.intervals) {\n        refData.attrs = new _array_representation.default(trackInfo.intervals.classes);\n        this.loadNCList(refData, trackInfo, url);\n      }var\n\n      histograms = trackInfo.histograms;\n      if (histograms && histograms.meta) {\n        for (var i = 0; i < histograms.meta.length; i += 1) {\n          histograms.meta[i].lazyArray = new _lazy_array.default((0, _objectSpread2.default)({},\n          histograms.meta[i].arrayParams, { readFile: this.readFile }),\n          url);\n\n        }\n        refData._histograms = histograms;\n      }\n\n      // parse any strings in the histogram data that look like numbers\n      if (refData._histograms) {\n        (0, _keys.default)(refData._histograms).forEach(function (key) {\n          var entries = refData._histograms[key];\n          entries.forEach(function (entry) {\n            (0, _keys.default)(entry).forEach(function (key2) {\n              if (\n              typeof entry[key2] === 'string' &&\n              String(Number(entry[key2])) === entry[key2])\n              {\n                entry[key2] = Number(entry[key2]);\n              }\n            });\n          });\n        });\n      }\n\n      return refData;\n    } }, { key: \"getRegionStats\", value: function () {var _getRegionStats = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(\n\n      query) {var data;return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:_context.next = 2;return (\n                  this.getDataRoot(query.ref));case 2:data = _context.sent;return _context.abrupt(\"return\",\n                data.stats);case 4:case \"end\":return _context.stop();}}}, _callee, this);}));function getRegionStats(_x) {return _getRegionStats.apply(this, arguments);}return getRegionStats;}()\n\n\n    /**\n                                                                                                                                                                                                    * fetch binned counts of feature coverage in the given region.\n                                                                                                                                                                                                    *\n                                                                                                                                                                                                    * @param {object} query\n                                                                                                                                                                                                    * @param {string} query.refName reference sequence name\n                                                                                                                                                                                                    * @param {number} query.start region start\n                                                                                                                                                                                                    * @param {number} query.end region end\n                                                                                                                                                                                                    * @param {number} query.numBins number of bins desired in the feature counts\n                                                                                                                                                                                                    * @param {number} query.basesPerBin number of bp desired in each feature counting bin\n                                                                                                                                                                                                    * @returns {object} as:\n                                                                                                                                                                                                    *    `{ bins: hist, stats: statEntry }`\n                                                                                                                                                                                                    */ }, { key: \"getRegionFeatureDensities\", value: function () {var _getRegionFeatureDensities = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(_ref2) {var refName, start, end, numBins, basesPerBin, data, stats, statEntry, histogramMeta, i, binRatio, firstServerBin, histogram, bin, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, _value3, _value4, _i, val, hist;return _regenerator.default.wrap(function _callee2$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:\n\n                refName = _ref2.refName,\n                start = _ref2.start,\n                end = _ref2.end,\n                numBins = _ref2.numBins,\n                basesPerBin = _ref2.basesPerBin;_context2.next = 3;return (\n\n                  this.getDataRoot(refName));case 3:data = _context2.sent;if (!\n                numBins) {_context2.next = 8;break;}\n                basesPerBin = (end - start) / numBins;_context2.next = 13;break;case 8:if (!\n                basesPerBin) {_context2.next = 12;break;}\n                numBins = Math.ceil((end - start) / basesPerBin);_context2.next = 13;break;case 12:throw (\n\n                  new TypeError(\n                  'numBins or basesPerBin arg required for getRegionFeatureDensities'));case 13:\n\n\n\n                // pick the relevant entry in our pre-calculated stats\n                stats = data._histograms.stats || [];\n                statEntry = stats.find(function (entry) {return entry.basesPerBin >= basesPerBin;});\n\n                // The histogramMeta array describes multiple levels of histogram detail,\n                // going from the finest (smallest number of bases per bin) to the\n                // coarsest (largest number of bases per bin).\n                // We want to use coarsest histogramMeta that's at least as fine as the\n                // one we're currently rendering.\n                // TODO: take into account that the histogramMeta chosen here might not\n                // fit neatly into the current histogram (e.g., if the current histogram\n                // is at 50,000 bases/bin, and we have server histograms at 20,000\n                // and 2,000 bases/bin, then we should choose the 2,000 histogramMeta\n                // rather than the 20,000)\n                histogramMeta = data._histograms.meta[0];\n                for (i = 0; i < data._histograms.meta.length; i += 1) {\n                  if (basesPerBin >= data._histograms.meta[i].basesPerBin)\n                  histogramMeta = data._histograms.meta[i];\n                }\n\n                // number of bins in the server-supplied histogram for each current bin\n                binRatio = basesPerBin / histogramMeta.basesPerBin;\n\n                // if the server-supplied histogram fits neatly into our requested\n                if (!(binRatio > 0.9 && Math.abs(binRatio - Math.round(binRatio)) < 0.0001)) {_context2.next = 57;break;}\n                // console.log('server-supplied',query);\n                // we can use the server-supplied counts\n                firstServerBin = Math.floor(start / histogramMeta.basesPerBin);\n                binRatio = Math.round(binRatio);\n                histogram = [];\n                for (bin = 0; bin < numBins; bin += 1) {histogram[bin] = 0;}_iteratorNormalCompletion = true;_didIteratorError = false;_context2.prev = 25;_iterator = (0, _asyncIterator2.default)(\n\n                histogramMeta.lazyArray.range(\n                firstServerBin,\n                firstServerBin + binRatio * numBins - 1));case 27:_context2.next = 29;return _iterator.next();case 29:_step = _context2.sent;_iteratorNormalCompletion = _step.done;_context2.next = 33;return _step.value;case 33:_value = _context2.sent;if (_iteratorNormalCompletion) {_context2.next = 40;break;}_value3 = _value, _value4 = (0, _slicedToArray2.default)(_value3, 2), _i = _value4[0], val = _value4[1];\n\n                // this will count features that span the boundaries of\n                // the original histogram multiple times, so it's not\n                // perfectly quantitative.  Hopefully it's still useful, though.\n                histogram[Math.floor((_i - firstServerBin) / binRatio)] += val;case 37:_iteratorNormalCompletion = true;_context2.next = 27;break;case 40:_context2.next = 46;break;case 42:_context2.prev = 42;_context2.t0 = _context2[\"catch\"](25);_didIteratorError = true;_iteratorError = _context2.t0;case 46:_context2.prev = 46;_context2.prev = 47;if (!(!_iteratorNormalCompletion && _iterator.return != null)) {_context2.next = 51;break;}_context2.next = 51;return _iterator.return();case 51:_context2.prev = 51;if (!_didIteratorError) {_context2.next = 54;break;}throw _iteratorError;case 54:return _context2.finish(51);case 55:return _context2.finish(46);case 56:return _context2.abrupt(\"return\",\n\n                { bins: histogram, stats: statEntry });case 57:_context2.next = 59;return (\n\n\n\n                  data.nclist.histogram(start, end, numBins));case 59:hist = _context2.sent;return _context2.abrupt(\"return\",\n                { bins: hist, stats: statEntry });case 61:case \"end\":return _context2.stop();}}}, _callee2, this, [[25, 42, 46, 56], [47,, 51, 55]]);}));function getRegionFeatureDensities(_x2) {return _getRegionFeatureDensities.apply(this, arguments);}return getRegionFeatureDensities;}()\n\n\n    /**\n                                                                                                                                                                                                                                                                                                  * Fetch features in a given region. This method is an asynchronous generator\n                                                                                                                                                                                                                                                                                                  * yielding feature objects.\n                                                                                                                                                                                                                                                                                                  *\n                                                                                                                                                                                                                                                                                                  * @param {object} args\n                                                                                                                                                                                                                                                                                                  * @param {string} args.refName reference sequence name\n                                                                                                                                                                                                                                                                                                  * @param {number} args.start start of region. 0-based half-open.\n                                                                                                                                                                                                                                                                                                  * @param {number} args.end end of region. 0-based half-open.\n                                                                                                                                                                                                                                                                                                  * @yields {object}\n                                                                                                                                                                                                                                                                                                  */ }, { key: \"getFeatures\", value: function getFeatures(_ref3)\n    {var _this = this;var refName = _ref3.refName,start = _ref3.start,end = _ref3.end;return (0, _wrapAsyncGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3() {var data, accessors, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value2, _value5, _value6, feature, path, uniqueID;return _regenerator.default.wrap(function _callee3$(_context3) {while (1) {switch (_context3.prev = _context3.next) {case 0:_context3.next = 2;return (0, _awaitAsyncGenerator2.default)(\n                _this.getDataRoot(refName));case 2:data = _context3.sent;\n                accessors = data.attrs && data.attrs.accessors();_iteratorNormalCompletion2 = true;_didIteratorError2 = false;_context3.prev = 6;_iterator2 = (0, _asyncIterator2.default)(\n                data.nclist.iterate(start, end));case 8:_context3.next = 10;return (0, _awaitAsyncGenerator2.default)(_iterator2.next());case 10:_step2 = _context3.sent;_iteratorNormalCompletion2 = _step2.done;_context3.next = 14;return (0, _awaitAsyncGenerator2.default)(_step2.value);case 14:_value2 = _context3.sent;if (_iteratorNormalCompletion2) {_context3.next = 23;break;}_value5 = _value2, _value6 = (0, _slicedToArray2.default)(_value5, 2), feature = _value6[0], path = _value6[1];\n                // the unique ID is a stringification of the path in the\n                // NCList where the feature lives; it's unique across the\n                // top-level NCList (the top-level NCList covers a\n                // track/chromosome combination)\n\n                // only need to decorate a feature once\n                if (!feature.decorated) {\n                  uniqueID = path.join(',');\n                  _this.decorateFeature(accessors, feature, \"\".concat(refName, \",\").concat(uniqueID));\n                }_context3.next = 20;\n                return feature;case 20:_iteratorNormalCompletion2 = true;_context3.next = 8;break;case 23:_context3.next = 29;break;case 25:_context3.prev = 25;_context3.t0 = _context3[\"catch\"](6);_didIteratorError2 = true;_iteratorError2 = _context3.t0;case 29:_context3.prev = 29;_context3.prev = 30;if (!(!_iteratorNormalCompletion2 && _iterator2.return != null)) {_context3.next = 34;break;}_context3.next = 34;return (0, _awaitAsyncGenerator2.default)(_iterator2.return());case 34:_context3.prev = 34;if (!_didIteratorError2) {_context3.next = 37;break;}throw _iteratorError2;case 37:return _context3.finish(34);case 38:return _context3.finish(29);case 39:case \"end\":return _context3.stop();}}}, _callee3, null, [[6, 25, 29, 39], [30,, 34, 38]]);}))();\n\n    }\n\n    // helper method to recursively add .get and .tags methods to a feature and its\n    // subfeatures\n  }, { key: \"decorateFeature\", value: function decorateFeature(accessors, feature, id, parent) {var _this3 = this;\n      feature.get = accessors.get;\n      feature.tags = accessors.tags;\n      feature._uniqueID = id;\n      feature.id = idfunc;\n      feature._parent = parent;\n      feature.parent = parentfunc;\n      feature.children = childrenfunc;\n      (feature.get('subfeatures') || []).forEach(function (f, i) {\n        _this3.decorateFeature(accessors, f, \"\".concat(id, \"-\").concat(i), feature);\n      });\n      feature.decorated = true;\n    } }]);return NCListStore;}();exports.default = NCListStore;","var _Object$getOwnPropertyDescriptor = require(\"../core-js/object/get-own-property-descriptor\");\n\nvar _Object$getOwnPropertySymbols = require(\"../core-js/object/get-own-property-symbols\");\n\nvar _Object$keys = require(\"../core-js/object/keys\");\n\nvar defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","var _Symbol = require(\"../core-js/symbol\");\n\nvar _Promise = require(\"../core-js/promise\");\n\nvar AwaitValue = require(\"./AwaitValue\");\n\nfunction AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new _Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof AwaitValue;\n\n      _Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen[\"return\"] !== \"function\") {\n    this[\"return\"] = undefined;\n  }\n}\n\nif (typeof _Symbol === \"function\" && _Symbol.asyncIterator) {\n  AsyncGenerator.prototype[_Symbol.asyncIterator] = function () {\n    return this;\n  };\n}\n\nAsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\nAsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\nAsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};\n\nmodule.exports = AsyncGenerator;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");_Object$defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\"));var _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));var _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/toConsumableArray\"));var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/slicedToArray\"));var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));var _wrapAsyncGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/wrapAsyncGenerator\"));var _awaitAsyncGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/awaitAsyncGenerator\"));var _asyncIterator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncIterator\"));var _asyncGeneratorDelegate2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncGeneratorDelegate\"));var _url = _interopRequireDefault(require(\"url\"));\nvar _quickLru = _interopRequireDefault(require(\"quick-lru\"));\nvar _abortablePromiseCache = _interopRequireDefault(require(\"abortable-promise-cache\"));\nvar _util = require(\"./util\");var\n\nNCList = /*#__PURE__*/function () {\n  function NCList(_ref) {var readFile = _ref.readFile,_ref$cacheSize = _ref.cacheSize,cacheSize = _ref$cacheSize === void 0 ? 100 : _ref$cacheSize;(0, _classCallCheck2.default)(this, NCList);\n    this.topList = [];\n    this.chunkCache = new _abortablePromiseCache.default({\n      cache: new _quickLru.default({ maxSize: cacheSize }),\n      fill: this.readChunkItems.bind(this) });\n\n    this.readFile = readFile;\n    if (!this.readFile) throw new Error(\"must provide a \\\"readFile\\\" function\");\n  }(0, _createClass2.default)(NCList, [{ key: \"importExisting\", value: function importExisting(\n\n    nclist, attrs, baseURL, lazyUrlTemplate, lazyClass) {\n      this.topList = nclist;\n      this.attrs = attrs;\n      this.start = attrs.makeFastGetter('Start');\n      this.end = attrs.makeFastGetter('End');\n      this.lazyClass = lazyClass;\n      this.baseURL = baseURL;\n      this.lazyUrlTemplate = lazyUrlTemplate;\n    } }, { key: \"binarySearch\", value: function binarySearch(\n\n    arr, item, getter) {\n      var low = -1;\n      var high = arr.length;\n      var mid;\n\n      while (high - low > 1) {\n        mid = low + high >>> 1;\n        if (getter(arr[mid]) >= item) high = mid;else\n        low = mid;\n      }\n\n      // if we're iterating rightward, return the high index;\n      // if leftward, the low index\n      if (getter === this.end) return high;\n      return low;\n    } }, { key: \"readChunkItems\", value: function readChunkItems(\n\n    chunkNum) {\n      var url = _url.default.resolve(\n      this.baseURL,\n      this.lazyUrlTemplate.replace(/\\{Chunk\\}/gi, chunkNum));\n\n      return (0, _util.readJSON)(url, this.readFile, { defaultContent: [] });\n    } }, { key: \"iterateSublist\", value: function iterateSublist(\n\n    arr, from, to, inc, searchGet, testGet, path) {var _this = this;return (0, _wrapAsyncGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {var getChunk, getSublist, pendingPromises, i, sublist, _i, _ref2, _ref3, item, chunkNum;return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:\n                getChunk = _this.attrs.makeGetter('Chunk');\n                getSublist = _this.attrs.makeGetter('Sublist');\n\n                pendingPromises = [];\n\n                i = _this.binarySearch(arr, from, searchGet);case 4:if (!(\n                i < arr.length && i >= 0 && inc * testGet(arr[i]) < inc * to)) {_context.next = 17;break;}if (!(\n\n\n                arr[i][0] === _this.lazyClass)) {_context.next = 9;break;}(function () {\n                  // this is a lazily-loaded chunk of the nclist\n                  var chunkNum = getChunk(arr[i]);\n                  var chunkItemsP = _this.chunkCache.\n                  get(chunkNum, chunkNum).\n                  then(function (item) {return [item, chunkNum];});\n                  pendingPromises.push(chunkItemsP);})();_context.next = 11;break;case 9:_context.next = 11;\n\n\n                return [arr[i], path.concat(i)];case 11:\n\n\n                // if this node has a contained sublist, process that too\n                sublist = getSublist(arr[i]);if (!\n                sublist) {_context.next = 14;break;}\n                return _context.delegateYield((0, _asyncGeneratorDelegate2.default)((0, _asyncIterator2.default)(_this.iterateSublist(\n                sublist,\n                from,\n                to,\n                inc,\n                searchGet,\n                testGet,\n                path.concat(i))), _awaitAsyncGenerator2.default), \"t0\", 14);case 14:i += inc;_context.next = 4;break;case 17:\n\n\n\n                _i = 0;case 18:if (!(_i < pendingPromises.length)) {_context.next = 30;break;}_context.next = 21;return (0, _awaitAsyncGenerator2.default)(\n                pendingPromises[_i]);case 21:_ref2 = _context.sent;_ref3 = (0, _slicedToArray2.default)(_ref2, 2);item = _ref3[0];chunkNum = _ref3[1];if (!\n                item) {_context.next = 27;break;}\n                return _context.delegateYield((0, _asyncGeneratorDelegate2.default)((0, _asyncIterator2.default)(_this.iterateSublist(item, from, to, inc, searchGet, testGet, [].concat((0, _toConsumableArray2.default)(\n                path), [\n                chunkNum]))), _awaitAsyncGenerator2.default), \"t1\", 27);case 27:_i += 1;_context.next = 18;break;case 30:case \"end\":return _context.stop();}}}, _callee);}))();\n\n\n\n    } }, { key: \"iterate\", value: function iterate(\n\n    from, to) {var _this2 = this;return (0, _wrapAsyncGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {var inc, searchGet, testGet;return _regenerator.default.wrap(function _callee2$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:\n                // calls the given function once for each of the\n                // intervals that overlap the given interval\n                // if from <= to, iterates left-to-right, otherwise iterates right-to-left\n\n                // inc: iterate leftward or rightward\n                inc = from > to ? -1 : 1;\n                // searchGet: search on start or end\n                searchGet = from > to ? _this2.start : _this2.end;\n                // testGet: test on start or end\n                testGet = from > to ? _this2.end : _this2.start;if (!(\n\n                _this2.topList.length > 0)) {_context2.next = 5;break;}\n                return _context2.delegateYield((0, _asyncGeneratorDelegate2.default)((0, _asyncIterator2.default)(_this2.iterateSublist(\n                _this2.topList,\n                from,\n                to,\n                inc,\n                searchGet,\n                testGet,\n                [0])), _awaitAsyncGenerator2.default), \"t0\", 5);case 5:case \"end\":return _context2.stop();}}}, _callee2);}))();\n\n\n    } }, { key: \"histogram\", value: function () {var _histogram = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(\n\n      from, to, numBins) {var result, binWidth, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, feat, firstBin, lastBin, bin;return _regenerator.default.wrap(function _callee3$(_context3) {while (1) {switch (_context3.prev = _context3.next) {case 0:\n                // calls callback with a histogram of the feature density\n                // in the given interval\n\n                result = new Array(numBins);\n                result.fill(0);\n                binWidth = (to - from) / numBins;_iteratorNormalCompletion = true;_didIteratorError = false;_context3.prev = 5;_iterator = (0, _asyncIterator2.default)(\n                this.iterate(from, to));case 7:_context3.next = 9;return _iterator.next();case 9:_step = _context3.sent;_iteratorNormalCompletion = _step.done;_context3.next = 13;return _step.value;case 13:_value = _context3.sent;if (_iteratorNormalCompletion) {_context3.next = 22;break;}feat = _value;\n                firstBin = Math.max(0, (this.start(feat) - from) / binWidth | 0);\n                lastBin = Math.min(\n                numBins,\n                (this.end(feat) - from) / binWidth | 0);\n\n                for (bin = firstBin; bin <= lastBin; bin += 1) {result[bin] += 1;}case 19:_iteratorNormalCompletion = true;_context3.next = 7;break;case 22:_context3.next = 28;break;case 24:_context3.prev = 24;_context3.t0 = _context3[\"catch\"](5);_didIteratorError = true;_iteratorError = _context3.t0;case 28:_context3.prev = 28;_context3.prev = 29;if (!(!_iteratorNormalCompletion && _iterator.return != null)) {_context3.next = 33;break;}_context3.next = 33;return _iterator.return();case 33:_context3.prev = 33;if (!_didIteratorError) {_context3.next = 36;break;}throw _iteratorError;case 36:return _context3.finish(33);case 37:return _context3.finish(28);case 38:return _context3.abrupt(\"return\",\n\n                result);case 39:case \"end\":return _context3.stop();}}}, _callee3, this, [[5, 24, 28, 38], [29,, 33, 37]]);}));function histogram(_x, _x2, _x3) {return _histogram.apply(this, arguments);}return histogram;}() }]);return NCList;}();exports.default = NCList;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");_Object$defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _keys = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/keys\"));var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\")); /**\nclass ArrayRepr\nnlass for operating on indexed array representations of objects.\nnor example, if we have a lot of objects with similar attrbutes, e.g.:\nnpre class=\"code\">\nn{start: 1, end: 2, strand: -1},\n{start: 5, end: 6, strand: 1},\nnnpre>\nndescription\nwe can represent them more compactly (e.g., in JSON) something like this:\nnpre class=\"code\">\nclass = [\"start\", \"end\", \"strand\"]\nnnnnnpre>\nnf we want to represent a few different kinds of objects in our big list,\nwe can have multiple \"class\" arrays, and tag each object to identify\nwhich \"class\" array describes it.\nnor example, if we have a lot of instances of a few types of objects,\nlike this:\nnpre class=\"code\">\nn{start: 1, end: 2, strand: 1, id: 1},\n{start: 5, end: 6, strand: 1, id: 2},\nn{start: 10, end: 20, chunk: 1},\n{start: 30, end: 40, chunk: 2},\nnnpre>\nne could use the first array position to indicate the \"class\" for the\nobject, like this:\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * <pre class=\"code\">\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *     classes = [[\"start\", \"end\", \"strand\", \"id\"], [\"start\", \"end\", \"chunk\"]]\nnnnnnnnpre>\nnlso, if we occasionally want to add an ad-hoc attribute, we could just\nstick an optional dictionary onto the end:\nnpre class=\"code\">\nclasses = [[\"start\", \"end\", \"strand\", \"id\"], [\"start\", \"end\", \"chunk\"]]\nnn{foo: 1}]\nnpre>\nniven that individual objects are being represented by arrays, generic\ncode needs some way to differentiate arrays that are meant to be objects\nfrom arrays that are actually meant to be arrays.\no for each class, we include a dict with <attribute name>: true mappings\nfor each attribute that is meant to be an array.\nnlso, in cases where some attribute values are the same for all objects\nin a particular set, it may be convenient to define a \"prototype\"\nwith default values for all objects in the set\nnn the end, we get something like this:\nnpre class=\"code\">\nclasses=[\n{'attributes': ['Start', 'End', 'Subfeatures'],\nproto': {'Chrom': 'chr1'},\nisArrayAttr': {Subfeatures: true}}\nnpre>\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * That's what this class facilitates.\nvar\nArrayRepr = /*#__PURE__*/function () {\n  function ArrayRepr(classes) {(0, _classCallCheck2.default)(this, ArrayRepr);\n    this.classes = classes;\n    this.fields = [];\n    for (var cl = 0; cl < classes.length; cl += 1) {\n      this.fields[cl] = {};\n      for (var f = 0; f < classes[cl].attributes.length; f += 1) {\n        this.fields[cl][classes[cl].attributes[f]] = f + 1;\n      }\n      if (classes[cl].proto === undefined) classes[cl].proto = {};\n      if (classes[cl].isArrayAttr === undefined) classes[cl].isArrayAttr = {};\n    }\n  }\n\n  /**\n     * @private\n     */(0, _createClass2.default)(ArrayRepr, [{ key: \"attrIndices\", value: function attrIndices(\n    attr) {\n      return this.classes.map(\n      function (x) {return (\n          x.attributes.indexOf(attr) + 1 ||\n          x.attributes.indexOf(attr.toLowerCase()) + 1 ||\n          undefined);});\n\n    } }, { key: \"get\", value: function get(\n\n    obj, attr) {\n      if (attr in this.fields[obj[0]]) {\n        return obj[this.fields[obj[0]][attr]];\n      }\n\n      // try lowercase\n      var lcattr = attr.toLowerCase();\n      if (lcattr in this.fields[obj[0]]) {\n        return obj[this.fields[obj[0]][lcattr]];\n      }\n\n      var adhocIndex = this.classes[obj[0]].attributes.length + 1;\n      if (adhocIndex >= obj.length || !(attr in obj[adhocIndex])) {\n        if (attr in this.classes[obj[0]].proto)\n        return this.classes[obj[0]].proto[attr];\n        return undefined;\n      }\n      return obj[adhocIndex][attr];\n    } }, { key: \"makeSetter\", value: function makeSetter(\n\n    attr) {\n      var self = this;\n      return function set(obj, val) {\n        self.set(obj, attr, val);\n      };\n    } }, { key: \"makeGetter\", value: function makeGetter(\n\n    attr) {\n      var self = this;\n      return function get(obj) {\n        return self.get(obj, attr);\n      };\n    } }, { key: \"makeFastGetter\", value: function makeFastGetter(\n\n    attr) {\n      // can be used only if attr is guaranteed to be in\n      // the \"classes\" array for this object\n      var indices = this.attrIndices(attr);\n      return function get(obj) {\n        if (indices[obj[0]] !== undefined) return obj[indices[obj[0]]];\n        return undefined;\n      };\n    }\n\n    // construct(self, obj, klass) {\n    //   const result = new Array(self.classes[klass].length)\n    //   Object.keys(obj).forEach(attr => {\n    //     this.set(result, attr, obj[attr])\n    //   })\n    //   return result\n    // }\n\n    /**\n     * Returns fast pre-compiled getter and setter functions for use with\n     * Arrays that use this representation.\n     * When the returned <code>get</code> and <code>set</code> functions are\n     * added as methods to an Array that contains data in this\n     * representation, they provide fast access by name to the data.\n     *\n     * @returns {Object} <code>{ get: function() {...}, set: function(val) {...} }</code>\n     *\n     * @example\n     * var accessors = attrs.accessors();\n     * var feature = get_feature_from_someplace();\n     * feature.get = accessors.get;\n     * // print out the feature start and end\n     * console.log( feature.get('start') + ',' + feature.get('end') );\n     */ }, { key: \"accessors\", value: function accessors()\n    {\n      if (!this._accessors) this._accessors = this._makeAccessors();\n      return this._accessors;\n    }\n\n    /**\n       * @private\n       */ }, { key: \"_makeAccessors\", value: function _makeAccessors()\n    {\n      var indices = {};\n\n      var _tags;\n\n      var accessors = {\n        get: function get(field) {\n          var f = this.get.field_accessors[field.toLowerCase()];\n          if (f) return f.call(this);\n          return undefined;\n        },\n        set: function set(field, val) {\n          var f = this.set.field_accessors[field];\n          if (f) return f.call(this, val);\n          return undefined;\n        },\n        tags: function tags() {\n          return _tags[this[0]] || [];\n        } };\n\n      accessors.get.field_accessors = {};\n      accessors.set.field_accessors = {};\n\n      // make a data structure as: { attr_name: [offset,offset,offset], }\n      // that will be convenient for finding the location of the attr\n      // for a given class like: indexForAttr{attrname}[classnum]\n      this.classes.forEach(function (cdef, classnum) {\n        ;(cdef.attributes || []).forEach(function (attrname, offset) {\n          indices[attrname] = indices[attrname] || [];\n          indices[attrname][classnum] = offset + 1;\n\n          attrname = attrname.toLowerCase();\n\n          indices[attrname] = indices[attrname] || [];\n          indices[attrname][classnum] = offset + 1;\n        });\n      });\n\n      // lowercase all the class attributes\n      _tags = this.classes.map(function (c) {return c.attributes;});\n\n      // use that to make precalculated get and set accessors for each field\n      (0, _keys.default)(indices).forEach(function (attrname) {\n        var attrIndices = indices[attrname];\n        // get\n        accessors.get.field_accessors[attrname] = !attrIndices ?\n        function get() {\n          return undefined;\n        } :\n        function get() {\n          return this[attrIndices[this[0]]];\n        };\n\n        // // set\n        // accessors.set.field_accessors[attrname] = !attrIndices\n        //   ? () => undefined\n        //   : v => {\n        //       this[attrIndices[this[0]]] = v\n        //       return v\n        //     }\n      });\n\n      return accessors;\n    } }]);return ArrayRepr;}();var _default =\n\nArrayRepr;\n\n/*\n           \n           Copyright (c) 2007-2010 The Evolutionary Software Foundation\n           \n           Created by Mitchell Skinner <mitch_skinner@berkeley.edu>\n           \n           This package and its accompanying libraries are free software; you can\n           redistribute it and/or modify it under the terms of the LGPL (either\n           version 2.1, or at your option, any later version) or the Artistic\n           License 2.0.  Refer to LICENSE for the full license text.\n           \n           */exports.default = _default;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");_Object$defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\"));var _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/slicedToArray\"));var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));var _wrapAsyncGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/wrapAsyncGenerator\"));var _awaitAsyncGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/awaitAsyncGenerator\"));var _asyncIterator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncIterator\"));var _asyncGeneratorDelegate2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncGeneratorDelegate\"));var _url = _interopRequireDefault(require(\"url\"));\nvar _quickLru = _interopRequireDefault(require(\"quick-lru\"));\nvar _abortablePromiseCache = _interopRequireDefault(require(\"abortable-promise-cache\"));\nvar _util = require(\"./util\");\n\n/**\n                                * For a JSON array that gets too large to load in one go, this class\n                                * helps break it up into chunks and provides an\n                                * async API for using the information in the array.\n                                */var\nLazyArray = /*#__PURE__*/function () {\n  function LazyArray(_ref,\n\n  baseUrl)\n  {var urlTemplate = _ref.urlTemplate,chunkSize = _ref.chunkSize,length = _ref.length,_ref$cacheSize = _ref.cacheSize,cacheSize = _ref$cacheSize === void 0 ? 100 : _ref$cacheSize,readFile = _ref.readFile;(0, _classCallCheck2.default)(this, LazyArray);\n    this.urlTemplate = urlTemplate;\n    this.chunkSize = chunkSize;\n    this.length = length;\n    this.baseUrl = baseUrl === undefined ? '' : baseUrl;\n    this.readFile = readFile;\n    if (!readFile) throw new Error('must provide readFile callback');\n    this.chunkCache = new _abortablePromiseCache.default({\n      cache: new _quickLru.default({ maxSize: cacheSize }),\n      fill: this.getChunk.bind(this) });\n\n  }\n\n  /**\n     * call the callback on one element of the array\n     * @param i index\n     * @param callback callback, gets called with (i, value, param)\n     * @param param (optional) callback will get this as its last parameter\n     */(0, _createClass2.default)(LazyArray, [{ key: \"index\", value: function index(\n    i, callback, param) {\n      this.range(i, i, callback, undefined, param);\n    }\n\n    /**\n       * async generator for the elements in the range [start,end]\n       *\n       * @param start index of first element to call the callback on\n       * @param end index of last element to call the callback on\n       */ }, { key: \"range\", value: function range(\n    start, end) {var _this = this;return (0, _wrapAsyncGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {var firstChunk, lastChunk, chunkreadFiles, chunk, i, _ref2, _ref3, chunkNumber, chunkData;return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:\n                start = Math.max(0, start);\n                end = Math.min(end, _this.length - 1);\n\n                firstChunk = Math.floor(start / _this.chunkSize);\n                lastChunk = Math.floor(end / _this.chunkSize);\n\n                chunkreadFiles = [];\n                for (chunk = firstChunk; chunk <= lastChunk; chunk += 1) {\n                  chunkreadFiles.push(_this.chunkCache.get(chunk, chunk));\n                }\n                i = 0;case 7:if (!(i < chunkreadFiles.length)) {_context.next = 18;break;}_context.next = 10;return (0, _awaitAsyncGenerator2.default)(\n                chunkreadFiles[i]);case 10:_ref2 = _context.sent;_ref3 = (0, _slicedToArray2.default)(_ref2, 2);chunkNumber = _ref3[0];chunkData = _ref3[1];\n                return _context.delegateYield((0, _asyncGeneratorDelegate2.default)((0, _asyncIterator2.default)(_this.filterChunkData(start, end, chunkNumber, chunkData)), _awaitAsyncGenerator2.default), \"t0\", 15);case 15:i += 1;_context.next = 7;break;case 18:case \"end\":return _context.stop();}}}, _callee);}))();\n\n    } }, { key: \"getChunk\", value: function () {var _getChunk = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(\n\n      chunkNumber) {var url, data;return _regenerator.default.wrap(function _callee2$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:\n                url = this.urlTemplate.replace(/\\{Chunk\\}/gi, chunkNumber);\n                if (this.baseUrl) {\n                  url = _url.default.resolve(this.baseUrl, url);\n                }_context2.next = 4;return (\n                  (0, _util.readJSON)(url, this.readFile));case 4:data = _context2.sent;return _context2.abrupt(\"return\",\n                [chunkNumber, data]);case 6:case \"end\":return _context2.stop();}}}, _callee2, this);}));function getChunk(_x) {return _getChunk.apply(this, arguments);}return getChunk;}() }, { key: \"filterChunkData\", value: /*#__PURE__*/_regenerator.default.mark(function filterChunkData(\n\n\n    queryStart, queryEnd, chunkNumber, chunkData) {var firstIndex, chunkStart, chunkEnd, i;return _regenerator.default.wrap(function filterChunkData$(_context3) {while (1) {switch (_context3.prev = _context3.next) {case 0:\n              // index (in the overall lazy array) of the first position in this chunk\n              firstIndex = chunkNumber * this.chunkSize;\n              chunkStart = Math.max(0, queryStart - firstIndex);\n              chunkEnd = Math.min(queryEnd - firstIndex, this.chunkSize - 1);\n              i = chunkStart;case 4:if (!(i <= chunkEnd)) {_context3.next = 10;break;}_context3.next = 7;\n              return [i + firstIndex, chunkData[i]];case 7:i += 1;_context3.next = 4;break;case 10:case \"end\":return _context3.stop();}}}, filterChunkData, this);}) }]);return LazyArray;}();exports.default = LazyArray;","var _Object$defineProperty = require(\"../core-js/object/define-property\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","module.exports = require(\"core-js/library/fn/symbol/iterator\");","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","module.exports = require(\"core-js/library/fn/get-iterator\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n","require('../../modules/es6.object.get-own-property-descriptor');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","var _Array$isArray = require(\"../core-js/array/is-array\");\n\nfunction _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","var _getIterator = require(\"../core-js/get-iterator\");\n\nvar _isIterable = require(\"../core-js/is-iterable\");\n\nvar _Symbol = require(\"../core-js/symbol\");\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof _Symbol === \"undefined\" || !_isIterable(Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","require('../../modules/es6.symbol');\nmodule.exports = require('../../modules/_core').Object.getOwnPropertySymbols;\n","var AwaitValue = require(\"./AwaitValue\");\n\nfunction _awaitAsyncGenerator(value) {\n  return new AwaitValue(value);\n}\n\nmodule.exports = _awaitAsyncGenerator;","var AsyncGenerator = require(\"./AsyncGenerator\");\n\nfunction _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}\n\nmodule.exports = _wrapAsyncGenerator;","var _Symbol$iterator = require(\"../core-js/symbol/iterator\");\n\nvar _Symbol = require(\"../core-js/symbol\");\n\nfunction _asyncIterator(iterable) {\n  var method;\n\n  if (typeof _Symbol !== \"undefined\") {\n    if (_Symbol.asyncIterator) {\n      method = iterable[_Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (_Symbol$iterator) {\n      method = iterable[_Symbol$iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}\n\nmodule.exports = _asyncIterator;","'use strict';\n\nclass QuickLRU {\n\tconstructor(options = {}) {\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst value = this.oldCache.get(key);\n\t\t\tthis.oldCache.delete(key);\n\t\t\tthis._set(key, value);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tset(key, value) {\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, value);\n\t\t} else {\n\t\t\tthis._set(key, value);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\thas(key) {\n\t\treturn this.cache.has(key) || this.oldCache.has(key);\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this.oldCache.get(key);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tyield item;\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget size() {\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn this._size + oldCacheSize;\n\t}\n}\n\nmodule.exports = QuickLRU;\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var _Array$isArray = require(\"../core-js/array/is-array\");\n\nvar arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var _Array$from = require(\"../core-js/array/from\");\n\nvar _isIterable = require(\"../core-js/is-iterable\");\n\nvar _Symbol = require(\"../core-js/symbol\");\n\nfunction _iterableToArray(iter) {\n  if (typeof _Symbol !== \"undefined\" && _isIterable(Object(iter))) return _Array$from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");_Object$defineProperty(exports, \"__esModule\", { value: true });exports.readJSON = readJSON;exports.foo = foo;var _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));var _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\"));function readJSON(_x, _x2) {return _readJSON.apply(this, arguments);}function _readJSON() {_readJSON = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(url, readFile) {var options,_options$defaultConte,defaultContent,str,_args = arguments;return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};_options$defaultConte =\n            options.defaultContent, defaultContent = _options$defaultConte === void 0 ? {} : _options$defaultConte;_context.prev = 2;_context.next = 5;return (\n\n\n              readFile(url, { encoding: 'utf8' }));case 5:str = _context.sent;return _context.abrupt(\"return\",\n            JSON.parse(str));case 9:_context.prev = 9;_context.t0 = _context[\"catch\"](2);if (!(\n\n            _context.t0.code === 'ENOENT' || _context.t0.status === 404)) {_context.next = 13;break;}return _context.abrupt(\"return\",\n            defaultContent);case 13:throw _context.t0;case 14:case \"end\":return _context.stop();}}}, _callee, null, [[2, 9]]);}));return _readJSON.apply(this, arguments);}\n\n\n\n\n\nfunction foo() {}"],"sourceRoot":""}