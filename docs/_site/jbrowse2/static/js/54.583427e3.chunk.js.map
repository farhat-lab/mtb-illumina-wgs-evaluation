{"version":3,"sources":["../../../plugins/alignments/src/LinearPileupDisplay/components/SetMaxHeight.tsx"],"names":["useStyles","makeStyles","theme","root","width","closeButton","position","right","spacing","top","color","palette","grey","field","margin","observer","props","model","handleClose","classes","maxHeight","useState","max","setMax","open","onClose","id","aria-label","className","onClick","value","onChange","event","target","placeholder","variant","type","style","marginLeft","setMaxHeight","Number","isNaN","undefined"],"mappings":"iQAcMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,KAETC,YAAa,CACXC,SAAU,WACVC,MAAOL,EAAMM,QAAQ,GACrBC,IAAKP,EAAMM,QAAQ,GACnBE,MAAOR,EAAMS,QAAQC,KAAK,MAE5BC,MAAO,CACLC,OAAQZ,EAAMM,QAAQ,QA0DXO,8BAtDf,SAAyBC,GAMtB,IACOC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,YACTC,EAAUnB,IAFf,EAG0BiB,EAAnBG,iBAHP,MAGmB,GAHnB,IAIqBC,mBAAS,GAAD,OAAID,IAJjC,mBAIME,EAJN,KAIWC,EAJX,KAMD,OACE,kBAAC,IAAD,CAAQC,MAAI,EAACC,QAASP,GACpB,kBAAC,IAAD,CAAaQ,GAAG,sBAAhB,iBAEE,kBAAC,IAAD,CACEC,aAAW,QACXC,UAAWT,EAAQd,YACnBwB,QAASX,GAET,kBAAC,IAAD,QAGJ,kBAAC,IAAD,KACE,yBAAKU,UAAWT,EAAQhB,MACtB,kBAAC,IAAD,qCACA,kBAAC,IAAD,CACE2B,MAAOR,EACPS,SAAU,SAAAC,GACRT,EAAOS,EAAMC,OAAOH,QAEtBI,YAAY,gCAEd,kBAAC,IAAD,CACEC,QAAQ,YACRzB,MAAM,UACN0B,KAAK,SACLC,MAAO,CAAEC,WAAY,IACrBT,QAAS,WACPZ,EAAMsB,aACI,KAARjB,GAAekB,OAAOC,OAAOnB,QAAcoB,GAANpB,GAEvCJ,MATJ","file":"static/js/54.583427e3.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  TextField,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 500,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  field: {\n    margin: theme.spacing(2),\n  },\n}))\n\nfunction SetMaxHeightDlg(props: {\n  model: {\n    maxHeight?: number\n    setMaxHeight: Function\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const classes = useStyles()\n  const { maxHeight = '' } = model\n  const [max, setMax] = useState(`${maxHeight}`)\n\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle id=\"alert-dialog-title\">\n        Filter options\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <div className={classes.root}>\n          <Typography>Set max height for the track</Typography>\n          <TextField\n            value={max}\n            onChange={event => {\n              setMax(event.target.value)\n            }}\n            placeholder=\"Enter max height for layout\"\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            style={{ marginLeft: 20 }}\n            onClick={() => {\n              model.setMaxHeight(\n                max !== '' && !Number.isNaN(+max) ? +max : undefined,\n              )\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(SetMaxHeightDlg)\n"],"sourceRoot":""}