{"version":3,"sources":["../../../node_modules/@material-ui/icons/KeyboardArrowLeft.js","../../../node_modules/@material-ui/icons/KeyboardArrowRight.js","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Controls.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotView.tsx","../../../node_modules/@material-ui/icons/KeyboardArrowUp.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","theme","importFormContainer","padding","spacing","margin","importFormEntry","minWidth","errorMessage","textAlign","paddingTop","paddingBottom","FormRow","observer","model","selected","onChange","error","classes","assemblyNames","getSession","Grid","container","item","justify","alignItems","TextField","select","variant","inputProps","event","Number","target","Boolean","disabled","className","map","name","idx","MenuItem","key","DotplotImportForm","useState","numRows","setSelected","uri","trackData","setTrackData","session","length","Container","style","width","Typography","color","Paper","marginBottom","Array","_","index","val","copy","slice","href","description","location","setLocation","loc","Button","data-testid","onClick","setViews","bpPerPx","offsetPx","setAssemblyNames","fileName","lastIndexOf","configuration","addTrackConf","trackId","Date","now","selection","type","adapter","pafLocation","toggleTrack","iconButton","controls","overflow","background","whiteSpace","position","boxSizing","border","right","top","zIndex","DotplotControls","IconButton","hview","scroll","title","vview","zoomOutButton","zoomInButton","activateTrackSelector","root","viewContainer","marginTop","display","overlay","pointerEvents","gridRow","gridColumn","cursor","fill","vtext","content","spacer","htext","popover","maxWidth","wordBreak","majorTickLabel","fontSize","majorTick","stroke","minorTick","locstr","px","view","pxToBp","refName","start","offset","oob","coord","Math","floor","toLocaleString","getBlockLabelKeysToHide","blocks","viewOffsetPx","blockLabelKeysToHide","sortedBlocks","sort","a","b","alen","end","positions","round","forEach","y","labelBounds","max","some","push","chooseGridPitch","scale","minMajorPitchPx","minMinorPitchPx","minMajorPitchBp","abs","majorMagnitude","parseInt","toExponential","split","majorPitch","majorPitchPx","minorPitch","makeTicks","regions","emitMajor","emitMinor","ticks","gridPitch","iterPitch","i","region","minBase","maxBase","base","ceil","HorizontalAxis","viewWidth","borderY","htextRotation","hide","dynamicBlocks","contentBlocks","staticBlocks","height","filter","includes","x","transform","JSON","stringify","dominantBaseline","textAnchor","tick","bpToPx","x1","x2","y1","y2","strokeWidth","data-bp","VerticalAxis","borderX","viewHeight","vtextRotation","children","hblocks","vblocks","htop","displayedRegionsTotalPx","hbottom","vtop","vbottom","getOffset","rect","left","DotplotViewInternal","mousecurrClient","setMouseCurrClient","mousedownClient","setMouseDownClient","mouseupClient","setMouseUpClient","ref","useRef","distanceX","distanceY","lref","rref","timeout","delta","scheduled","blank","svg","current","getBoundingClientRect","rrect","lrect","mousedown","mousecurr","mouseup","mouserect","useEffect","onWheel","origEvent","normalizeWheel","preventDefault","ctrlKey","pixelY","setScaleFactor","clearTimeout","setTimeout","transaction","zoomTo","pixelX","window","requestAnimationFrame","curr","addEventListener","removeEventListener","globalMouseMove","clientX","clientY","cleanup","globalMouseUp","undefined","Controls","scaleFactor","role","onMouseDown","button","min","tracks","track","displays","RenderingComponent","getConf","open","onMenuItemClick","callback","onClose","anchorReference","anchorPosition","menuItems","label","zoomIn","onDotplotView","DotplotView","initialized","loading","String","LinearProgress","ImportForm"],"mappings":"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","file":"static/js/29.36f92cc4.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n}), 'KeyboardArrowLeft');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\n\nexports.default = _default;","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { getSession } from '@jbrowse/core/util'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n  importFormEntry: {\n    minWidth: 180,\n  },\n  errorMessage: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n}))\nconst FormRow = observer(\n  ({\n    model,\n    selected,\n    onChange,\n    error,\n  }: {\n    model: DotplotViewModel\n    selected: number\n    onChange: (arg0: number) => void\n    error?: string\n  }) => {\n    const classes = useStyles()\n    const { assemblyNames } = getSession(model) as { assemblyNames: string[] }\n    return (\n      <Grid container item justify=\"center\" spacing={2} alignItems=\"center\">\n        <TextField\n          select\n          variant=\"outlined\"\n          value={assemblyNames[selected] ? selected : ''}\n          inputProps={{ 'data-testid': 'dotplot-input' }}\n          onChange={event => {\n            onChange(Number(event.target.value))\n          }}\n          error={Boolean(error)}\n          disabled={Boolean(error)}\n          className={classes.importFormEntry}\n        >\n          {assemblyNames.map((name, idx) => (\n            <MenuItem key={name} value={idx}>\n              {name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n    )\n  },\n)\nconst DotplotImportForm = observer(({ model }: { model: DotplotViewModel }) => {\n  const classes = useStyles()\n  const [numRows] = useState(2)\n  const [selected, setSelected] = useState([0, 0])\n  const [trackData, setTrackData] = useState<FileLocation>({ uri: '' })\n  const session = getSession(model)\n  const { assemblyNames } = session\n  const error = assemblyNames.length ? '' : 'No configured assemblies'\n\n  function onOpenClick() {\n    model.setViews([\n      { bpPerPx: 0.1, offsetPx: 0 },\n      { bpPerPx: 0.1, offsetPx: 0 },\n    ])\n    model.setAssemblyNames([\n      assemblyNames[selected[0]],\n      assemblyNames[selected[1]],\n    ])\n\n    if ('uri' in trackData && trackData.uri) {\n      const fileName = trackData.uri\n        ? trackData.uri.slice(trackData.uri.lastIndexOf('/') + 1)\n        : null\n\n      // @ts-ignore\n      const configuration = session.addTrackConf({\n        trackId: `fileName-${Date.now()}`,\n        name: fileName,\n        assemblyNames: selected.map(selection => assemblyNames[selection]),\n        type: 'SyntenyTrack',\n        adapter: {\n          type: 'PAFAdapter',\n          pafLocation: trackData,\n          assemblyNames: selected.map(selection => assemblyNames[selection]),\n        },\n      })\n      model.toggleTrack(configuration.trackId)\n    }\n  }\n\n  return (\n    <Container className={classes.importFormContainer}>\n      <Grid\n        container\n        spacing={1}\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ width: '50%', margin: '0 auto' }}\n      >\n        {error ? (\n          <Typography color=\"error\">{error}</Typography>\n        ) : (\n          <>\n            <Grid item>\n              <Paper style={{ padding: 12, marginBottom: 10 }}>\n                <p style={{ textAlign: 'center' }}>\n                  Select assemblies for dotplot view\n                </p>\n                {[...new Array(numRows)].map((_, index) => (\n                  <FormRow\n                    key={`row_${index}_${selected[index]}`}\n                    error={error}\n                    selected={selected[index]}\n                    onChange={val => {\n                      const copy = selected.slice(0)\n                      copy[index] = val\n                      setSelected(copy)\n                    }}\n                    model={model}\n                  />\n                ))}\n              </Paper>\n\n              <Paper style={{ padding: 12, marginBottom: 10 }}>\n                <p style={{ textAlign: 'center' }}>\n                  <b>Optional</b>: Add a PAF{' '}\n                  <a href=\"https://github.com/lh3/miniasm/blob/master/PAF.md\">\n                    (pairwise mapping format)\n                  </a>{' '}\n                  file for the dotplot view. Note that the first assembly should\n                  be the left column of the PAF and the second assembly should\n                  be the right column\n                </p>\n                <Grid container justify=\"center\">\n                  <Grid item>\n                    <FileSelector\n                      name=\"URL\"\n                      description=\"\"\n                      location={trackData}\n                      setLocation={loc => setTrackData(loc)}\n                    />\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n            <Grid item>\n              <Button\n                data-testid=\"submitDotplot\"\n                onClick={onOpenClick}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Open\n              </Button>\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </Container>\n  )\n})\n\nexport default DotplotImportForm\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport ZoomOut from '@material-ui/icons/ZoomOut'\nimport ZoomIn from '@material-ui/icons/ZoomIn'\nimport ArrowUp from '@material-ui/icons/KeyboardArrowUp'\nimport ArrowDown from '@material-ui/icons/KeyboardArrowDown'\nimport ArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport ArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport { observer } from 'mobx-react'\nimport { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles({\n  iconButton: {\n    padding: '4px',\n    margin: '0 2px 0 2px',\n  },\n  controls: {\n    overflow: 'hidden',\n    background: 'white',\n    whiteSpace: 'nowrap',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    border: '1px solid #a2a2a2',\n    right: 0,\n    top: 0,\n    zIndex: 1001, // needs to be above overlay but below things that might naturally go on top of it like a context menu from jbrowse-core/ui\n  },\n})\n\nconst DotplotControls = observer(({ model }: { model: DotplotViewModel }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.controls}>\n      <IconButton\n        onClick={() => {\n          model.hview.scroll(-100)\n        }}\n        className={classes.iconButton}\n        title=\"left\"\n        color=\"secondary\"\n      >\n        <ArrowLeft />\n      </IconButton>\n\n      <IconButton\n        onClick={() => {\n          model.hview.scroll(100)\n        }}\n        className={classes.iconButton}\n        title=\"left\"\n        color=\"secondary\"\n      >\n        <ArrowRight />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          model.vview.scroll(100)\n        }}\n        className={classes.iconButton}\n        title=\"left\"\n        color=\"secondary\"\n      >\n        <ArrowDown />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          model.vview.scroll(-100)\n        }}\n        className={classes.iconButton}\n        title=\"left\"\n        color=\"secondary\"\n      >\n        <ArrowUp />\n      </IconButton>\n      <IconButton\n        onClick={model.zoomOutButton}\n        className={classes.iconButton}\n        color=\"secondary\"\n      >\n        <ZoomOut />\n      </IconButton>\n\n      <IconButton\n        onClick={model.zoomInButton}\n        className={classes.iconButton}\n        title=\"zoom in\"\n        color=\"secondary\"\n      >\n        <ZoomIn />\n      </IconButton>\n\n      <IconButton\n        onClick={model.activateTrackSelector}\n        title=\"Open track selector\"\n        value=\"track_select\"\n        data-testid=\"circular_track_select\"\n        color=\"secondary\"\n      >\n        <TrackSelectorIcon />\n      </IconButton>\n    </div>\n  )\n})\n\nexport default DotplotControls\n","import React, { useState, useEffect, useRef } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport { transaction } from 'mobx'\nimport { LinearProgress } from '@material-ui/core'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { Menu } from '@jbrowse/core/ui'\nimport { BaseBlock } from '@jbrowse/core/util/blockTypes'\nimport normalizeWheel from 'normalize-wheel'\nimport { DotplotViewModel, Dotplot1DViewModel } from '../model'\nimport ImportForm from './ImportForm'\nimport Controls from './Controls'\n\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      position: 'relative',\n      marginBottom: theme.spacing(1),\n      overflow: 'hidden',\n    },\n    viewContainer: {\n      marginTop: '3px',\n    },\n    container: {\n      display: 'grid',\n      padding: 5,\n      position: 'relative',\n    },\n    overlay: {\n      pointerEvents: 'none',\n      overflow: 'hidden',\n      display: 'flex',\n      width: '100%',\n      gridRow: '1/2',\n      gridColumn: '2/2',\n      zIndex: 100, // needs to be below controls\n      '& path': {\n        cursor: 'crosshair',\n        fill: 'none',\n      },\n    },\n    vtext: {\n      gridColumn: '1/2',\n      gridRow: '1/2',\n      pointerEvents: 'none',\n    },\n    content: {\n      gridColumn: '2/2',\n      gridRow: '1/2',\n    },\n    spacer: {\n      gridColumn: '1/2',\n      gridRow: '2/2',\n    },\n    htext: {\n      gridColumn: '2/2',\n      gridRow: '2/2',\n      pointerEvents: 'none',\n    },\n    error: {\n      color: 'red',\n    },\n    popover: {\n      background: '#fff',\n      maxWidth: 400,\n      wordBreak: 'break-all',\n      zIndex: 1000,\n      border: '1px solid black',\n      pointerEvents: 'none',\n      position: 'absolute',\n    },\n    majorTickLabel: {\n      fontSize: '11px',\n    },\n    majorTick: {\n      stroke: '#555',\n    },\n    minorTick: {\n      stroke: '#999',\n    },\n  }\n})\n\ntype Coord = [number, number] | undefined\ntype Timer = ReturnType<typeof setTimeout>\ntype Rect = { left: number; top: number }\n\nfunction locstr(px: number, view: Dotplot1DViewModel) {\n  const { refName, start, offset, oob } = view.pxToBp(px)\n  const coord = Math.floor(start + offset)\n  return oob ? 'out of bounds' : `${refName}:${coord.toLocaleString('en-US')}`\n}\n\nfunction getBlockLabelKeysToHide(\n  blocks: BaseBlock[],\n  length: number,\n  viewOffsetPx: number,\n) {\n  const blockLabelKeysToHide: string[] = []\n  const sortedBlocks = blocks.slice(0).sort((a, b) => {\n    const alen = a.end - a.start\n    const blen = b.end - b.start\n    return blen - alen\n  })\n  const positions = new Array(Math.round(length))\n  sortedBlocks.forEach(({ key, offsetPx }) => {\n    const y = Math.round(length - offsetPx + viewOffsetPx)\n    const labelBounds = [Math.max(y - 12, 0), y]\n    if (y === 0 || positions.slice(...labelBounds).some(Boolean)) {\n      blockLabelKeysToHide.push(key)\n    } else {\n      positions.fill(true, ...labelBounds)\n    }\n  })\n  return blockLabelKeysToHide\n}\n/**\n * Given a scale ( bp/px ) and minimum distances (px) between major and minor\n * gridlines, return an object like `{ majorPitch: bp, minorPitch: bp }` giving\n * the gridline pitches to use.\n */\nexport function chooseGridPitch(\n  scale: number,\n  minMajorPitchPx: number,\n  minMinorPitchPx: number,\n) {\n  scale = Math.abs(scale)\n  const minMajorPitchBp = minMajorPitchPx * scale\n  const majorMagnitude = parseInt(\n    Number(minMajorPitchBp).toExponential().split(/e/i)[1],\n    10,\n  )\n\n  let majorPitch = 10 ** majorMagnitude\n  while (majorPitch < minMajorPitchBp) {\n    majorPitch *= 2\n    if (majorPitch >= minMajorPitchBp) break\n    majorPitch *= 2.5\n  }\n\n  majorPitch = Math.max(majorPitch, 5)\n\n  const majorPitchPx = majorPitch / scale\n\n  let minorPitch = 0\n  if (!(majorPitch % 10) && majorPitchPx / 10 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 10\n  } else if (!(majorPitch % 5) && majorPitchPx / 5 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 5\n  } else if (!(majorPitch % 2) && majorPitchPx / 2 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 2\n  }\n\n  return { majorPitch, minorPitch }\n}\n\nfunction makeTicks(\n  regions: BaseBlock[],\n  bpPerPx: number,\n  emitMajor = true,\n  emitMinor = true,\n) {\n  const ticks = []\n  const gridPitch = chooseGridPitch(bpPerPx, 60, 15)\n  const iterPitch = gridPitch.minorPitch || gridPitch.majorPitch\n  for (let i = 0; i < regions.length; i++) {\n    const region = regions[i]\n    const { start, end, refName } = region\n    let index = 0\n\n    const minBase = start\n    const maxBase = end\n    for (\n      let base = Math.ceil(minBase / iterPitch) * iterPitch;\n      base < maxBase;\n      base += iterPitch\n    ) {\n      if (emitMinor && base % gridPitch.majorPitch) {\n        ticks.push({ type: 'minor', base: base - 1, index, refName })\n        index += 1\n      } else if (\n        emitMajor &&\n        Math.abs(base - region.start) > gridPitch.minorPitch\n      ) {\n        ticks.push({ type: 'major', base: base - 1, index, refName })\n        index += 1\n      }\n    }\n  }\n  return ticks\n}\n\nconst HorizontalAxis = observer(({ model }: { model: DotplotViewModel }) => {\n  const classes = useStyles()\n  const { viewWidth, borderY, hview, htextRotation } = model\n  const hide = getBlockLabelKeysToHide(\n    hview.dynamicBlocks.contentBlocks,\n    viewWidth,\n    hview.offsetPx,\n  )\n  const ticks = makeTicks(hview.staticBlocks.contentBlocks, hview.bpPerPx)\n  return (\n    <svg width={viewWidth} height={borderY} className={classes.htext}>\n      <g>\n        {hview.dynamicBlocks.contentBlocks\n          .filter(region => !hide.includes(region.key))\n          .map(region => {\n            const x = region.offsetPx\n            const y = 0\n            return (\n              <text\n                transform={`rotate(${htextRotation},${\n                  x - hview.offsetPx\n                },${y})`}\n                key={JSON.stringify(region)}\n                x={x - hview.offsetPx}\n                y={y + 1}\n                fill=\"#000000\"\n                dominantBaseline=\"hanging\"\n                textAnchor=\"end\"\n              >\n                {`${region.refName}:${\n                  region.start !== 0\n                    ? Math.floor(region.start).toLocaleString('en-US')\n                    : ''\n                }`}\n              </text>\n            )\n          })}\n        {ticks.map(tick => {\n          const x =\n            (hview.bpToPx({ refName: tick.refName, coord: tick.base }) || 0) -\n            hview.offsetPx\n          return (\n            <line\n              key={`line-${JSON.stringify(tick)}`}\n              x1={x}\n              x2={x}\n              y1={0}\n              y2={tick.type === 'major' ? 6 : 4}\n              strokeWidth={1}\n              stroke={tick.type === 'major' ? '#555' : '#999'}\n              className={\n                tick.type === 'major' ? classes.majorTick : classes.minorTick\n              }\n              data-bp={tick.base}\n            />\n          )\n        })}\n        {ticks\n          .filter(tick => tick.type === 'major')\n          .map(tick => {\n            const x =\n              (hview.bpToPx({ refName: tick.refName, coord: tick.base }) || 0) -\n              hview.offsetPx\n            const y = 0\n            return (\n              <text\n                x={x - 7}\n                y={y}\n                transform={`rotate(${htextRotation},${x},${y})`}\n                key={`text-${JSON.stringify(tick)}`}\n                style={{ fontSize: '11px' }}\n                className={classes.majorTickLabel}\n                dominantBaseline=\"middle\"\n                textAnchor=\"end\"\n              >\n                {(tick.base + 1).toLocaleString('en-US')}\n              </text>\n            )\n          })}\n      </g>\n    </svg>\n  )\n})\nconst VerticalAxis = observer(({ model }: { model: DotplotViewModel }) => {\n  const classes = useStyles()\n  const { borderX, viewHeight, vview, vtextRotation } = model\n  const hide = getBlockLabelKeysToHide(\n    vview.dynamicBlocks.contentBlocks,\n    viewHeight,\n    vview.offsetPx,\n  )\n  const ticks = makeTicks(vview.staticBlocks.contentBlocks, vview.bpPerPx)\n  return (\n    <svg className={classes.vtext} width={borderX} height={viewHeight}>\n      <g>\n        {vview.dynamicBlocks.contentBlocks\n          .filter(region => !hide.includes(region.key))\n          .map(region => {\n            const y = region.offsetPx\n            const x = borderX\n            return (\n              <text\n                transform={`rotate(${vtextRotation},${x},${y})`}\n                key={JSON.stringify(region)}\n                x={borderX}\n                y={viewHeight - y + vview.offsetPx}\n                fill=\"#000000\"\n                textAnchor=\"end\"\n              >\n                {`${region.refName}:${\n                  region.start !== 0 ? Math.floor(region.start) : ''\n                }`}\n              </text>\n            )\n          })}\n        {ticks.map(tick => {\n          const y =\n            (vview.bpToPx({ refName: tick.refName, coord: tick.base }) || 0) -\n            vview.offsetPx\n          return (\n            <line\n              key={`line-${JSON.stringify(tick)}`}\n              y1={viewHeight - y}\n              y2={viewHeight - y}\n              x1={borderX}\n              x2={borderX - (tick.type === 'major' ? 6 : 4)}\n              strokeWidth={1}\n              stroke={tick.type === 'major' ? '#555' : '#999'}\n              className={\n                tick.type === 'major' ? classes.majorTick : classes.minorTick\n              }\n              data-bp={tick.base}\n            />\n          )\n        })}\n        {ticks\n          .filter(tick => tick.type === 'major')\n          .map(tick => {\n            const y =\n              (vview.bpToPx({ refName: tick.refName, coord: tick.base }) || 0) -\n              vview.offsetPx\n            return (\n              <text\n                y={viewHeight - y - 3}\n                x={borderX - 7}\n                key={`text-${JSON.stringify(tick)}`}\n                textAnchor=\"end\"\n                dominantBaseline=\"hanging\"\n                style={{ fontSize: '11px' }}\n                className={classes.majorTickLabel}\n              >\n                {(tick.base + 1).toLocaleString('en-US')}\n              </text>\n            )\n          })}\n      </g>\n    </svg>\n  )\n})\n\nconst Grid = observer(\n  ({\n    model,\n    children,\n    stroke = '#000a',\n  }: {\n    model: DotplotViewModel\n    children: React.ReactNode\n    stroke?: string\n  }) => {\n    const { viewWidth, viewHeight, hview, vview } = model\n    const hblocks = hview.dynamicBlocks.contentBlocks\n    const vblocks = vview.dynamicBlocks.contentBlocks\n    const htop = hview.displayedRegionsTotalPx - hview.offsetPx\n    const hbottom = hblocks[0].offsetPx - hview.offsetPx\n    const vtop = vview.displayedRegionsTotalPx - vview.offsetPx\n    const vbottom = vblocks[0].offsetPx - vview.offsetPx\n    return (\n      <svg\n        style={{ background: 'rgba(0,0,0,0.12)' }}\n        width={viewWidth}\n        height={viewHeight}\n      >\n        {' '}\n        <rect\n          x={hbottom}\n          y={viewHeight - vtop}\n          width={htop - hbottom}\n          height={vtop - vbottom}\n          fill=\"#fff\"\n        />\n        <g>\n          {hblocks.map(region => {\n            const x = region.offsetPx - hview.offsetPx\n            return (\n              <line\n                key={JSON.stringify(region)}\n                x1={x}\n                y1={0}\n                x2={x}\n                y2={viewHeight}\n                stroke={stroke}\n              />\n            )\n          })}\n          {vblocks.map(region => {\n            const y = viewHeight - (region.offsetPx - vview.offsetPx)\n            return (\n              <line\n                key={JSON.stringify(region)}\n                x1={0}\n                y1={y}\n                x2={viewWidth}\n                y2={y}\n                stroke={stroke}\n              />\n            )\n          })}\n          <line x1={htop} y1={0} x2={htop} y2={viewHeight} stroke={stroke} />\n          <line\n            x1={0}\n            y1={viewHeight - vtop}\n            x2={viewWidth}\n            y2={viewHeight - vtop}\n            stroke={stroke}\n          />\n        </g>\n        {children}\n      </svg>\n    )\n  },\n)\n// produces offsetX/offsetY coordinates from a clientX and an element's\n// getBoundingClientRect\nfunction getOffset(coord: Coord, rect: Rect) {\n  return coord && ([coord[0] - rect.left, coord[1] - rect.top] as Coord)\n}\n\nconst DotplotViewInternal = observer(\n  ({ model }: { model: DotplotViewModel }) => {\n    const { hview, vview, viewHeight } = model\n    const classes = useStyles()\n    const [mousecurrClient, setMouseCurrClient] = useState<Coord>()\n    const [mousedownClient, setMouseDownClient] = useState<Coord>()\n    const [mouseupClient, setMouseUpClient] = useState<Coord>()\n    const ref = useRef<HTMLDivElement>(null)\n    const root = useRef<HTMLDivElement>(null)\n    const distanceX = useRef(0)\n    const distanceY = useRef(0)\n    const lref = useRef<HTMLDivElement>(null)\n    const rref = useRef<HTMLDivElement>(null)\n    const timeout = useRef<Timer>()\n    const delta = useRef(0)\n    const scheduled = useRef(false)\n    const blank = { left: 0, top: 0, width: 0, height: 0 }\n    const svg = ref.current?.getBoundingClientRect() || blank\n    const rrect = rref.current?.getBoundingClientRect() || blank\n    const lrect = lref.current?.getBoundingClientRect() || blank\n    const mousedown = getOffset(mousedownClient, svg)\n    const mousecurr = getOffset(mousecurrClient, svg)\n    const mouseup = getOffset(mouseupClient, svg)\n    const mouserect = mouseup || mousecurr\n\n    // use non-React wheel handler to properly prevent body scrolling\n    useEffect(() => {\n      function onWheel(origEvent: WheelEvent) {\n        const event = normalizeWheel(origEvent)\n        origEvent.preventDefault()\n        if (origEvent.ctrlKey === true) {\n          delta.current += event.pixelY / 500\n          model.vview.setScaleFactor(\n            delta.current < 0 ? 1 - delta.current : 1 / (1 + delta.current),\n          )\n          model.hview.setScaleFactor(\n            delta.current < 0 ? 1 - delta.current : 1 / (1 + delta.current),\n          )\n          if (timeout.current) {\n            clearTimeout(timeout.current)\n          }\n          timeout.current = setTimeout(() => {\n            transaction(() => {\n              model.hview.setScaleFactor(1)\n              model.vview.setScaleFactor(1)\n              model.hview.zoomTo(\n                delta.current > 0\n                  ? model.hview.bpPerPx * (1 + delta.current)\n                  : model.hview.bpPerPx / (1 - delta.current),\n              )\n              model.vview.zoomTo(\n                delta.current > 0\n                  ? model.vview.bpPerPx * (1 + delta.current)\n                  : model.vview.bpPerPx / (1 - delta.current),\n              )\n            })\n            delta.current = 0\n          }, 300)\n        } else {\n          distanceX.current += event.pixelX\n          distanceY.current -= event.pixelY\n          if (!scheduled.current) {\n            scheduled.current = true\n\n            window.requestAnimationFrame(() => {\n              transaction(() => {\n                model.hview.scroll(distanceX.current)\n                model.vview.scroll(distanceY.current)\n              })\n              scheduled.current = false\n              distanceX.current = 0\n              distanceY.current = 0\n            })\n          }\n        }\n      }\n      if (ref.current) {\n        const curr = ref.current\n        curr.addEventListener('wheel', onWheel)\n        return () => {\n          curr.removeEventListener('wheel', onWheel)\n        }\n      }\n      return () => {}\n    }, [model.hview, model.vview])\n\n    useEffect(() => {\n      function globalMouseMove(event: MouseEvent) {\n        setMouseCurrClient([event.clientX, event.clientY])\n      }\n      window.addEventListener('mousemove', globalMouseMove)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n      }\n    }, [])\n\n    // detect a mouseup after a mousedown was submitted, autoremoves mouseup\n    // once that single mouseup is set\n    useEffect(() => {\n      let cleanup = () => {}\n\n      function globalMouseUp(event: MouseEvent) {\n        if (\n          mousedown &&\n          mousecurr &&\n          Math.abs(mousedown[0] - mousecurr[0]) > 3 &&\n          Math.abs(mousedown[1] - mousecurr[1]) > 3\n        ) {\n          setMouseUpClient([event.clientX, event.clientY])\n        } else {\n          setMouseDownClient(undefined)\n        }\n      }\n\n      if (mousedown && !mouseup) {\n        window.addEventListener('mouseup', globalMouseUp, true)\n        cleanup = () => {\n          window.removeEventListener('mouseup', globalMouseUp, true)\n        }\n      }\n      return cleanup\n    }, [mousedown, mousecurr, mouseup])\n\n    return (\n      <div ref={root} className={classes.root}>\n        <Controls model={model} />\n\n        <div className={classes.container}>\n          <div\n            style={{\n              display: 'grid',\n              transform: `scaleX(${model.hview.scaleFactor}) scaleY(${model.vview.scaleFactor})`,\n            }}\n          >\n            <VerticalAxis model={model} />\n            <HorizontalAxis model={model} />\n            <div\n              ref={ref}\n              style={{ position: 'relative' }}\n              className={classes.content}\n            >\n              {mouserect ? (\n                <div\n                  ref={lref}\n                  className={classes.popover}\n                  style={{\n                    left:\n                      mouserect[0] -\n                      (mousedown && mouserect[0] - mousedown[0] < 0\n                        ? lrect.width\n                        : 0),\n                    top:\n                      mouserect[1] -\n                      (mousedown && mouserect[1] - mousedown[1] < 0\n                        ? lrect.height\n                        : 0),\n                  }}\n                >\n                  {`x-${locstr(mouserect[0], hview)}`}\n                  <br />\n                  {`y-${locstr(viewHeight - mouserect[1], vview)}`}\n                </div>\n              ) : null}\n              {mousedown &&\n              mouserect &&\n              Math.abs(mousedown[0] - mouserect[0]) > 3 &&\n              Math.abs(mousedown[1] - mouserect[1]) > 3 ? (\n                <div\n                  ref={rref}\n                  className={classes.popover}\n                  style={{\n                    left:\n                      mousedown[0] -\n                      (mouserect[0] - mousedown[0] < 0 ? 0 : rrect.width),\n                    top:\n                      mousedown[1] -\n                      (mouserect[1] - mousedown[1] < 0 ? 0 : rrect.height),\n                  }}\n                >\n                  {`x-${locstr(mousedown[0], hview)}`}\n                  <br />\n                  {`y-${locstr(viewHeight - mousedown[1], vview)}`}\n                </div>\n              ) : null}\n\n              <div\n                role=\"presentation\"\n                style={{ cursor: 'crosshair' }}\n                onMouseDown={event => {\n                  if (event.button === 0) {\n                    setMouseDownClient([event.clientX, event.clientY])\n                    setMouseCurrClient([event.clientX, event.clientY])\n                  }\n                }}\n              >\n                <Grid model={model}>\n                  {mousedown && mouserect ? (\n                    <rect\n                      fill=\"rgba(255,0,0,0.3)\"\n                      x={Math.min(mouserect[0], mousedown[0])}\n                      y={Math.min(mouserect[1], mousedown[1])}\n                      width={Math.abs(mouserect[0] - mousedown[0])}\n                      height={Math.abs(mouserect[1] - mousedown[1])}\n                    />\n                  ) : null}\n                </Grid>\n              </div>\n              <div className={classes.spacer} />\n            </div>\n            <div className={classes.overlay}>\n              {model.tracks.map(track => {\n                const [display] = track.displays\n                const { RenderingComponent } = display\n\n                return RenderingComponent ? (\n                  <RenderingComponent\n                    key={getConf(track, 'trackId')}\n                    model={display}\n                  />\n                ) : null\n              })}\n            </div>\n            <Menu\n              open={Boolean(mouseup)}\n              onMenuItemClick={(_, callback) => {\n                callback()\n                setMouseUpClient(undefined)\n                setMouseDownClient(undefined)\n              }}\n              onClose={() => {\n                setMouseUpClient(undefined)\n                setMouseDownClient(undefined)\n              }}\n              anchorReference=\"anchorPosition\"\n              anchorPosition={\n                mouseupClient\n                  ? {\n                      top: mouseupClient[1] + 30,\n                      left: mouseupClient[0] + 30,\n                    }\n                  : undefined\n              }\n              style={{ zIndex: 1000 }}\n              menuItems={[\n                {\n                  label: 'Zoom in',\n                  onClick: () => {\n                    if (mousedown && mouseup) {\n                      model.zoomIn(mousedown, mouseup)\n                    }\n                  },\n                },\n                {\n                  label: 'Open linear synteny view',\n                  onClick: () => {\n                    if (mousedown && mouseup) {\n                      model.onDotplotView(mousedown, mouseup)\n                    }\n                  },\n                },\n              ]}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  },\n)\nconst DotplotView = observer(({ model }: { model: DotplotViewModel }) => {\n  const { initialized, loading, error } = model\n  const classes = useStyles()\n\n  if (!initialized && !loading) {\n    return <ImportForm model={model} />\n  }\n\n  if (error) {\n    return <p className={classes.error}>{String(error)}</p>\n  }\n  if (loading) {\n    return (\n      <div>\n        <p>Loading...</p>\n        <LinearProgress />\n      </div>\n    )\n  }\n\n  return <DotplotViewInternal model={model} />\n})\n\nexport default DotplotView\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');\n\nexports.default = _default;"],"sourceRoot":""}