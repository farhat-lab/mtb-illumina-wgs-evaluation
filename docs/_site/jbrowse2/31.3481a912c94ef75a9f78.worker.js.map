{"version":3,"sources":["../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Header.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/LinearComparativeView.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportForm.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/LinearSyntenyView.tsx"],"names":["useStyles","makeStyles","theme","headerBar","gridArea","display","spacer","flexGrow","emphasis","background","palette","secondary","main","padding","spacing","hovered","light","displayName","paddingTop","paddingLeft","paddingRight","inputBase","color","contrastText","inputRoot","backgroundColor","inputFocused","borderColor","primary","InteractWithSquiggles","observer","model","IconButton","onClick","toggleInteract","title","interactToggled","LinkViews","toggleLinkViews","linkViews","Sync","toggleIntraviewLinks","showIntraviewLinks","Header","size","classes","setHeaderHeight","height","className","withSize","monitorHeight","root","position","marginBottom","overflow","breakpointMarker","top","width","viewContainer","marginTop","container","overlay","zIndex","content","Overlays","tracks","map","track","displays","RenderingComponent","key","getConf","style","MiddleComparativeView","views","ReactComponent","getEnv","pluginManager","getViewType","type","OverlayComparativeView","view","id","LinearComparativeView","some","t","d","importFormContainer","importFormEntry","minWidth","errorMessage","textAlign","paddingBottom","formPaper","maxWidth","margin","FormRow","selected","onChange","error","assemblyNames","getSession","Grid","item","justify","alignItems","TextField","select","variant","value","event","Number","target","Boolean","disabled","name","idx","MenuItem","ImportForm","useState","setSelected","numRows","uri","trackData","setTrackData","session","length","a","assemblyManager","Promise","all","selection","waitForAssembly","assembly","bpPerPx","offsetPx","hideHeader","displayedRegions","getSnapshot","regions","filter","f","setViews","forEach","setWidth","fileName","slice","lastIndexOf","configuration","addTrackConf","trackId","Date","now","adapter","pafLocation","toggleTrack","Container","Typography","Paper","Array","_","index","val","copy","href","description","location","setLocation","loc","Button","LinearSyntenyView","initialized"],"mappings":"4PAaMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,UAAW,CACTC,SAAU,kBACVC,QAAS,QAEXC,OAAQ,CACNC,SAAU,GAEZC,SAAU,CACRC,WAAYP,EAAMQ,QAAQC,UAAUC,KACpCC,QAASX,EAAMY,QAAQ,IAEzBC,QAAS,CACPN,WAAYP,EAAMQ,QAAQC,UAAUK,OAEtCC,YAAa,CACXR,WAAYP,EAAMQ,QAAQC,UAAUC,KACpCM,WAAY,EACZC,YAAajB,EAAMY,QAAQ,GAC3BM,aAAclB,EAAMY,QAAQ,IAE9BO,UAAW,CACTC,MAAOpB,EAAMQ,QAAQC,UAAUY,cAEjCC,UAAW,CACT,UAAW,CACTC,gBAAiBvB,EAAMQ,QAAQC,UAAUK,QAG7CU,aAAc,CACZC,YAAazB,EAAMQ,QAAQkB,QAAQhB,KACnCa,gBAAiBvB,EAAMQ,QAAQC,UAAUK,WAIvCa,EAAwBC,oBAC5B,YAAsD,IAAnDC,EAAmD,EAAnDA,MACD,OACE,kBAACC,EAAA,EAAD,CACEC,QAASF,EAAMG,eACfC,MAAM,uCAELJ,EAAMK,gBACL,kBAAC,IAAD,MAEA,kBAAC,IAAD,UAOJC,EAAYP,oBAChB,YAAsD,IAAnDC,EAAmD,EAAnDA,MACD,OACE,kBAACC,EAAA,EAAD,CACEC,QAASF,EAAMO,gBACfH,MAAM,mDAELJ,EAAMQ,UACL,kBAAC,IAAD,CAAUjB,MAAM,cAEhB,kBAAC,IAAD,CAAaA,MAAM,kBAOvBkB,EAAOV,oBAAS,YAAsD,IAAnDC,EAAmD,EAAnDA,MACvB,OACE,kBAACC,EAAA,EAAD,CACEC,QAASF,EAAMU,qBACfN,MAAM,oCAELJ,EAAMW,mBACL,kBAAC,IAAD,CAAapB,MAAM,cAEnB,kBAAC,IAAD,CAAgBA,MAAM,kBAMxBqB,EAASb,oBACb,YAMM,IALJC,EAKI,EALJA,MACAa,EAII,EAJJA,KAKMC,EAAU7C,IAGhB,OADA+B,EAAMe,gBAAgBF,EAAKG,QAEzB,yBAAKC,UAAWH,EAAQ1C,WACtB,kBAACkC,EAAD,CAAWN,MAAOA,IAClB,kBAACF,EAAD,CAAuBE,MAAOA,IAC9B,kBAACS,EAAD,CAAMT,MAAOA,IAEb,yBAAKiB,UAAWH,EAAQvC,aAMjB2C,qBAAS,CAAEC,eAAe,GAA1BD,CAAkCN,GC/G3C3C,EAAYC,aAAW,SAAAC,GAC3B,MAAO,CACLiD,KAAM,CACJC,SAAU,WACVC,aAAcnD,EAAMY,QAAQ,GAC5BwC,SAAU,UAEZC,iBAAkB,CAChBH,SAAU,WACVI,IAAK,EACLT,OAAQ,OACRU,MAAO,MACPhD,WAAY,WAEdiD,cAAe,CACbC,UAAW,OAEbC,UAAW,CACTvD,QAAS,QAEXwD,QAAS,CACPC,OAAQ,IACR1D,SAAU,OAEZ2D,QAAS,CACP3D,SAAU,WAQV4D,EAAWlC,oBAAS,YAAsB,IAAnBC,EAAmB,EAAnBA,MACrBc,EAAU7C,IAChB,OACE,oCACG+B,EAAMkC,OAAOC,KAAI,SAAAC,GAAS,IAClB9D,EADkB,YACP8D,EAAMC,SADC,MAEjBC,EAAuBhE,EAAvBgE,mBACR,OAAOA,EACL,yBACErB,UAAWH,EAAQgB,QACnBS,IAAKC,kBAAQJ,EAAO,WACpBK,MAAO,CAAEzB,OAAQ1C,EAAQ0C,SAEzB,kBAACsB,EAAD,CAAoBtC,MAAO1B,KAE3B,YAONoE,EAAwB3C,oBAAS,YAAsB,IAAnBC,EAAmB,EAAnBA,MAClCc,EAAU7C,IACR0E,EAAU3C,EAAV2C,MAKAC,EAJkBC,iBAAO7C,GAAzB8C,cAGuBC,YAAYJ,EAAM,GAAGK,MAC5CJ,eAER,OACE,6BACE,kBAAC,EAAD,CAAQ5C,MAAOA,IACf,yBAAKiB,UAAWH,EAAQe,WACtB,kBAACe,EAAD,CAAgB5C,MAAO2C,EAAM,KAC7B,yBAAKF,MAAO,CAAEnE,QAAS,SACrB,kBAAC2D,EAAD,CAAUjC,MAAOA,KAEnB,kBAAC4C,EAAD,CAAgB5C,MAAO2C,EAAM,UAK/BM,EAAyBlD,oBAAS,YAAsB,IAAnBC,EAAmB,EAAnBA,MACnCc,EAAU7C,IACR0E,EAAU3C,EAAV2C,MACAG,EAAkBD,iBAAO7C,GAAzB8C,cACR,OACE,6BACE,kBAAC,EAAD,CAAQ9C,MAAOA,IACf,yBAAKiB,UAAWH,EAAQe,WACtB,yBAAKZ,UAAWH,EAAQkB,SACtB,yBAAKS,MAAO,CAAEpB,SAAU,aACrBsB,EAAMR,KAAI,SAAAe,GAET,IACQN,EADSE,EAAcC,YAAYG,EAAKF,MACxCJ,eACR,OAAO,kBAACA,EAAD,CAAgBL,IAAKW,EAAKC,GAAInD,MAAOkD,QAGhD,kBAACjB,EAAD,CAAUjC,MAAOA,UAOrBoD,EAAwBrD,oBAAS,YAAsB,IAAnBC,EAAmB,EAAnBA,MAIxC,OAHeA,EAAMkC,OAAOmB,MAAK,SAAAC,GAAC,OAChCA,EAAEjB,SAASgB,MAAK,SAACE,GAAD,OAA8Bf,kBAAQe,EAAG,gBAGzD,kBAACb,EAAD,CAAuB1C,MAAOA,IAE9B,kBAACiD,EAAD,CAAwBjD,MAAOA,OAIpBoD,a,mNCrGTnF,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCqF,oBAAqB,CACnB1E,QAASX,EAAMY,QAAQ,IAEzB0E,gBAAiB,CACfC,SAAU,KAEZC,aAAc,CACZC,UAAW,SACXzE,WAAYhB,EAAMY,QAAQ,GAC1B8E,cAAe1F,EAAMY,QAAQ,IAE/B+E,UAAW,CACTC,SAAU,IACVC,OAAQ,SACRlF,QAAS,GACTwC,aAAc,QAGZ2C,EAAUlE,oBACd,YAUM,IATJC,EASI,EATJA,MACAkE,EAQI,EARJA,SACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,MAOMtD,EAAU7C,IACRoG,EAAkBC,qBAAWtE,GAA7BqE,cACR,OACE,kBAACE,EAAA,EAAD,CAAM1C,WAAS,EAAC2C,MAAI,EAACC,QAAQ,SAAS1F,QAAS,EAAG2F,WAAW,UAC3D,kBAACC,EAAA,EAAD,CACEC,QAAM,EACNC,QAAQ,WACRC,MAAOT,EAAcH,GAAYA,EAAW,GAC5CC,SAAU,SAAAY,GACRZ,EAASa,OAAOD,EAAME,OAAOH,SAE/BV,MAAOc,QAAQd,GACfe,SAAUD,QAAQd,GAClBnD,UAAWH,EAAQ2C,iBAElBY,EAAclC,KAAI,SAACiD,EAAMC,GAAP,OACjB,kBAACC,EAAA,EAAD,CAAU/C,IAAK6C,EAAMN,MAAOO,GACzBD,WAwIAG,EAhIIxF,oBAAS,YAAkD,IAA/CC,EAA+C,EAA/CA,MACvBc,EAAU7C,IAD4D,EAE5CuH,mBAAS,CAAC,EAAG,IAF+B,mBAErEtB,EAFqE,KAE3DuB,EAF2D,OAG1DD,mBAAS,GAApBE,EAHqE,sBAI1CF,mBAAuB,CAAEG,IAAK,KAJY,mBAIrEC,EAJqE,KAI1DC,EAJ0D,KAKtEC,EAAUxB,qBAAWtE,GACnBqE,EAAkByB,EAAlBzB,cACFD,EAAQC,EAAc0B,OAAS,GAAK,2BAPkC,4CAS5E,gCAAAC,EAAA,6DACUC,EAAoBH,EAApBG,gBADV,KAGEjG,EAHF,SAKUkG,QAAQC,IACZjC,EACG/B,IADH,uCACO,WAAMiE,GAAN,eAAAJ,EAAA,sEACoBC,EAAgBI,gBACrChC,EAAc+B,IAFb,YACGE,EADH,iDAKM,CACLtD,KAAM,mBACNuD,QAAS,EACTC,SAAU,EACVC,YAAY,EAEZC,iBAAkBC,sBAAYL,EAASM,WAXxC,gCAcI,MAdJ,2CADP,uDAiBGC,QAAO,SAAAC,GAAC,QAAMA,MAvBvB,wBAGQC,SAHR,gBA2BE/G,EAAM2C,MAAMqE,SAAQ,SAAA9D,GAAI,OAAIA,EAAK+D,SAASjH,EAAM0B,UAE5C,QAASkE,GAAaA,EAAUD,MAC5BuB,EAAWtB,EAAUD,IACvBC,EAAUD,IAAIwB,MAAMvB,EAAUD,IAAIyB,YAAY,KAAO,GACrD,KAGEC,EAAgBvB,EAAQwB,aAAa,CACzCC,QAAS,YAAF,OAAcC,KAAKC,OAC1BrC,KAAM8B,EACN7C,cAAeH,EAAS/B,KAAI,SAAAiE,GAAS,OAAI/B,EAAc+B,MACvDpD,KAAM,eACN0E,QAAS,CACP1E,KAAM,aACN2E,YAAa/B,EACbvB,cAAeH,EAAS/B,KAAI,SAAAiE,GAAS,OAAI/B,EAAc+B,SAG3DpG,EAAM4H,YAAYP,EAAcE,UA9CpC,4CAT4E,sBA2D5E,OACE,kBAACM,EAAA,EAAD,CAAW5G,UAAWH,EAAQ0C,qBAC3BY,EACC,kBAAC0D,EAAA,EAAD,CAAYvI,MAAM,SAAS6E,GAE3B,oCACE,kBAAC2D,EAAA,EAAD,CAAO9G,UAAWH,EAAQgD,WACxB,kBAACS,EAAA,EAAD,CACE1C,WAAS,EACT2C,MAAI,EACJC,QAAQ,SACR1F,QAAS,EACT2F,WAAW,UAEX,kBAACH,EAAA,EAAD,CAAMC,MAAI,GACR,uBAAG/B,MAAO,CAAEmB,UAAW,WAAvB,sCAGC,YAAI,IAAIoE,MAAMtC,IAAUvD,KAAI,SAAC8F,EAAGC,GAAJ,OAC3B,kBAACjE,EAAD,CACE1B,IAAG,cAAS2F,EAAT,YAAkBhE,EAASgE,IAC9B9D,MAAOA,EACPF,SAAUA,EAASgE,GACnB/D,SAAU,SAAAgE,GACR,IAAMC,EAAOlE,EAASiD,MAAM,GAC5BiB,EAAKF,GAASC,EACd1C,EAAY2C,IAEdpI,MAAOA,UAOjB,kBAAC+H,EAAA,EAAD,CAAO9G,UAAWH,EAAQgD,WACxB,kBAACS,EAAA,EAAD,CAAM1C,WAAS,EAAC4C,QAAQ,UACtB,uBAAGhC,MAAO,CAAEmB,UAAW,WACrB,uCADF,cAC6B,IAC3B,uBAAGyE,KAAK,qDAAR,6BAEK,IAJP,0JASA,kBAAC9D,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC,eAAD,CACEY,KAAK,MACLkD,YAAY,GACZC,SAAU3C,EACV4C,YAAa,SAAAC,GAAG,OAAI5C,EAAa4C,SAKzC,kBAAClE,EAAA,EAAD,CAAM1C,WAAS,EAAC4C,QAAQ,UACtB,kBAACF,EAAA,EAAD,CAAMC,MAAI,GACR,kBAACkE,EAAA,EAAD,CAAQxI,QArHwD,2CAqHlC2E,QAAQ,YAAYtF,MAAM,WAAxD,eC3LRoJ,EAAoB5I,oBACxB,YAAkD,IAA/CC,EAA+C,EAA/CA,MAED,OADwBA,EAAhB4I,YAID,kBAACxF,EAAA,QAAD,CAAgCpD,MAAOA,IAFrC,kBAAC,EAAD,CAAYA,MAAOA,OAMjB2I","file":"31.3481a912c94ef75a9f78.worker.js","sourcesContent":["import React from 'react'\nimport LeakAddIcon from '@material-ui/icons/LeakAdd'\nimport LeakRemoveIcon from '@material-ui/icons/LeakRemove'\nimport LinkIcon from '@material-ui/icons/Link'\nimport LinkOffIcon from '@material-ui/icons/LinkOff'\nimport LocationSearchingIcon from '@material-ui/icons/LocationSearching'\nimport LocationDisabledIcon from '@material-ui/icons/LocationDisabled'\nimport IconButton from '@material-ui/core/IconButton'\nimport { withSize } from 'react-sizeme'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport { LinearComparativeViewModel } from '../model'\n\nconst useStyles = makeStyles(theme => ({\n  headerBar: {\n    gridArea: '1/1/auto/span 2',\n    display: 'flex',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  emphasis: {\n    background: theme.palette.secondary.main,\n    padding: theme.spacing(1),\n  },\n  hovered: {\n    background: theme.palette.secondary.light,\n  },\n  displayName: {\n    background: theme.palette.secondary.main,\n    paddingTop: 3,\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  inputBase: {\n    color: theme.palette.secondary.contrastText,\n  },\n  inputRoot: {\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.light,\n    },\n  },\n  inputFocused: {\n    borderColor: theme.palette.primary.main,\n    backgroundColor: theme.palette.secondary.light,\n  },\n}))\n\nconst InteractWithSquiggles = observer(\n  ({ model }: { model: LinearComparativeViewModel }) => {\n    return (\n      <IconButton\n        onClick={model.toggleInteract}\n        title=\"Toggle interacting with the overlay\"\n      >\n        {model.interactToggled ? (\n          <LocationSearchingIcon />\n        ) : (\n          <LocationDisabledIcon />\n        )}\n      </IconButton>\n    )\n  },\n)\n\nconst LinkViews = observer(\n  ({ model }: { model: LinearComparativeViewModel }) => {\n    return (\n      <IconButton\n        onClick={model.toggleLinkViews}\n        title=\"Toggle linked scrolls and behavior across views\"\n      >\n        {model.linkViews ? (\n          <LinkIcon color=\"secondary\" />\n        ) : (\n          <LinkOffIcon color=\"secondary\" />\n        )}\n      </IconButton>\n    )\n  },\n)\n\nconst Sync = observer(({ model }: { model: LinearComparativeViewModel }) => {\n  return (\n    <IconButton\n      onClick={model.toggleIntraviewLinks}\n      title=\"Toggle rendering intraview links\"\n    >\n      {model.showIntraviewLinks ? (\n        <LeakAddIcon color=\"secondary\" />\n      ) : (\n        <LeakRemoveIcon color=\"secondary\" />\n      )}\n    </IconButton>\n  )\n})\n\nconst Header = observer(\n  ({\n    model,\n    size,\n  }: {\n    model: LinearComparativeViewModel\n    size: { height: number }\n  }) => {\n    const classes = useStyles()\n\n    model.setHeaderHeight(size.height)\n    return (\n      <div className={classes.headerBar}>\n        <LinkViews model={model} />\n        <InteractWithSquiggles model={model} />\n        <Sync model={model} />\n\n        <div className={classes.spacer} />\n      </div>\n    )\n  },\n)\n\nexport default withSize({ monitorHeight: true })(Header)\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { getEnv } from 'mobx-state-tree'\nimport { LinearComparativeViewModel } from '../model'\nimport Header from './Header'\n\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      position: 'relative',\n      marginBottom: theme.spacing(1),\n      overflow: 'hidden',\n    },\n    breakpointMarker: {\n      position: 'absolute',\n      top: 0,\n      height: '100%',\n      width: '3px',\n      background: 'magenta',\n    },\n    viewContainer: {\n      marginTop: '3px',\n    },\n    container: {\n      display: 'grid',\n    },\n    overlay: {\n      zIndex: 100,\n      gridArea: '1/1',\n    },\n    content: {\n      gridArea: '1/1',\n    },\n  }\n})\n\ninterface Props {\n  model: LinearComparativeViewModel\n}\nconst Overlays = observer(({ model }: Props) => {\n  const classes = useStyles()\n  return (\n    <>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        return RenderingComponent ? (\n          <div\n            className={classes.overlay}\n            key={getConf(track, 'trackId')}\n            style={{ height: display.height }}\n          >\n            <RenderingComponent model={display} />\n          </div>\n        ) : null\n      })}\n    </>\n  )\n})\n\n// The comparative is in the middle of the views\nconst MiddleComparativeView = observer(({ model }: Props) => {\n  const classes = useStyles()\n  const { views } = model\n  const { pluginManager } = getEnv(model)\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const viewType = pluginManager.getViewType(views[0].type) as any\n  const { ReactComponent } = viewType\n\n  return (\n    <div>\n      <Header model={model} />\n      <div className={classes.container}>\n        <ReactComponent model={views[0]} />\n        <div style={{ display: 'grid' }}>\n          <Overlays model={model} />\n        </div>\n        <ReactComponent model={views[1]} />\n      </div>\n    </div>\n  )\n})\nconst OverlayComparativeView = observer(({ model }: Props) => {\n  const classes = useStyles()\n  const { views } = model\n  const { pluginManager } = getEnv(model)\n  return (\n    <div>\n      <Header model={model} />\n      <div className={classes.container}>\n        <div className={classes.content}>\n          <div style={{ position: 'relative' }}>\n            {views.map(view => {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const viewType = pluginManager.getViewType(view.type) as any\n              const { ReactComponent } = viewType\n              return <ReactComponent key={view.id} model={view} />\n            })}\n          </div>\n          <Overlays model={model} />\n        </div>\n      </div>\n    </div>\n  )\n})\n\nconst LinearComparativeView = observer(({ model }: Props) => {\n  const middle = model.tracks.some(t =>\n    t.displays.some((d: AnyConfigurationModel) => getConf(d, 'middle')),\n  )\n  return middle ? (\n    <MiddleComparativeView model={model} />\n  ) : (\n    <OverlayComparativeView model={model} />\n  )\n})\n\nexport default LinearComparativeView\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { getSession } from '@jbrowse/core/util'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport { Paper, Typography } from '@material-ui/core'\nimport { LinearSyntenyViewModel } from '../model'\n\n// the below importsused for multi-way synteny, not implemented yet\n// import AddIcon from '@material-ui/icons/Add'\n// import IconButton from '@material-ui/core/IconButton'\n//\n\nconst useStyles = makeStyles(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n  },\n  importFormEntry: {\n    minWidth: 180,\n  },\n  errorMessage: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  formPaper: {\n    maxWidth: 600,\n    margin: '0 auto',\n    padding: 12,\n    marginBottom: 10,\n  },\n}))\nconst FormRow = observer(\n  ({\n    model,\n    selected,\n    onChange,\n    error,\n  }: {\n    model: LinearSyntenyViewModel\n    selected: number\n    onChange: (arg0: number) => void\n    error?: string\n  }) => {\n    const classes = useStyles()\n    const { assemblyNames } = getSession(model) as { assemblyNames: string[] }\n    return (\n      <Grid container item justify=\"center\" spacing={2} alignItems=\"center\">\n        <TextField\n          select\n          variant=\"outlined\"\n          value={assemblyNames[selected] ? selected : ''}\n          onChange={event => {\n            onChange(Number(event.target.value))\n          }}\n          error={Boolean(error)}\n          disabled={Boolean(error)}\n          className={classes.importFormEntry}\n        >\n          {assemblyNames.map((name, idx) => (\n            <MenuItem key={name} value={idx}>\n              {name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n    )\n  },\n)\nconst ImportForm = observer(({ model }: { model: LinearSyntenyViewModel }) => {\n  const classes = useStyles()\n  const [selected, setSelected] = useState([0, 0])\n  const [numRows] = useState(2)\n  const [trackData, setTrackData] = useState<FileLocation>({ uri: '' })\n  const session = getSession(model)\n  const { assemblyNames } = session\n  const error = assemblyNames.length ? '' : 'No configured assemblies'\n\n  async function onOpenClick() {\n    const { assemblyManager } = session\n\n    model.setViews(\n      // @ts-ignore\n      await Promise.all(\n        selected\n          .map(async selection => {\n            const assembly = await assemblyManager.waitForAssembly(\n              assemblyNames[selection],\n            )\n            if (assembly) {\n              return {\n                type: 'LinearGenomeView',\n                bpPerPx: 1,\n                offsetPx: 0,\n                hideHeader: true,\n                // @ts-ignore\n                displayedRegions: getSnapshot(assembly.regions),\n              }\n            }\n            return null\n          })\n          .filter(f => !!f),\n      ),\n    )\n\n    model.views.forEach(view => view.setWidth(model.width))\n\n    if ('uri' in trackData && trackData.uri) {\n      const fileName = trackData.uri\n        ? trackData.uri.slice(trackData.uri.lastIndexOf('/') + 1)\n        : null\n\n      // @ts-ignore\n      const configuration = session.addTrackConf({\n        trackId: `fileName-${Date.now()}`,\n        name: fileName,\n        assemblyNames: selected.map(selection => assemblyNames[selection]),\n        type: 'SyntenyTrack',\n        adapter: {\n          type: 'PAFAdapter',\n          pafLocation: trackData,\n          assemblyNames: selected.map(selection => assemblyNames[selection]),\n        },\n      })\n      model.toggleTrack(configuration.trackId)\n    }\n  }\n\n  return (\n    <Container className={classes.importFormContainer}>\n      {error ? (\n        <Typography color=\"error\">{error}</Typography>\n      ) : (\n        <>\n          <Paper className={classes.formPaper}>\n            <Grid\n              container\n              item\n              justify=\"center\"\n              spacing={4}\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <p style={{ textAlign: 'center' }}>\n                  Select assemblies for synteny view\n                </p>\n                {[...new Array(numRows)].map((_, index) => (\n                  <FormRow\n                    key={`row_${index}_${selected[index]}`}\n                    error={error}\n                    selected={selected[index]}\n                    onChange={val => {\n                      const copy = selected.slice(0)\n                      copy[index] = val\n                      setSelected(copy)\n                    }}\n                    model={model}\n                  />\n                ))}\n              </Grid>\n            </Grid>\n          </Paper>\n\n          <Paper className={classes.formPaper}>\n            <Grid container justify=\"center\">\n              <p style={{ textAlign: 'center' }}>\n                <b>Optional</b>: Add a PAF{' '}\n                <a href=\"https://github.com/lh3/miniasm/blob/master/PAF.md\">\n                  (pairwise mapping format)\n                </a>{' '}\n                file for the linear synteny view. Note that the first assembly\n                should be the left column of the PAF and the second assembly\n                should be the right column\n              </p>\n              <Grid item>\n                <FileSelector\n                  name=\"URL\"\n                  description=\"\"\n                  location={trackData}\n                  setLocation={loc => setTrackData(loc)}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Button onClick={onOpenClick} variant=\"contained\" color=\"primary\">\n                Open\n              </Button>\n            </Grid>\n          </Grid>\n        </>\n      )}\n    </Container>\n  )\n})\n\nexport default ImportForm\n\n/* ability to add another assembly commented out for now\n    Add another assembly...\n        <IconButton\n          onClick={() => setNumRows(rows => rows + 1)}\n          color=\"primary\"\n        >\n          <AddIcon />\n      </IconButton>\n            */\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport LinearComparativeViewComponent from '../../LinearComparativeView/components/LinearComparativeView'\nimport { LinearSyntenyViewModel } from '../model'\nimport ImportForm from './ImportForm'\n\nconst LinearSyntenyView = observer(\n  ({ model }: { model: LinearSyntenyViewModel }) => {\n    const { initialized } = model\n    if (!initialized) {\n      return <ImportForm model={model} />\n    }\n    return <LinearComparativeViewComponent model={model} />\n  },\n)\n\nexport default LinearSyntenyView\n"],"sourceRoot":""}